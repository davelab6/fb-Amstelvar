<?xml version="1.0" encoding="UTF-8"?>
<ttFont ttVttLibVersion="1.0">
  <fpgm>
    <assembly>/* Font-program */
/* ACT generated Thu Sep 24 10:35:16 2020 */

FDEF[], 9

/* Set fv to X
       pv perpendicular to italic angle

   CALL[], 9 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 10

/* Set fv to italic angle
       pv to Y

   CALL[], 10 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 16

/* Set fv to X
       pv perpendicular to adjusted italic angle

   CALL[], 16 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 6
RS[]
#PUSH, 7
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 31

/* fn 31 equalizes two cvts below a given ppem size

   CALL[], &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, 31 */

#BEGIN
#PUSHOFF

/* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel &lt;= 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[] /* #samples/pixel not involved */
    MPPEM[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;act ppem size&gt; */

    GT[]
    IF[]
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    POP[] /* ppem Size not involved */
    #PUSH, 64

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt; */

    #PUSH, 4 /* child cvt */
    CINDEX[]
    RCVT[]
    #PUSH, 4 /* parent cvt */
    CINDEX[]
    RCVT[]
    SUB[]
    ABS[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt;, &lt;|[child cvt] - [parent cvt]|&gt; */

    ROLL[]
    MUL[]
    GT[]
    IF[] /* 1 &gt; #samples/pixel * delta cvt */
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 40

/* Set fv to adjusted italic angle
       pv to Y

   CALL[], 40 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 7
RS[]
#PUSH, 6
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 70

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 70 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 71

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, 71 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 72

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 72 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 73

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, 73 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 74

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 74 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 70 */
    #PUSH, 70
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 75

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, &lt;flag&gt;, 75 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 71 */
    #PUSH, 71
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 76

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 76 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 72 */
    #PUSH, 72
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 77

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, &lt;flag&gt;, 77 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 73 */
    #PUSH, 73
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 78

/* apply minimum distance and round &lt;dist&gt; depending on s[2], &lt;code&gt;, and pv
   code = 0: position
   code = 1: distance
   code = 2: delta distance (for fractional inheritance)

   CALL[], &lt;dist&gt;, &lt;code&gt;, 78

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;dist&gt;, &lt;code&gt; */

SWAP[]
DUP[]
#PUSH, 0
LT[]
ROLL[]
ROLL[]
ABS[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

#PUSH, 0, 3 /* code */
CINDEX[]
EQ[]
IF[] /* position */

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 64

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

ELSE[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 1, 3 /* code */
    CINDEX[]
    EQ[]
    IF[] /* distance */
        #PUSH, 5 /* minimum distance */
        RS[]
        MAX[]
    EIF[]

    #PUSH, 79 /* #samples/pixel */
    CALL[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

EIF[]

SWAP[]
#PUSH, 98 /* round to virtual grid */
CALL[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;[|dist|]&gt; */

SWAP[]
POP[]

/* STACK: &lt;negDist&gt;, &lt;[|dist|]&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[dist]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 79

/* depending on rendering environment and pv determine #samples/pixel for rounding etc.

   notice that for PVs other than X or Y, this method will default to X, reflecting the
   bias inherent in the asymmetrical nature of ClearType

   CALL[], 79

   returns the #samples/pixel in 26.6 */

#BEGIN
#PUSHOFF

#PUSH, 8, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 80

/* depending on rendering environment and pv determine actual stroke optimization method

   CALL[], 80

   returns with method on stack (see fn 112 for definition of method) */

#BEGIN
#PUSHOFF

#PUSH, 12, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 81

   /* adjust advance width to compensate for rasterizer's rounding errors 

   CALL[], &lt;rsb&gt;, 81 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rsb&gt; */

SVTCA[X]
DUP[]
GC[O]

/* STACK: &lt;rsb&gt;, &lt;rsb.x&gt; */
#PUSH, 2
RS[]
DUP[]
#PUSH, 4096 /* fract AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* fract AW bit not set */
SWAP[]
#PUSH, 256 /* comp AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* comp AW bit not set */
AND[]
IF[]
    #PUSH, 32
    ADD[]
    FLOOR[]
EIF[]

SCFS[]

#PUSHON
#END
ENDF[]

FDEF[], 83

/* CALL[], &lt;radicand&gt;, 83

   returns with square root of radicand on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;radicand&gt; */

#PUSH, 0, 2
CINDEX[]

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

#WBeginLoop83:

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    GTEQ[]
    #PUSH, WOffset83a
    SWAP[]
    JROT[], (WOffset83a=#WEndLoop83) /* while low &lt;= high */

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    ADD[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

    DUP[]
    DUP[]
    #PUSH, 6 /* radicand */
    CINDEX[]
    SWAP[]
    DIV[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt;, &lt;mid&gt;, &lt;radicand/mid&gt; */

    LT[]
    IF[]

        /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

        ROLL[]
        POP[]
        #PUSH, 1
        ADD[]
        SWAP[]

        /* STACK: &lt;radicand&gt;, &lt;mid+1&gt;, &lt;high&gt; */

    ELSE[]

        DUP[]
        DUP[]
        #PUSH, 6 /* radicand */
        CINDEX[]
        SWAP[]
        DIV[]

        GT[]
        IF[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            SWAP[]
            POP[]
            #PUSH, 1
            SUB[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;mid-1&gt; */

        ELSE[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            ROLL[]
            POP[]
            SWAP[]
            POP[]
            DUP[]

            /* STACK: &lt;radicand&gt;, &lt;mid&gt;, &lt;mid&gt; */

        EIF[]

    EIF[]


    #PUSH, WOffset83b
    JMPR[], (WOffset83b=#WBeginLoop83)

#WEndLoop83:

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

ADD[]
#PUSH, 32
MUL[]
SWAP[]
POP[]

/* STACK: &lt;mid&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 84

/* fn determines current rasterizing environment and stores it in s[2] as follows:
     bit 0 (value   1) = Grey-Scaling
     bit 1 (value   2) = ClearType(tm)
     bit 2 (value   4) = Compatible Width ClearType
     bit 3 (value   8) = Vertical Direction (horizontally striped) ClearType
     bit 4 (value  16) = BGR as opposed to RGB Devices
     bit 5 (value  32) = ClearType on Rapier CE Devices
     bit 6 (value  64) = ClearType with fractional advance widths
     bit 7 (value 128) = ClearType with non-ClearType direction anti-aliasing
     bit 8 (value 256) = ClearType with gray full-pixel

   s[2] is used e.g. in fns 74 through 77

   To test against any combination of these flags, add up the respective values.

   specific to the current rasterizing environment fn stores the following parameters
     s[5] = minimum distance
     s[8] = #samples/pixel in x-direction
     s[9] = #samples/pixel in y-direction
     s[12] = stroke optimization method in x-direction
     s[13] = stroke optimization method in y-direction

   CALL[], 84 */
   /* Version 2.1 20120101 */

#BEGIN
#PUSHOFF
#PUSH,2,0
WS[]            /* s[2] = grey scaling: off (by default) */
#PUSH,35,1      /* 35 = MS Rasterizer version 1.7 */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
LTEQ[]          /* 35 &lt;= version ? */
#PUSH,64,1      /* 64 = highest rasterizer version assigned to MS */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
GTEQ[]          /* 64 &gt;= version ? */
AND[]           /* 35 &lt;= version &amp;&amp; version &lt;= 64 ? */
IF[]            /* if so, we're running MS rasterizer version 1.7 or higher */
  #PUSH,4096,32 /* 4096 = flag returned by GETINFO if grey scaling bit is on */
  GETINFO[]     /* 32 = tell GETINFO to give us the grey scaling bit */
  EQ[]          /* 4096 == flag ? */
  IF[]          /* if so, we're running under grey scaling */
    #PUSH,2,1,2
    RS[]
    ADD[]
    WS[]        /* s[2] += grey scaling: on (by now) */
  EIF[]
  #PUSH,36,1      /* 36 = MS Rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) */
  GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
  LTEQ[]          /* 36 &lt;= version ? (already tested version &lt;= 64) */
  IF[]            /* if so, we're running MS rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) or higher */
    #PUSH,8192,64 /* 8192 = flag returned by GETINFO if ClearTypeTM bit is on */
    GETINFO[]     /* 64 = tell GETINFO to give us the ClearTypeTM bit */
    EQ[]          /* 8192 == flag ? */
    IF[]          /* if so, we're running under ClearTypeTM */
      #PUSH,2,2,2
      RS[]
      ADD[]
      WS[]        /* s[2] += ClearTypeTM: on (by now) */

      #PUSH,36,1    /* 36 = MS Rasterizer version 1.6+ (WinCE) */
      GETINFO[]
      EQ[]
      IF[] /***** we're running Rasterizer v1.6+ for WinCE with ClearType *****/

        #PUSH,2,32,2
        RS[]
        ADD[]
        WS[]        /* s[2] += Rapier CE: on (by now) */
        SVTCA[Y]
        MPPEM[]
        SVTCA[X]
        MPPEM[]
        GT[]
        IF[]
          #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]
        EIF[]

      ELSE[] /***** we're running Rasterizer v1.8 (or higher) for WinXP with ClearType (or Win2k 2000 with ClearType patch) *****/

        #PUSH,16384,128 /* 16384 = flag returned by GETINFO if ClearTypeTM silly aw bit is on */
        GETINFO[]       /* 128 = tell GETINFO to give us the ClearTypeTM silly aw bit */
        EQ[]            /* 16384 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM silly aw */
          #PUSH,2,4,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM silly aw: on (by now) */
        EIF[]

        #PUSH,16384,128 /* 32768 = flag returned by GETINFO if ClearTypeTM in vertical direction bit is on */
        MUL[]           /* Assembler restriction: produce 32768 by multiplying 16384 by 2 (2 in F26.6 is 128) */
        #PUSH,256       /* 256 = tell GETINFO to give us the ClearTypeTM in vertical direction bit */
        GETINFO[]
        EQ[]            /* 32768 == flag ? */
        IF[]            /* if so, we're running ClearTypeTM in vertical direction */
        #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in vertical direction: on (by now) */
        EIF[]

        #PUSH,16384,256 /* 65536 = flag returned by GETINFO if ClearTypeTM in BGR order bit is on */
        MUL[]           /* Assembler restriction: produce 65536 by multiplying 16384 by 4 (4 in F26.6 is 256) */
        #PUSH,512       /* 512 = tell GETINFO to give us the ClearTypeTM in BGR order bit */
        GETINFO[]
        EQ[]            /* 65536 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM in BGR order */
          #PUSH,2,16,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in BGR order: on (by now) */
        EIF[]

        #PUSH,38,1      /* 38 = MS Rasterizer version 1.9 */
        GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
        LTEQ[]          /* 38 &lt;= version ? (already tested version &lt;= 64) */
        IF[]            /* if so, we're running MS rasterizer version 1.9 (Windows Longhorn) or higher */

          #PUSH,16384,512  /* 131072 = flag returned by GETINFO if ClearTypeTM fractional advance widths bit is on */
          MUL[]            /* Assembler restriction: produce 131072 by multiplying 16384 by 8 (8 in F26.6 is 512) */
          #PUSH,1024       /* 1024 = tell GETINFO to give us the ClearTypeTM fractional advance widths bit */
          GETINFO[]
          EQ[]             /* 131072 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM fractional advance widths */
            #PUSH,2,64,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM fractional advance widths: on (by now) */
          EIF[]

          #PUSH,16384,1024 /* 262144 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
          MUL[]            /* Assembler restriction: produce 262144 by multiplying 16384 by 16 (16 in F26.6 is 1024) */
          #PUSH,2048       /* 2048 = tell GETINFO to give us the ClearTypeTM non-ClearType direction anti-aliasing bit */
          GETINFO[]
          EQ[]             /* 262144 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM non-ClearType direction anti-aliasing */
            #PUSH,2,128,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM non-ClearType direction anti-aliasing: on (by now) */
          EIF[]

          #PUSH,40,1      /* 40 = Rasterizer v2.1 Windows 8, SubPixel */
          GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
          LTEQ[]          /* 40 &lt;= version ? (already tested version &lt;= 64) */
          IF[]            /* if so, we're running MS rasterizer version 2.1 (Windows 8) or higher */
            #PUSH,16384,2048 /* 524288 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
            MUL[]            /* Assembler restriction: produce 524288 by multiplying 16384 by 32 (32 in F26.6 is 2048) */
            #PUSH,4096       /* 4096 = tell GETINFO to give us the ClearTypeTM gray full-pixel rendering bit */
            GETINFO[]
            EQ[]             /* 524288 == flag ? */
            IF[]             /* if so, we're running under ClearTypeTM gray full-pixel rendering */
            #PUSH,2,256,2
              RS[]
              ADD[]
              WS[]           /* s[2] += ClearTypeTM gray full-pixel rendering: on (by now) */
            EIF[]
          EIF[]

        EIF[] /* Vista or greater rasterizer */

      EIF[] /* Windows ClearType (Platt) */

    EIF[] /* ClearType Enabled */
  EIF[] /* ClearType enabled rasterizer */
EIF[] /* Microsoft Rasterizer */

/* store rasterizing environment specific parameters */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* for b&amp;w */
  #PUSH, 5, 64, 8, 64, 9, 64, 12, 2, 13, 2
ELSE[]
  #PUSH, 1, 2
  RS[]
  EQ[]
  IF[] /* for grey-scaling */
    #PUSH, 5, 64, 8, 256, 9, 256, 12, 1, 13, 1
  ELSE[]
    #PUSH, 128, 2
    RS[]
    GT[]
    IF[] /* for ClearType */
      #PUSH, 5, 64, 8, 384, 9, 64
    ELSE[] /* for y-anti-aliased ClearType */
      #PUSH, 256, 2
      RS[]
      GT[]
      IF[] /* Gray ClearType */
        #PUSH, 5, 64, 8, 384, 9, 320
      ELSE[] /* Gray ClearType */
        #PUSH, 384, 2
        RS[]
        GT[]
        IF[] /* Gray ClearType */
          #PUSH, 5, 64, 8, 512, 9, 64
        ELSE[] /* Gray ClearType y-anti-aliased */
          #PUSH, 5, 64, 8, 256, 9, 256
        EIF[]
      EIF[]
    EIF[]

    #PUSH,16384,128 /* b&amp;w aw? */
    GETINFO[]
    NEQ[]
    #PUSH,16384,512 /* fract aw? */
    MUL[]
    #PUSH,1024
    GETINFO[]
    NEQ[]
    AND[]
    IF[] /* natural widths */
      #PUSH, 12, 0, 13, 1
    ELSE[] /* compatible or fractional widths */
      #PUSH, 12, 0, 13, 1
    EIF[]

  EIF[]
EIF[]

WS[]
WS[]
WS[]
WS[]
WS[]

#PUSHON
#END
ENDF[]

FDEF[], 85

/* fn 85 equalizes double specified heights below a given ppem size

   CALL[], &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt;, 85 */
   /* Version 2.0 20141201 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt; */

RCVT[] /* pick absolute (square) height */
#PUSH, 2, 78 /* 2 appears to work for heights and weights */
CALL[]
SWAP[]

/* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel = 1 (or less...) */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size ? */
    IF[]

        /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

        #PUSH, 2
        CINDEX[]
        RCVT[] /* pick relative height (overshoot) */
        #PUSH, 1, 78
        CALL[]
        ADD[] /* add overshoot to square height */

        /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size */
    IF[]

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;#samples/pixel&gt; */

      #PUSH, 3 /* rel cvt */
      CINDEX[]
      RCVT[]
      DUP[]
      ABS[]
      ROLL[]
      MUL[]
      #PUSH, 64

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt;, &lt;|[rel cvt]| * #samples/pixel&gt;, &lt;1&gt; */

      GTEQ[] /* #samples/pixel greater than or equal to 1 pixel */
      IF[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          #PUSH, 2, 78
          CALL[]
          ADD[] /* add overshoot to square height */

          /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

      ELSE[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          POP[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

      EIF[]
    ELSE[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;,&lt;#samples/pixel&gt;*/
          POP[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;*/
    EIF[]

EIF[]

/* STACK: &lt;rel cvt&gt;, &lt;[act cvt]&gt; */

WCVTP[] /* make this the round height */
#PUSHON
#END
ENDF[]

FDEF[], 86

/* function to naturally space an accent above or below a base character

   CALL[], &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt;, 86

   convert distance (fUnits) to pixels, round, and space child from parent by result
   this essentially implements the functionality of an MDRP[m&gt;RWh] instrunction for
   composites which lack a suitable implementation of "original" coordinates.
   roundMethod 0, 1, 2, and 3 round down to, to, up to, and to half virtual grid
   function assumes cvt #20 is reserved and can be used temporarily in here... 
   storage 16 contains a threshold ppem size. if zero, ignore the threshold, otherwise
   if less than or equal to threshold, use 64 (26.6) #samples/pixel. */

#BEGIN
#PUSHOFF

/* extract the sign from distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt; */

DUP[]
#PUSH, 0
LT[]
DUP[]
IF[]
    SWAP[]
    NEG[]
ELSE[]
    SWAP[]
EIF[]

/* scale distance using reserved cvt */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|&gt; */

#PUSH, 20, 20 /* reserved cvt */
ROLL[]
WCVTF[]
RCVT[]

/* determine if we are using a size threshold */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 16, 16 /* reserved storage for threshold */
RS[]
MPPEM[]
ROLL[]
RS[]
LTEQ[]
AND[] /* threshold must not be zero and &lt;= ppem */
IF[]
    #PUSH, 64 /* #samples/pixel = 1 */
ELSE[]
/* round per round method and #samples/pixel in current pv */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
EIF[]

SWAP[]
#PUSH, 97, 6 /* round to virtual grid, roundMethod */
MINDEX[]
ADD[]
CALL[] /* round to virtual grid */

/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;[|distance|']&gt; */

/* apply minimum distance, if applicable */
ROLL[]
IF[]
    #PUSH, 5 /* minimum distance */
    RS[]
    MAX[]
EIF[]

/* fold the sign back into distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;negDist?&gt; &lt;[|distance|']&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* move child by [distance'] */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;[distance']&gt; */

SWAP[]
SRP0[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 87

/* fn places an accent &lt;c0&gt; &lt;c1&gt; on top of a base character &lt;p0&gt; &lt;p1&gt;
   fn uses the same constraint model as fn 111 (interpolate median),
   except that for composites there is no concept of original coordinates,
   hence the respective values are provided by the caller as &lt;partialFactor&gt;

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;partialFactor&gt;, 87 */

#BEGIN
#PUSHOFF

/* partialFactor: ((c0 + c1)/2 - p0)/(p1 - p0)
   target median: ((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; + p0' = partialFactor*(p1' - p0')
   source median: (c0' + c1')/2
   primed coordinates are [N]ew, other coordinates are [O]riginal */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;partialFactor&gt;, &lt;p1&gt; */

#PUSH, 3 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; */

SWAP[] /* p0 */
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;targetMedian&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt; */

#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
MD[N]
#PUSH, 3 /* #samples/pixel */
CINDEX[]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt;, &lt;numVirtualPixels&gt; */

ODD[]
DUP[]
ADD[]
#PUSH, 98
ADD[]
CALL[] /* round to (half) virtual grid */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;[targetMedian]&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
DUP[]
SRP0[]
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;c0&gt;, &lt;targetMedian&gt;, &lt;sourceMedian&gt; */

SUB[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 88

/* set up storage locations with the x and y components
   of the italic and adjusted italic angles as follows:

     s[ 6] = adjusted italic angle y
     s[ 7] = adjusted italic angle x
     s[10] = italic angle y
     s[11] = italic angle x

   while rendering in b&amp;w, determines the optimal phase
   for positioning italic strokes

     s[ 4] = optimal phase

   CALL[], &lt;riseCvt&gt;, &lt;runCvt&gt;, 88 */

#BEGIN
#PUSHOFF

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0 /* Use twilight points to calculate stroke angles */
SZPS[]

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt;, &lt;2&gt;, &lt;riseCvt&gt;, &lt;1&gt;, &lt;runCvt&gt; */

SVTCA[X] /* Set twilight point 1 with italic run cvt in x */
MIAP[r]

SVTCA[Y] /* Set twilight point 2 with italic rise cvt in y */
MIAP[r]

#PUSH, 1, 2 /* and let the rasterizer do the math */
SPVTL[r]
GPV[]

#PUSH, 10 /* store the x and y components of the italic angle */
SWAP[]
NEG[]     /* notice that since we're essentially setting the pv to a line  */
WS[]      /* from (runCvt,0) to (0,riseCvt), the calculcated pv will be    */
#PUSH, 11 /* proportional to (runCvt,0) - (0,riseCvt) = (runCvt,-riseCvt). */
SWAP[]    /* Hence we have to mirror the result at the base line, which is */
WS[]      /* done by flipping (negating) the sign of the y component here. */

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

SVTCA[X] /* same for the adjusted italic angle */
MIAP[R]  /* except to round the twilight point in x... */

SVTCA[Y]
MIAP[R]  /* ...and in y */

#PUSH, 1, 2
SPVTL[r]
GPV[]

#PUSH, 6
SWAP[]
NEG[]    /* same neg as above */
WS[]
#PUSH, 7
SWAP[]
WS[]

#PUSH, 1 /* restore graphics state */
SZPS[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* running b&amp;w? */

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */
    /* determine adjusted run' = run*[rise]/rise */

    RCVT[]
    SWAP[]
    RCVT[]
    DUP[]
    RTG[]
    ROUND[Bl]
    ROLL[]
    MUL[]
    SWAP[]
    DIV[]

    /* STACK: &lt;run'&gt; */
    /* determine phase = (run' - [run'])/2 = half the rounding error */

    DUP[]
    DUP[]
    #PUSH, 64
    LT[]
    IF[]
        CEILING[] /* optimize for "minimum italic angle" */
    ELSE[]
        FLOOR[] /* optimize for minimal number of jaggies */
    EIF[]
    SUB[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;phase&gt; */
    /* for its use on bottom italic edge, determine complement to full pixel */

    #PUSH, 64
    SWAP[]
    SUB[]

    /* and store in s[4] */

    #PUSH, 4
    SWAP[]
    WS[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

    #PUSH, 4, 0
    WS[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]
SVTCA[X]

#PUSHON
#END
ENDF[]

FDEF[], 89

/* function rounds &lt;cvt&gt; depending on rendering environment and pv

   CALL[], &lt;cvt&gt;, 89 */

#BEGIN
#PUSHOFF

DUP[]
RCVT[]
#PUSH, 0, 78 /* roundDist */
CALL[]
WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 90

/* below &lt;ppem&gt;: make both children the same as the (averaged) parent cvt
   at and above: calculate child cvt &lt;ch0&gt; as &lt;fraction&gt; of child cvt &lt;ch1&gt;

   CALL[], &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt;, 90 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    DUP[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]
    DUP[]
    ROLL[]
    ROLL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt;, &lt;ch1&gt;, &lt;[ch1]&gt; */

    WCVTP[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt; */

    DUP[]
    #PUSH, 64, 4
    MINDEX[]
    SUB[]
    MUL[]
    SUB[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;[ch1] - [ch1]*(1-fraction)&gt; */

    WCVTP[]
    POP[] /* parent not involved */

    /* STACK: */

ELSE[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;ch1&gt; */

    ROLL[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;ch0&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    DUP[]
    ROLL[]
    SWAP[]

    /* STACK: &lt;ch0&gt;, &lt;[p]&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    WCVTP[]
    WCVTP[]

    /* STACK: */

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 91

/* below &lt;ppem&gt;: make child cvt &lt;ch&gt; the same as parent cvt &lt;p&gt;
   at and above: calculate child cvt &lt;ch&gt; as &lt;fraction&gt; of parent cvt &lt;p&gt;

   CALL[], &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt;, 91 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    RCVT[]
    DUP[]
    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p]&gt;, &lt;[p]&gt;, &lt;fraction&gt; */

    #PUSH, 64
    SUB[]
    MUL[]
    ADD[]

    /* STACK: &lt;ch&gt;, &lt;[p] + [p]*(fraction - 1)&gt; */

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    RCVT[]

    /* STACK: &lt;ch&gt;, [p] */

EIF[]

#PUSH, 1, 78 /* roundDist */
CALL[]
WCVTP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 92

/* function to calculate a child cvt &lt;ch&gt;
   as a &lt;blend&gt; of two parent cvts &lt;p0&gt;, &lt;p1&gt;

   CALL[], &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt;, 92 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt; */

SWAP[]
RCVT[]
DUP[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p1&gt;, &lt;[p0]&gt;, &lt;[p0]&gt; */

ROLL[]
RCVT[]

SWAP[]
SUB[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

DUP[]
ABS[]
#PUSH, 64
LTEQ[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s)?&gt; */

#PUSH, 4
CINDEX[]
DUP[]
#PUSH, 0
GTEQ[]
SWAP[]
#PUSH, 64
LTEQ[]
AND[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64?&gt; */

#PUSH, 64, 79 /* #samples/pixel */
CALL[]
EQ[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64 &amp;&amp; rounding to full pixel?&gt; */

IF[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

    ROLL[]
    GPV[]
    ABS[]
    SWAP[]
    ABS[]
    SWAP[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt;, &lt;|pv.x|&gt;, &lt;|pv.y|&gt; */

    GTEQ[] /* pv closer to x? */
    IF[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p1: blend' := 1 - (1 - blend)² */

        #PUSH, 64, 64
        ROLL[]
        SUB[]
        DUP[]
        MUL[]
        SUB[]

        /* &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;1 - (1 - blend)²&gt; */

    ELSE[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p0: blend' := blend² */

        DUP[]
        MUL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend²&gt; */

    EIF[]

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */
    /* use unbiased blend */

    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

EIF[]

/* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

MUL[]
#PUSH, 2, 78 /* roundDist */
CALL[]
ADD[]

/* STACK: &lt;ch&gt;, &lt;[ch]&gt; */

WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 93

/* fn sets vectors to X (used in calculated calls)

   CALL[], 93 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSHON
#END
ENDF[]

FDEF[], 94

/* fn sets vectors to Y (used in calculated calls)

   CALL[], 94 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 95

/* Set fv to X, pv perpendicular to italic angle (used in calculated calls)

   CALL[], 95 */

#BEGIN
#PUSHOFF
SFVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 96

/* Set fv to italic angle, pv to Y (used in calculated calls)

   CALL[], 96 */

#BEGIN
#PUSHOFF
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
SPVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 97

/* round down to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 97

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */
/* upscale argument by #samples/pixel */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[] /* round down to super grid */

/* Downscaling uses a DIV[] operation, which is implemented as floor(numerator/denominator).
   For round(numerator/denominator) instead, add ½ denominator to numerator before dividing.
   But since the division in 26.6 has to multiply the numerator by 2^6 (64) before dividing,
   we have to divide said ½ denominator by 64 before adding, hence the 8192 (= 128 in 26.6). */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 98

/* round to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 98

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

#PUSH, 32 /* round to super grid */
ADD[]
FLOOR[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 99

/* round up to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 99

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

CEILING[] /* round up to super grid */

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 100

/* round to half virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 100

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[]
#PUSH, 32 /* round to half super grid */
ADD[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 101

/* determine actual distance to be used for emulating MDRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 101

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 102

/* determine actual distance to be used for emulating MDRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 102

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 103

/* determine actual distance to be used for emulating MIRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 103

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 104

/* determine actual distance to be used for emulating MIRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 104

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 105

/* emulate MDRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 105 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 106

/* emulate MDRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 106 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 107

/* emulate MIRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 107 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 103 /* resActDist, cvt, noMinDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 108

/* emulate MIRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 108 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 104 /* resActDist, cvt, minDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 109

/* fn symmetrically constrains a stroke &lt;p&gt;, &lt;c&gt; with &lt;cvt&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 109 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */
/* determine old median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* lock parent */

#PUSH, 4 /* p */
CINDEX[]
MDAP[r]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* link child */

#PUSH, 4 /* p */
CINDEX[]
#PUSH, 4 /* c */
CINDEX[]
#PUSH, 4 /* cvt */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt; */
/* determine new median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt;, &lt;2*median'&gt; */

SUB[]
#PUSH, 128
DIV[] /* floor to 1/64 for now */

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;deltaMedian&gt; */

DUP[]
ROLL[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]
SWAP[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 110

/* calculate offset for emulation of interpolation of median of
   &lt;c0&gt; and &lt;c1&gt; between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 110

   returns with offset on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
GC[O]
#PUSH, 3 /* c1 */
CINDEX[]
GC[O]
ADD[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
GC[O]
#PUSH, 128
MUL[]
SUB[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1 - 2*p0&gt; */

#PUSH, 2 /* p1 */
CINDEX[]
#PUSH, 6 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')&gt; */

SWAP[] /* p1 */
#PUSH, 5 /* p0 */
CINDEX[]
MD[O]
#PUSH, 128
MUL[]

/* prevent inadvertent divide-by-zero e.g. on non-spacing glyphs */
DUP[]
IF[]
    DIV[]
ELSE[]
    POP[]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')/(2*(p1 - p0))&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;(c0'' + c1'')/2&gt; */

ROLL[] /* c0 */
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;(c0'' + c1'')/2&gt;, &lt;(c0' + c1')/2&gt; */

SUB[]

/* STACK: &lt;offset&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 111

/* emulate interpolation of median of &lt;c0&gt; and &lt;c1&gt;
   between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 111 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* p1 */
MINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt; */

DUP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt;, &lt;offset&gt; */

ROLL[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt;, &lt;c1&gt;, &lt;offset&gt; */

MSIRP[m]

SWAP[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 112


/* adjust (unrounded) stroke phase to target phase according to &lt;method&gt;

   method 0: round to nearest virtual pixel
   method 1: apply method 2 below 2 pixel wide strokes else method 0
   method 2: optimize for max #black pixels
   method 3: optimize for one edge aligned

   right?: boolean indicating a left (false) or right (true) stroke)

   CALL[], &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt;, 112

   returns with (rounded) adjusted phase on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt; */

SWAP[]

DUP[]
#PUSH, 1
EQ[]
IF[]

    /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;right?&gt;, &lt;method&gt; */
    /* replace method depending on stroke weight */

    POP[]
    #PUSH, 2 /* weight */
    CINDEX[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    #PUSH, 128
    LT[]
    DUP[]
    ADD[]
EIF[]

DUP[]
ADD[]
ADD[]

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method' = 2*method + right&gt; */

DUP[]
#PUSH, 1
LTEQ[]
IF[] /* just round to nearest virtual pixel */

    POP[]
    POP[]

    /* STACK: &lt;phase&gt; */

ELSE[]
    DUP[]
    #PUSH, 5
    LTEQ[]
    IF[] /* optimize for max #black pixels */

        POP[]

        /* STACK: &lt;phase&gt;, &lt;weight&gt; */

        DUP[]
        FLOOR[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

        #PUSH, 64
        SWAP[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

        #PUSH, 0, 3 /* phase */
        CINDEX[]
        LT[]
        #PUSH, 3 /* phase */
        CINDEX[]
        #PUSH, 3 /* 1-fractWeight */
        CINDEX[]
        LT[]
        AND[]
        IF[] /* if 0 &lt; phase &lt; 1-fractWeight then need to adjust phase */

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            DUP[]
            #PUSH, 3
            CINDEX[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt;, &lt;1-fractWeight-phase&gt; */

            ROLL[]
            GTEQ[]
            IF[] /* error from phase to 1-fractWeight &gt;= error from 0 to phase */
                POP[]
                #PUSH, 0 /* target 0 as phase */
            EIF[]
            /* else target 1-fractWeight as phase, which is what's left on stack */

        ELSE[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            POP[]

        EIF[]

    ELSE[] /* optimize for one edge aligned */

        /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method'&gt; */

        #PUSH, 7
        EQ[]
        IF[] /* right flush */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            DUP[]
            FLOOR[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

            NEG[]
            SWAP[]
            POP[]

        ELSE[] /* left flush (and default) */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            POP[]
            POP[]
            #PUSH, 0

        EIF[]

    EIF[]

EIF[]

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: phase */

#PUSHON
#END
ENDF[]

FDEF[], 113

/* fn calculates delta phase for optimal position of
   stroke bordered by &lt;p&gt; and &lt;c&gt; according to &lt;method&gt;
   (see fn 112 for definition of method)

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, 113

   returns with delta phase in interval ]-½,+½] on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt; */

    /* use sequence of parameters &lt;p&gt; and &lt;c&gt; to determine if this is
       a "left" stroke (in which case we may add grey to the right), or
       a "right" stroke (in which case we may add grey to the left) */

#PUSH, 2 /* c */
CINDEX[]
#PUSH, 4 /* p */
CINDEX[]
MD[O]
#PUSH, 0
GTEQ[]
IF[]
    #PUSH, 0 /* "left" stroke */
ELSE[]
    ROLL[]
    ROLL[]
    SWAP[]
    ROLL[]
    #PUSH, 1 /* "right" stroke */
EIF[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt; */

#PUSH, 4 /* p */
CINDEX[]
GC[N]
DUP[]
FLOOR[]
SUB[]
DUP[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt; */

#PUSH, 5 /* c */
MINDEX[]
#PUSH, 6 /* p */
MINDEX[]
MD[N]

/* STACK: &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt;, &lt;weight&gt; */

#PUSH, 5 /* method */
MINDEX[]
#PUSH, 5 /* right? */
MINDEX[]
#PUSH, 112 /* adjust to target stroke phase */
CALL[]

/* STACK: &lt;source phase&gt;, &lt;target phase&gt; */

SWAP[]
SUB[]

/* STACK: &lt;delta phase&gt; */
/* minimze phase into interval ]-½,+½] */

NEG[]
#PUSH, 32
ADD[]
DUP[]
FLOOR[]
SUB[]
#PUSH, 32
SUB[]
NEG[]

#PUSHON
#END
ENDF[]

FDEF[], 114

/* emulate MIAP instruction with rendering environment specific rounding

   CALL[], &lt;c&gt;, &lt;cvt&gt;, 114 */

#BEGIN
#PUSHOFF

/* STACK: &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 2 /* c */
CINDEX[]
GC[N]
DUP[]

/* STACK: &lt;c&gt;, &lt;cvt&gt;, &lt;wNat&gt;, &lt;wNat&gt; */

ROLL[]
DUP[]
#PUSH, 0
LT[]
IF[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;cvt&gt; */

    POP[]

    /* cvt &lt; 0 (no cvt used) =&gt; w = wNat */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

    #PUSH, 2, 78 /* roundDist */
    CALL[]

ELSE[]

    RCVT[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;wCvt&gt; */
    /* no cvt cut-in test (for eventual support of automatic small caps, superiors, and inferiors), pop wNat to use wCvt */

    SWAP[]
    POP[]

    /* leave value as rounded by cpgm */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

EIF[]

SUB[]
NEG[]

/* STACK: &lt;c&gt;, &lt;wDelta&gt; */

#PUSH, 2
CINDEX[]
SRP0[]

MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 115

/* interpolates a point &lt;p&gt; in &lt;dirFlag&gt; between points &lt;lsb&gt; and &lt;rsb&gt;
   dirFlag: postRoundFlag*8 + dir
   dir: X = 0, Y = 1, X/ = 2, Y/ = 3, ...

   depending on rendering environment and pv may optimise point position

   CALL[], &lt;dirFlag&gt;, &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 115 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dirFlag&gt;, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt; */
/* separate postRoundFlag from dir */

#PUSH, 4 /* dirFlag */
MINDEX[]
DUP[]
#PUSH, 512
DIV[]
DUP[]
#PUSH, 512
MUL[]
ROLL[]
SWAP[]
SUB[]

/* STACK:, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

DUP[]
#PUSH, 93 /* setV */
ADD[]
CALL[]

/* STACK: &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
SRP1[]
ROLL[] /* p1 */
SRP2[]
ROLL[] /* p */
DUP[]
IP[]

/* STACK: &lt;p0&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt;, &lt;p&gt; */

ROLL[] /* postRoundFlag */
IF[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    #PUSH, 93, 4096, 4 /* setV, 64, dir */
    MINDEX[]
    MUL[]
    ODD[]
    ADD[]
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    SWAP[]
    POP[]
    DUP[] /* p */
    SRP0[]
    DUP[]
    GC[N]
    DUP[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    SWAP[]
    SUB[]

    /* STACK: &lt;p&gt;, &lt;[p.c]-p.c&gt; */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    SWAP[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    DUP[]
    ROLL[]
    DUP[] /* p0 */
    SRP0[]
    MD[N]

    #PUSH, 2, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;[p.dist]&gt; */

EIF[]

MSIRP[M]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 116

/* constrains a stroke in &lt;dir&gt;, defined by parent &lt;p&gt; and child &lt;c&gt;,
   and by cvt &lt;cvt&gt;, and interpolates it between points &lt;gp0&gt; and &lt;gp1&gt;
   dir: X = 0, Y = 1, X/ = 2
   sof: (stroke optimization flags ||, |&lt;, and &gt;| ) don't = 0, do = 1, leftBias = 2, rightBias = 3

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt;, 116 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 9 /* setV, 64, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* constrain stroke */

#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* cvt */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 7 /* setV, dir */
CINDEX[]
ADD[]
CALL[]

#PUSH, 5 /* gp0 */
CINDEX[]
#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* gp1 */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 8 /* setV, 64, dir */
MINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

DUP[]
#PUSH, 0
GT[]
IF[] /* optimize stroke position */

    #PUSH, 80
    CALL[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 5 /* p */
    CINDEX[]
    #PUSH, 5 /* c */
    CINDEX[]
    #PUSH, 7 /* p */
    CINDEX[]
    #PUSH, 7 /* c */
    CINDEX[]
    #PUSH, 5 /* som */
    CINDEX[]
    #PUSH, 113 /* get delta phase for optimal stroke position */
    CALL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 0
    GT[]
    #PUSH, 2 /* sof */
    CINDEX[]
    #PUSH, 1
    GT[]
    AND[]
    IF[]

        /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
        /* determine total side-bearing space to see if we need to bias the black body */

        #PUSH, 4 /* p */
        CINDEX[]
        #PUSH, 6 /* gp0 */
        CINDEX[]
        MD[N]
        #PUSH, 3 /* gp1 */
        CINDEX[]
        #PUSH, 5 /* c */
        CINDEX[]
        MD[N]
        ADD[]
        DUP[]
        #PUSH, 64
        GT[]
        IF[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* enough total side-bearing space left, leave it alone */
            POP[]

        ELSE[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* 1 pixel or less total side-bearing space left */

            #PUSH, 0
            GT[]
            IF[]

                /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                /* any total side-bearing space left at all */

                DUP[]
                #PUSH, 2
                EQ[]
                IF[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 7 /* gp0 */
                    CINDEX[]
                    #PUSH, 7 /* p */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                ELSE[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 4 /* gp1 */
                    CINDEX[]
                    #PUSH, 6 /* c */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                EIF[]

            EIF[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 117

/* fn tries to place and constrain two strokes &lt;p0,c0,cvt0&gt; and &lt;p1,c1,cvt1&gt;
   between grandparents &lt;gp0&gt; and &lt;gp1&gt; in direction &lt;dir&gt;
   dir: X = 0, Y = 1, X/ = 2
   X/ (italic) is not yet implemented; to do so properly will need to factor
   the italic phase optimization part out of fn 131 and make it available to
   this fn.   

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, 117 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */

#PUSH, 93, 4096, 11 /* setV, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* interpolate black body */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 12 /* gp0 */
CINDEX[]
#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 8 /* gp1 */
CINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]
#PUSH, 4
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke0 */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke1 */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt; */

#PUSH, 80
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
/* determine phase0 for optimal position of stroke0 */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 3 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* forward to stroke1 position */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 3 /* phase0 */
CINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* determine phase1 for optimal position of stroke1 */

DUP[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 5 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* undo forwarding to stroke1 position */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 4 /* phase0 */
CINDEX[]
NEG[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* determine double average phase error */

#PUSH, 2 /* phase0 */
CINDEX[]
#PUSH, 2 /* phase1 */
CINDEX[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

DUP[]
#PUSH, 64
GTEQ[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
    /* double average phase error &gt;= 1 pixel, correct to the left */

    POP[]
    #PUSH, 64
    SUB[]
    SWAP[]
    #PUSH, 64
    SUB[]
    SWAP[]

ELSE[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

    #PUSH, -64
    LT[]
    IF[]

        /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
        /* double average phase error &lt; -1 pixel, correct to the right */

        #PUSH, 64
        ADD[]
        SWAP[]
        #PUSH, 64
        ADD[]
        SWAP[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase0 to stroke0 */

#PUSH, 8 /* p0 */
CINDEX[]
#PUSH, 8 /* c0 */
CINDEX[]
#PUSH, 4 /* phase0 */
MINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase1 to stroke1 */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
ROLL[] /* phase1 */
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

DUP[]
#PUSH, 0
GT[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
    /* determine total side-bearing space to see if we need to bias the black body */

    #PUSH, 6 /* p0 */
    CINDEX[]
    #PUSH, 8 /* gp0 */
    CINDEX[]
    MD[N]
    #PUSH, 3 /* gp1 */
    CINDEX[]
    #PUSH, 5 /* c1 */
    CINDEX[]
    MD[N]
    ADD[]
    DUP[]
    #PUSH, 64
    GT[]
    IF[]

        /* enough total side-bearing space left, leave it alone */
        POP[]

    ELSE[]

        /* 1 pixel or less total side-bearing space left */
        #PUSH, 0
        GT[]
        IF[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* any total side-bearing space left at all, move black-body flush left and start over */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 11 /* gp0 */
            CINDEX[]
            #PUSH, 11 /* p0 */
            CINDEX[]
            MD[N]
            #PUSH, 4
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke0 forwarding phase0 to stroke1 */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 10 /* p0 */
            CINDEX[]
            #PUSH, 10 /* c0 */
            CINDEX[]
            #PUSH, 7 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 4 /* apply to both strokes */
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke1 */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, 5 /* c1 */
            CINDEX[]
            #PUSH, 7 /* p1 */
            CINDEX[]
            #PUSH, 5 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 2 /* apply to second stroke only */
            SLOOP[]
            SHPIX[]

        ELSE[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* no total side-bearing space left, move stroke1 left by 1 pixel */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, -64, 2
            SLOOP[]
            SHPIX[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 118

/* fn to set pv perpendicular to p1 and c0' such that distance
   c0'&lt;---p0 measures cvt or natural distance if cvt = -1.
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt;, 118 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
SDPVTL[R]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
ROLL[] /* cvt */
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 101 /* resActDist, noCvt, noMinDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]
ABS[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
SPVTL[r]
#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
MD[N]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
/* test if solution exists at all */

DUP[]
DUP[]
MUL[]
#PUSH, 3 /* w */
CINDEX[]
DUP[]
MUL[]
LTEQ[]
#PUSH, 0, 3 /* d */
CINDEX[]
EQ[]
OR[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt;, &lt;d² &lt;= w² or d = 0?&gt; */

IF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution doesn't exist, hence prepare to bail out */

    POP[]
    POP[]
    SWAP[]
    POP[]
    SPVTL[R]

ELSE[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution exists, hence continue computation */

    DUP[]
    MUL[]
    #PUSH, 2 /* w */
    CINDEX[]
    DUP[]
    MUL[]
    SUB[]
    DUP[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;d² - w²&gt; */

    #PUSH, 83 /* sqrt */
    CALL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;sqrt(d² - w²)&gt; */

    ROLL[] /* w */
    MUL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;d² - w² =: dx&gt;, &lt;w·sqrt(d² - w²) =: dy&gt; */

    #PUSH, 5 /* p1 */
    CINDEX[]
    #PUSH, 5 /* p0 */
    CINDEX[]
    SDPVTL[R]
    #PUSH, 4 /* p0 */
    CINDEX[]
    #PUSH, 4 /* c0 */
    MINDEX[]
    MD[O]

    #PUSH, 0
    LT[]
    IF[]
        NEG[] /* dy */
    EIF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt; */

    #PUSH, 4 /* p1 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    #PUSH, 5 /* p0 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt;, &lt;p0.x&gt;, &lt;p0.y&gt; */

    #PUSH, 0 /* enter twilight zone */
    SZPS[]

    SVTCA[Y]
    #PUSH, 0
    SWAP[]
    SCFS[]
    SVTCA[X]
    #PUSH, 0
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    SVTCA[Y]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]
    SVTCA[X]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt; */

    SWAP[]

    /* STACK: &lt;dy&gt;, &lt;dx&gt; */

    #PUSH, 2, 0, 1
    SFVTL[r]
    SWAP[]
    SHPIX[]

    /* STACK: &lt;dy&gt; */

    #PUSH, 2, 0, 1
    SFVTL[R]
    SWAP[]
    SHPIX[]

    /* STACK: */

    #PUSH, 2, 1
    SPVTL[R]

    #PUSH, 1 /* leave twilight zone */
    SZPS[]

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 119

/* align c with p unless fv is perpendicular to pv
   fv and pv assumed to be set prior to calling fn 119
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p&gt;, &lt;c&gt;, 119 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
SRP0[]

/* STACK: &lt;c&gt; */

GFV[]
GPV[]

/* STACK: &lt;c&gt;, &lt;fv.x&gt;, &lt;fv.y&gt;, &lt;pv.x&gt;, &lt;pv.y&gt; */

ROLL[]
MUL[]
SWAP[]
ROLL[]
MUL[]
ADD[]
ABS[]

/* STACK: &lt;c&gt;, &lt;|pv.y*fv.y + pv.x*fv.x|&gt; */

#PUSH, 16384, 1024
MUL[]

/* the above dot product multiplies two 2.14 numbers in 26.6 arithmetic yielding a 2.22 number (2^14 * 2^14 / 2^6 = 2^22)
   like the rasterizer, we're comparing this number to 1/16: |fv1·pv| &lt; 1/16 means fv1 is within ±arcsin(1/16) or ±3.5833° perpendicular to pv
   in 2.22 format 1/16 is 2^18, but since the assembler won't allow us to push 2^18 = 262144, we make up this number as a multiplication
   the multiplication, in turn, is again done in 26.6 format, hence we multiply 16384 with 1024 (2^14 * 2^10 / 2^6 = 2^18) */

LT[]
IF[]

    /* fv is approximately perpendicular to pv which by itself is perpendicular
       to a line from p to c' (with c' the twilight point 2 computed in fn 118),
       i.e. fv is approximately parallel to line from p to c'. Given the usage
       of fn 119 this means that fv is approximately coincident with said line,
       or c is approximately aligned already, hence simply touch the point, but
       without involving the pv */

    /* STACK: &lt;c&gt; */

    #PUSH, 0
    SHPIX[]

ELSE[]

    /* STACK: &lt;c&gt; */

    ALIGNRP[]

EIF[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 120

/* support to ResX|YDDist and ResX|YDLink where fv0 and fv1 are x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 120 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 9 /* p0 */
CINDEX[]
#PUSH, 9 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 121

/* support to ResX|YDDist and ResX|YDLink where fv0 is x or y while fv1 is to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 121 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

ROLL[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 122

/* support to ResX|YDDist and ResX|YDLink where fv0 is to-line while fv1 is x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt;, 122 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

ROLL[]
ROLL[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 123

/* support to ResX|YDDist and ResX|YDLink where both fv0 and fv1 are to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 123 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 8 /* p1 */
CINDEX[]
#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 11 /* c0 */
CINDEX[]
#PUSH, 9 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 4 /* fv0.p0 */
MINDEX[]
#PUSH, 4 /* fv0.p1 */
MINDEX[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 124

/* determine on which side of edge p0-&gt;p1 is c
   by calculating vector product (c - p0) ^ (p1 - p0)

   CALL[], &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 124

   returns with vector product on stack
   if vector product &lt; 0 then c is on the left of p0-&gt;p1
   if vector product &gt; 0 then c is on the right of p0-&gt;p1
   else c is exactly on p0-&gt;p1 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt; */

SPVTCA[X]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
MD[O]
#PUSH, 4 /* p0 */
CINDEX[]
#PUSH, 3 /* p1 */
CINDEX[]
MD[O]

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, &lt;a.x&gt;, &lt;b.x&gt; */

SPVTCA[Y]
#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* c */
MINDEX[]
MD[O]
#PUSH, 5 /* p0 */
MINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
MD[O]

/* STACK: &lt;a.x&gt;, &lt;b.x&gt;, &lt;a.y&gt;, &lt;b.y&gt; */

#PUSH, 4 /* a.x */
MINDEX[]
MUL[]

ROLL[] /* b.x */
ROLL[] /* a.y */
MUL[]

SUB[]

/* STACK: &lt;b.y*a.x - b.x*a.y&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 125

/* fn interpolates a pair of diagonal links between grand-parents gp0 and gp1 along pv
   pv: X = 0, Y = 1, X/ = 2; fv0 and fv1: x and y components in 2.14

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, 125 */

#BEGIN
#PUSHOFF

/* interpolate parents between grand-parents along pv */
/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 93, 14 /* pv */
CINDEX[]
ADD[]
CALL[]

#PUSH, 12 /* gp0 */
MINDEX[]
SRP1[]
#PUSH, 5 /* gp1 */
MINDEX[]
SRP2[]

#PUSH, 10 /* p0 */
CINDEX[]
IP[]
#PUSH, 7 /* p1 */
CINDEX[]
IP[]

/* determine if this is a crisscrossed stroke */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 124 /* c0 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 8 /* c1 */
CINDEX[]
#PUSH, 10 /* p1 */
CINDEX[]
#PUSH, 124 /* c1 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

EQ[]
IF[]

    /* both childern on same side of parent edge p0&gt;-&gt;p1
       hence re-align children with parents perp to dpv. */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    SDPVTL[R]

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 10 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 9 /* c0 */
    CINDEX[]
    MDRP[m&lt;rBl]

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 7 /* p1 */
    CINDEX[]
    SRP0[]
    #PUSH, 6 /* c1 */
    CINDEX[]
    MDRP[m&lt;rBl]

ELSE[]

    /* childern on opposite sides of "parent edge" p0&gt;-&gt;p1
       hence re-align children with parents per method for crisscrossed strokes */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    #PUSH, 11 /* c0 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt0, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 10 /* c0 */
    CINDEX[]
    #PUSH, 119
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 8 /* p1 */
    CINDEX[]
    #PUSH, 8 /* c1 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt1, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;p0&gt;, &lt;c1&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 7 /* c1 */
    CINDEX[]
    #PUSH, 119
    CALL[]

EIF[]

/* determine pre-link medians, measuring perpendicularly to p0-&gt;p1 */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

/* links */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 6 /* fv0.x */
CINDEX[]
#PUSH, 6 /* fv0.y */
CINDEX[]
SFVFS[]

#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 12 /* c0 */
CINDEX[]
#PUSH, 12 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 4 /* fv1.x */
CINDEX[]
#PUSH, 4 /* fv1.y */
CINDEX[]
SFVFS[]

#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 9 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* subtract post-link medians from pre-link ones */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

SWAP[]

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

SWAP[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

/* finally move points by respective deltas */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta0&gt;, &lt;delta1&gt; */

#PUSH, 1, 12 /* pv */
CINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 10 /* p0 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 3 /* delta0 */
CINDEX[]
MSIRP[m]

#PUSH, 6 /* fv0.x */
MINDEX[]
#PUSH, 6 /* fv0.y */
MINDEX[]
SFVFS[]

#PUSH, 7 /* c0 */
MINDEX[]
DUP[]
SRP0[]
ROLL[] /* delta0 */
MSIRP[m]

/* STACK: &lt;pv&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta1&gt; */

#PUSH, 1, 7 /* pv */
MINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 5 /* p1 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 2 /* delta1 */
CINDEX[]
MSIRP[m]

ROLL[] /* fv0.x */
ROLL[] /* fv0.y */
SFVFS[]

SWAP[] /* c1 */
DUP[]
SRP0[]
SWAP[] /* delta1 */
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 126

/* glue code to fn 125 where both fv0 and fv1 are x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 126 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[] /* fv0 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 127

/* glue code to fn 125 where fv0 is to line and fv1 is x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt;, 127 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt; */

ROLL[] /* fv0.0 */
ROLL[] /* fv0.1 */
SFVTL[r]
GFV[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 128

/* glue code to fn 125 where fv0 is x or y and fv1 is to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 128 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

SFVTL[r]

#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

GFV[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 129

/* glue code to fn 125 where both fv0 and fv1 are to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 129 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

#PUSH, 4 /* fv0.0 */
MINDEX[]
#PUSH, 4 /* fv0.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 4 /* fv1.0 */
MINDEX[]
#PUSH, 4 /* fv1.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 130

/* extrapolate x-coordinate of &lt;p&gt; to base line along italic angle
   returns with extrapolated x-coordinate on stack

   CALL[], &lt;p&gt;, 130 */

#BEGIN
#PUSHOFF

DUP[]
SVTCA[X]
GC[N]
SWAP[]
SVTCA[Y]
GC[N]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt; */

#PUSH, 10 /* rise */
RS[]
#PUSH, 11 /* run */
RS[]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt;, &lt;rise&gt;, &lt;run&gt; */

ROLL[]
MUL[]
SWAP[]
DIV[]
SUB[]

/* STACK: &lt;p.x - p.y*run/rise&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 131

/* constrains an italic stroke, defined by parents &lt;p0&gt; and &lt;p1&gt;, by
   children &lt;c0&gt; and &lt;c1&gt;, and by cvts &lt;cvt0&gt; and &lt;cvt1&gt;, and inter-
   polates it between points &lt;lsb&gt; and &lt;rsb&gt;

   for b&amp;w stroke additionally optimizes the resulting pixel pattern

   CALL[], &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, 131 */

#BEGIN
#PUSHOFF

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */

#PUSH, 9 /* pv perp italic, fv X */
CALL[]

/* lock parent edge */

#PUSH, 6 /* p0 */
CINDEX[]
MDAP[r]

#PUSH, 5 /* p1 */
CINDEX[]
RDTG[]
MDRP[m&lt;RBl]

/* link child edge */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 3 /* cvt1 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

RTG[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* interpolate median of p0 and c0 between lsb and rsb */

#PUSH, 8 /* lsb */
CINDEX[]
#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 10 /* rsb */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* if the two actual parent-&gt;child distances round to the same stroke weight */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;[dist0]&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;[dist0]&gt;, &lt;[dist1]&gt; */

EQ[]
IF[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* adjust median of p1 and c1 in parallel */

    RDTG[]
    #PUSH, 4 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 3 /* p1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 2 /* c0 */
    CINDEX[]
    SRP0[]
    #PUSH, 1 /* c1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 5 /* rsb */
    MINDEX[]
    POP[]
    #PUSH, 5 /* lsb */
    MINDEX[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

ELSE[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* interpolate median of p1 and c1 between lsb and rsb independently */

    #PUSH, 6 /* lsb */
    MINDEX[]
    #PUSH, 4 /* p1 */
    CINDEX[]
    #PUSH, 3 /* c1 */
    CINDEX[]
    #PUSH, 8 /* rsb */
    MINDEX[]
    #PUSH, 111 /* interpolate median */
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

EIF[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
/* for b&amp;w only optimize pixel pattern */

#PUSH, 0, 2
RS[]
EQ[]
IF[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* extrapolate c0 to base line */

    RDTG[]
    #PUSH, 2 /* c0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* extrapolate p0 to base line */

    #PUSH, 5 /* p0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* get parentPhase from extrapolated x-coordinate */

    DUP[]
    DUP[]
    ROUND[Bl]
    SUB[]

    #PUSH, 4 /* targetPhase */
    RS[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;parentPhase&gt;, &lt;targetPhase&gt; */
    /* shifting parent edge by deltaPhase optimizes stepping pattern on parent edge */

    SVTCA[X]
    SWAP[]
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* minimize the positioning error by mapping deltaPhase from [-63,63] to [-32,31] */

    #PUSH, 96
    ADD[]
    DUP[]
    ROUND[Bl]
    SUB[]
    #PUSH, 32
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* save minimized deltaPhase for child edge and shift parent edge */

    DUP[]
    #PUSH, 8 /* p0 */
    MINDEX[]
    #PUSH, 8 /* p1 */
    MINDEX[]
    ROLL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* since child edge is linked perpendicular to italic angle,
       the resulting stroke would include unnecessary pixels,
       hence determine phase of distance between extrapolated
       x-coordinates (deltaDeltaPhase) */

    ROLL[]
    ROLL[]
    SUB[]
    DUP[]
    ROUND[Bl]
    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase&gt;, &lt;deltaDeltaPhase&gt; */
    /* subtract from deltaPhase (don't shift quite as far...) */

    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase'&gt; */
    /* shift parent edge */

    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

    POP[]
    POP[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]

#PUSHON
#END
ENDF[]

FDEF[], 132

/* for monochrome only: stack points &lt;p&gt; through &lt;c&gt; on top of &lt;p&gt; below &lt;ppem&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt;, 132 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt; */

MPPEM[]
GT[]
#PUSH, 1, 2
RS[]
GTEQ[]
AND[]
IF[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    SWAP[]
    SRP0[]
    DUP[]
    SVTCA[X]
    ALIGNRP[]
    SVTCA[Y]
    ALIGNRP[]

ELSE[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    POP[]
    POP[]
EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 133

/* support fn for fns 134 and 135

   CALL[], &lt;align?&gt;, &lt;from&gt;, &lt;to&gt;, 133 */

#BEGIN
#PUSHOFF

SWAP[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

#WBeginLoop133:

#PUSH, 2 /* to */
CINDEX[]
#PUSH, 2 /* from */
CINDEX[]
GTEQ[]
IF[]

    /* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

    DUP[]
    #PUSH, 4 /* align? */
    CINDEX[]
    IF[]
        ALIGNRP[]
    ELSE[]
        IP[]
    EIF[]

    #PUSH, 1
    ADD[]

    #PUSH, WOffset133
    JMPR[], (WOffset133=#WBeginLoop133)

EIF[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 134

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;p1&gt;, 134 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;p1&gt; */

#PUSH, 2 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;eq?&gt; */

ROLL[] /* p0 */
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
ROLL[] /* p1 */
DUP[]
SRP2[]
#PUSH, 1
SUB[]

/* STACK: &lt;eq?&gt;, &lt;from&gt;, &lt;to&gt; */

#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 135

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, 135 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, &lt;eq?&gt; */

SWAP[]
DUP[]
SRP2[]
#PUSH, 1
SUB[]
SWAP[]
DUP[]

#PUSH, 6 /* p0 */
MINDEX[]
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
#PUSH, 6 /* end */
MINDEX[]

/* STACK: &lt;start&gt;, &lt;to&gt;, &lt;eq?&gt;, &lt;eq?&gt;, &lt;from&gt;, &lt;end&gt; */

#PUSH, 133
CALL[]

ROLL[]
ROLL[]
#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 150
/* Function 150 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given rasterizer mode (in Store 2) ClearType */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 150 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer mode&gt; value in store 2 */
/* 150 Function number */
#BEGIN
#PUSHOFF
#PUSH, 2
RS[] /* read store 2 */
EQ[] /* is it = to the last arg? */
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
       SPVFS[] /* Restore orig PV */
       POP[] /* otherwise remove the remaining arguments */
       POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 151
/* Function 151 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given set of rasterizer flags (in Store 2) */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 151 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer flag&gt; bit of a value in store 2 */
/* Function 151 differs from Function 150 in that instead of requiring an */
/* exact match with the value in store 2, a given set of flags (or bit values) */
/* can be referenced. For example, if the function should execute */
/* in any situation where ClearType with fractional AWs is enabled, */
/* (c.f. Function 84) irrespective of other flags (e.g. BGR as opposed */
/* to RGB Devices or non-ClearType direction anti-aliasing) then one */
/* would use a &lt;rasterizer flag&gt; value of 64. (c.f. Function 84.) */
/* The rasterizer values for &lt;rasterizer mode&gt; are defined in the function */
/* 84 header. */
/* EXAMPLE: */
/* If one wanted the move to occur if either subpixel positioned or full gray pixel */
/* then one would take the 64 (from subpixel positioned) and the 256 (from */
/* gray full-pixel) and add them to get 320. With a value of 320, the point will */
/* get moved if either subpixel positioned or full gray pixel is enabled. */
/* If one wanted to move to occur always if ClearType was on, independent of */
/* any subtype or spacing flag, one would set the rasterizer mode to 2. */

/* 151 Function number */
#BEGIN
#PUSHOFF
#PUSH, 152 /* Call function 152 with the rasterizer mode on the top of stack */
CALL[]
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
        SPVFS[] /* Restore orig PV */
        POP[] /* otherwise remove the remaining arguments */
        POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 152
/* Function 152 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 152 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if there is at least one
of these resultant bits that are set.

Function 152 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 bit flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 2
RS[]
SWAP[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      /* We can early out here once we find our first match */
      POP[]
      POP[]
      POP[]
      #PUSH, 1, BTEnd  /* 1 is the TRUE return code */
      JMPR[], (BTEnd=#LEndFn)
    EIF[]
  ELSE[]
    POP[]
  EIF[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BPEnd /* 0 is end condition of FALSE */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  SWAP[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn) 

  EIF[]
  ROLL[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]

FDEF[], 153
/* Function 153 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 153 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if ALL
of these resultant bits from the mask are set.

Function 153 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 0, 2   /* 0 is the boolean tracking success, start off with FALSE */
RS[]
ROLL[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   Conditional boolean tracking success
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  Conditional boolean tracking success
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 1  /* Set TRUE return code */
      OR[]      /* We OR this because we will immediately exit if we fail this test */
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
    ELSE[]
      POP[]
      POP[]
      POP[]
      POP[]
      #PUSH, BTEnd , 0  /* 0 is the FALSE return code */
      SWAP[]
      JMPR[], (BTEnd=#LEndFn)

    EIF[]
  ELSE[]
    POP[]
  EIF[]
  #PUSH, 4 /* Can this be cleaned up and integrated with the code below? */
  MINDEX[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Conditional boolean tracking success
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    ROLL[]
    NOT[]
    ROLL[]
    AND[]
    SWAP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BPEnd /* 29  End */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  ROLL[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn)

  EIF[]
  #PUSH, 4
  MINDEX[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]


</assembly>
  </fpgm>
  <prep>
    <assembly>/* auto-generated pre-program */
/* VTT 6.33 compiler Tue Oct 13 13:17:16 2020 */

/* Grey scaling? */
CALL[], 84

/* InstructionsOn */
#PUSHOFF
MPPEM[]
#PUSH, 2047
GT[]
MPPEM[]
#PUSH, 9
LT[]
OR[]
#PUSH, 1
GETINFO[]
#PUSH, 37
GTEQ[]
#PUSH, 1
GETINFO[]
#PUSH, 64
LTEQ[]
AND[]
#PUSH, 6
GETINFO[]
#PUSH, 0
NEQ[]
AND[]
OR[]
IF[]
    #PUSH, 1, 1
    INSTCTRL[]
EIF[]
#PUSHON

/* DropOutCtrlOff */
SCANCTRL[], 400

SCANTYPE[], 1
SCANTYPE[], 5

/* CvtCutIn */
SVTCA[Y]
SCVTCI[], 64
WS[], 3, 64
#PUSHOFF
MPPEM[]
#PUSH, 144
GTEQ[]
IF[]
#PUSH, 3, 0, 0
SCVTCI[]
WS[]
EIF[]
#PUSHON

/* ClearTypeCtrl */
#PUSHOFF
#PUSH, 2, 2
RS[]
LTEQ[]
IF[]
    #PUSH, 4, 3
    INSTCTRL[]
EIF[]
#PUSHON

WS[], 16, 0
/* LinearAdvanceWidths */
SVTCA[Y]
CALL[], 2, 89
SVTCA[Y]
CALL[], 8, 89
CALL[], 3, 55, 2, 85
CALL[], 9, 55, 8, 85
SVTCA[Y]
CALL[], 0, 89
SVTCA[Y]
CALL[], 6, 89
SVTCA[Y]
CALL[], 10, 89
SVTCA[Y]
CALL[], 14, 89
CALL[], 1, 39, 0, 85
CALL[], 7, 50, 6, 85
CALL[], 11, 67, 10, 85
CALL[], 15, 255, 14, 85
SVTCA[Y]
CALL[], 4, 89
SVTCA[Y]
CALL[], 12, 89
CALL[], 5, 50, 4, 85
CALL[], 13, 34, 12, 85
SVTCA[Y]
CALL[], 16, 89
SVTCA[Y]
CALL[], 18, 89
CALL[], 17, 53, 16, 85
CALL[], 19, 53, 18, 85
SVTCA[X]
CALL[], 21, 25, 80, 22, 38, 90
SVTCA[X]
CALL[], 23, 56, 22, 69, 91
SVTCA[X]
CALL[], 26, 58, 25, 64, 91
SVTCA[X]
CALL[], 24, 56, 22, 69, 91
SVTCA[X]
CALL[], 27, 58, 25, 64, 91
SVTCA[X]
CALL[], 28, 21, 23, 22, 92
SVTCA[X]
CALL[], 29, 22, 28, 31
SVTCA[Y]
CALL[], 30, 23, 36, 31
CALL[], 31, 23, 255, 31
CALL[], 32, 112, 31, 85
CALL[], 33, 31, 100, 31
CALL[], 34, 24, 9, 31
CALL[], 35, 22, 40, 31
CALL[], 36, 35, 20, 31
CALL[], 37, 36, 100, 31
CALL[], 38, 36, 63, 31
CALL[], 39, 35, 33, 31
CALL[], 40, 35, 10, 31
SVTCA[X]
CALL[], 41, 25, 255, 31
CALL[], 42, 41, 48, 31
CALL[], 43, 25, 13, 31
SVTCA[Y]
CALL[], 44, 26, 31, 31
CALL[], 45, 26, 125, 31
CALL[], 46, 167, 45, 85
SVTCA[X]
CALL[], 47, 55, 27, 25, 92
CALL[], 48, 47, 21, 31
CALL[], 49, 47, 67, 31
CALL[], 50, 47, 200, 31
CALL[], 51, 47, 17, 31
CALL[], 52, 51, 19, 31
CALL[], 53, 25, 6, 31
SVTCA[X]
CALL[], 55, 54, 67, 31
CALL[], 57, 56, 125, 31
SVTCA[Y]
CALL[], 62, 61, 48, 31
CALL[], 63, 61, 143, 31
CALL[], 64, 61, 11, 31
SVTCA[X]
CALL[], 67, 66, 72, 31
SVTCA[Y]
CALL[], 70, 69, 143, 31
CALL[], 71, 69, 30, 31
CALL[], 74, 73, 143, 31
CALL[], 75, 74, 67, 31
CALL[], 76, 73, 23, 31
SVTCA[X]
CALL[], 77, 28, 255, 31
CALL[], 78, 29, 38, 31
CALL[], 79, 29, 84, 31
CALL[], 80, 29, 255, 31
SVTCA[Y]
CALL[], 81, 30, 255, 31
CALL[], 82, 32, 143, 31
CALL[], 83, 32, 255, 31
CALL[], 84, 31, 250, 31
CALL[], 85, 31, 255, 31
CALL[], 86, 33, 255, 31
CALL[], 87, 33, 250, 31
CALL[], 88, 34, 255, 31
CALL[], 89, 36, 46, 31
CALL[], 90, 37, 255, 31
CALL[], 91, 36, 255, 31
CALL[], 92, 36, 143, 31
CALL[], 93, 38, 255, 31
CALL[], 94, 35, 40, 31
CALL[], 95, 35, 53, 31
CALL[], 96, 35, 125, 31
CALL[], 97, 35, 255, 31
CALL[], 98, 35, 112, 31
CALL[], 99, 35, 72, 31
CALL[], 100, 39, 255, 31
CALL[], 101, 40, 91, 31
CALL[], 102, 40, 63, 31
SVTCA[X]
CALL[], 103, 41, 20, 31
CALL[], 104, 42, 255, 31
CALL[], 105, 42, 250, 31
CALL[], 106, 41, 91, 31
CALL[], 107, 41, 255, 31
CALL[], 108, 41, 63, 31
CALL[], 109, 43, 255, 31
SVTCA[Y]
CALL[], 110, 44, 167, 31
CALL[], 111, 44, 255, 31
CALL[], 112, 45, 112, 31
CALL[], 113, 45, 255, 31
CALL[], 114, 46, 255, 31
CALL[], 115, 46, 250, 31
CALL[], 116, 45, 50, 31
CALL[], 117, 48, 100, 31
CALL[], 118, 48, 255, 31
CALL[], 119, 48, 67, 31
CALL[], 120, 49, 255, 31
CALL[], 121, 47, 200, 31
CALL[], 122, 47, 255, 31
CALL[], 123, 50, 255, 31
CALL[], 124, 50, 167, 31
CALL[], 125, 50, 91, 31
CALL[], 126, 47, 39, 31
CALL[], 127, 51, 255, 31
CALL[], 128, 51, 77, 31
CALL[], 129, 52, 91, 31
CALL[], 130, 52, 100, 31
CALL[], 131, 53, 91, 31
CALL[], 132, 53, 63, 31
SVTCA[X]
CALL[], 133, 54, 143, 31
CALL[], 134, 54, 255, 31
CALL[], 135, 54, 167, 31
CALL[], 136, 55, 250, 31
CALL[], 137, 55, 255, 31
CALL[], 138, 56, 125, 31
CALL[], 139, 56, 255, 31
CALL[], 140, 57, 255, 31
SVTCA[Y]
CALL[], 141, 58, 125, 31
CALL[], 142, 58, 255, 31
CALL[], 143, 58, 112, 31
CALL[], 144, 58, 50, 31
CALL[], 145, 59, 250, 31
CALL[], 146, 59, 250, 31
CALL[], 147, 60, 255, 31
CALL[], 148, 62, 255, 31
CALL[], 149, 63, 200, 31
CALL[], 150, 63, 255, 31
CALL[], 151, 61, 255, 31
CALL[], 152, 61, 125, 31
CALL[], 153, 61, 48, 31
CALL[], 154, 61, 22, 31
CALL[], 155, 64, 255, 31
SVTCA[X]
CALL[], 156, 65, 255, 31
CALL[], 157, 67, 200, 31
CALL[], 158, 67, 250, 31
CALL[], 159, 67, 34, 31
CALL[], 160, 66, 10, 31
SVTCA[Y]
CALL[], 161, 68, 255, 31
CALL[], 162, 70, 125, 31
CALL[], 163, 70, 255, 31
CALL[], 164, 69, 200, 31
CALL[], 165, 69, 255, 31
CALL[], 166, 69, 112, 31
CALL[], 167, 71, 63, 31
CALL[], 168, 71, 112, 31
CALL[], 169, 71, 255, 31
CALL[], 170, 72, 255, 31
CALL[], 171, 74, 255, 31
CALL[], 172, 74, 167, 31
CALL[], 173, 75, 200, 31
CALL[], 174, 75, 255, 31
CALL[], 175, 74, 42, 31
CALL[], 176, 76, 84, 31
CALL[], 177, 76, 255, 31
CALL[], 179, 52, 178, 85
RTG[]
</assembly>
  </prep>
  <cvt>
    <talk>/* Control Program */
/* ACT generated Thu Sep 24 10:35:16 2020 */

CATEGORY Stroke
CATEGORY StrokeInheritance

InstructionsOn @9..2047

DropOutCtrlOff @144

CvtCutIn = 1, 0@144 /* 1 pixel cut-in for over- and undershoots */

ClearTypeCtrl = 1

ASM("WS[], 16, 0") /* &lt;== S[16] = threshold ppem that less than or equal is no RES */

LinearAdvanceWidths = 0

/***** Height CVTs *****/
UpperCase
  Grey
  Y
  SquareHeight
      2:  1500 /* cap height */
ASM("SVTCA[Y]")
ASM("CALL[], 2, 89")
      8:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 8, 89")
  RoundHeight
      3:    22 ~   2 @ 55 /* cap height overshoot */
      9:   -22 ~   8 @ 55 /* base line undershoot */

LowerCase
  SquareHeight
      0:  1608 /* lc ascender */
ASM("SVTCA[Y]")
ASM("CALL[], 0, 89")
      6:  1000 /* x height */
ASM("SVTCA[Y]")
ASM("CALL[], 6, 89")
     10:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 10, 89")
     14:  -462 /* lc descender */
ASM("SVTCA[Y]")
ASM("CALL[], 14, 89")
  RoundHeight
      1:   -26 ~   0 @ 39 /* lc ascender overshoot */
      7:    15 ~   6 @ 50 /* x height overshoot */
     11:   -15 ~  10 @ 67 /* base line undershoot */
     15:    -2 ~  14 @255 /* lc descender undershoot */

Figure
  SquareHeight
      4:  1500 /* figure height */
ASM("SVTCA[Y]")
ASM("CALL[], 4, 89")
     12:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 12, 89")
  RoundHeight
      5:    20 ~   4 @ 50 /* figure height overshoot */
     13:   -30 ~  12 @ 34 /* base line undershoot */

Other
  SquareHeight
     16:  1513 /* other height */
ASM("SVTCA[Y]")
ASM("CALL[], 16, 89")
     18:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 18, 89")
  RoundHeight
     17:    19 ~  16 @ 53 /* other height overshoot */
     19:   -19 ~  18 @ 53 /* base line undershoot */

/***** Reserved CVTs *****/
AnyGroup
  AnyColor
  AnyDirection
  AnyCategory
     20:     0 /* DO NOT USE!!! */

/***** Grand-Parent CVT *****/
AnyGroup
  Black
  X
  StrokeInheritance
     21:   142 /* 3x */

/***** Parent CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     22:   132 /* 2x */
LowerCase
  Black
  X
  StrokeInheritance
     25:   163 /* 1x */
ASM("SVTCA[X]")
ASM("CALL[], 21, 25, 80, 22, 38, 90")

UpperCase
  Black
  Y
  StrokeInheritance
     23:   117 /* 23x */
ASM("SVTCA[X]")
ASM("CALL[], 23, 56, 22, 69, 91")
LowerCase
  Black
  Y
  StrokeInheritance
     26:   148 /* 7x */
ASM("SVTCA[X]")
ASM("CALL[], 26, 58, 25, 64, 91")

UpperCase
  Black
  Diag
  StrokeInheritance
     24:   117 /* 23x */
ASM("SVTCA[X]")
ASM("CALL[], 24, 56, 22, 69, 91")
LowerCase
  Black
  Diag
  StrokeInheritance
     27:   148 /* 7x */
ASM("SVTCA[X]")
ASM("CALL[], 27, 58, 25, 64, 91")

/***** StrokeInheritance CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     28:   122 /* 1x */
ASM("SVTCA[X]")
ASM("CALL[], 28, 21, 23, 22, 92")
     29:   169 =  22 @ 28 /* 4x */
  Y
  StrokeInheritance
     30:    89 =  23 @ 36 /* 2x */
     31:   117 =  23 @255 /* 28x */
     32:    -9 ~  31 @112 /* 10x */
     33:   128 =  31 @100 /* 6x */
  Diag
  StrokeInheritance
     34:     0 =  24 @  9 /* 2x */
     35:   157 =  22 @ 40 /* 58x */
     36:   108 =  35 @ 20 /* 17x */
     37:    97 =  36 @100 /* 2x */
     38:   124 =  36 @ 63 /* 2x */
     39:   191 =  35 @ 33 /* 2x */
     40:   259 =  35 @ 10 /* 2x */

LowerCase
  Black
  X
  StrokeInheritance
     41:   165 =  25 @255 /* 16x */
     42:   146 =  41 @ 48 /* 3x */
     43:   241 =  25 @ 13 /* 1x */
  Y
  StrokeInheritance
     44:   115 =  26 @ 31 /* 5x */
     45:   140 =  26 @125 /* 29x */
     46:     4 ~  45 @167 /* 12x */
  Diag
  StrokeInheritance
     47:   161 /* 68x */
ASM("SVTCA[X]")
ASM("CALL[], 47, 55, 27, 25, 92")
     48:   112 =  47 @ 21 /* 6x */
     49:   145 =  47 @ 67 /* 5x */
     50:   165 =  47 @200 /* 20x */
     51:   220 =  47 @ 17 /* 12x */
     52:   274 =  51 @ 19 /* 2x */
     53:   332 =  25 @  6 /* 2x */

Figure
  Black
  X
  StrokeInheritance
     54:   155 /* 8x */
     55:   170 =  54 @ 67 /* 3x */
     56:   189 /* 8x */
     57:   197 =  56 @125 /* 2x */
  Y
  StrokeInheritance
     58:   111 /* 12x */
     59:   172 /* 2x */
  Diag
  StrokeInheritance
     60:     0 /* 2x */
     61:   111 /* 20x */
     62:    91 =  61 @ 48 /* 2x */
     63:   105 =  61 @143 /* 4x */
     64:   202 =  61 @ 11 /* 3x */

Other
  Black
  X
  StrokeInheritance
     65:    11 /* 1x */
     66:   170 /* 5x */
     67:   156 =  66 @ 72 /* 3x */
  Y
  StrokeInheritance
     68:    22 /* 1x */
     69:   118 /* 26x */
     70:   113 =  69 @143 /* 6x */
     71:   152 =  69 @ 30 /* 8x */
  Diag
  StrokeInheritance
     72:    17 /* 8x */
     73:   132 /* 34x */
     74:   125 =  73 @143 /* 23x */
     75:   138 =  74 @ 67 /* 7x */
     76:   176 =  73 @ 23 /* 11x */

/***** Stroke CVTs *****/
UpperCase
  Black
  X
  Stroke
     77:   122 =  28 @255 /* 1x */
     78:   142 =  29 @ 38 /* 1x */
     79:   160 =  29 @ 84 /* 1x */
     80:   173 =  29 @255 /* 2x */
  Y
  Stroke
     81:    89 =  30 @255 /* 2x */
     82:   101 =  32 @143 /* 2x */
     83:   108 =  32 @255 /* 8x */
     84:   114 =  31 @250 /* 4x */
     85:   118 =  31 @255 /* 8x */
     86:   128 =  33 @255 /* 5x */
     87:   132 =  33 @250 /* 1x */
  Diag
  Stroke
     88:     0 =  34 @255 /* 2x */
     89:    86 =  36 @ 46 /* 1x */
     90:    97 =  37 @255 /* 2x */
     91:   106 =  36 @255 /* 9x */
     92:   114 =  36 @143 /* 3x */
     93:   124 =  38 @255 /* 2x */
     94:   135 =  35 @ 40 /* 1x */
     95:   142 =  35 @ 53 /* 1x */
     96:   153 =  35 @125 /* 5x */
     97:   161 =  35 @255 /* 26x */
     98:   170 =  35 @112 /* 3x */
     99:   175 =  35 @ 72 /* 1x */
    100:   191 =  39 @255 /* 2x */
    101:   248 =  40 @ 91 /* 1x */
    102:   275 =  40 @ 63 /* 1x */

LowerCase
  Black
  X
  Stroke
    103:   113 =  41 @ 20 /* 1x */
    104:   146 =  42 @255 /* 2x */
    105:   150 =  42 @250 /* 1x */
    106:   156 =  41 @ 91 /* 1x */
    107:   167 =  41 @255 /* 10x */
    108:   183 =  41 @ 63 /* 1x */
    109:   241 =  43 @255 /* 1x */
  Y
  Stroke
    110:   109 =  44 @167 /* 1x */
    111:   115 =  44 @255 /* 4x */
    112:   129 =  45 @112 /* 6x */
    113:   137 =  45 @255 /* 10x */
    114:   144 =  46 @255 /* 7x */
    115:   148 =  46 @250 /* 5x */
    116:   160 =  45 @ 50 /* 1x */
  Diag
  Stroke
    117:   103 =  48 @100 /* 1x */
    118:   113 =  48 @255 /* 4x */
    119:   127 =  48 @ 67 /* 1x */
    120:   144 =  49 @255 /* 5x */
    121:   154 =  47 @200 /* 9x */
    122:   159 =  47 @255 /* 15x */
    123:   166 =  50 @255 /* 13x */
    124:   172 =  50 @167 /* 3x */
    125:   176 =  50 @ 91 /* 4x */
    126:   186 =  47 @ 39 /* 1x */
    127:   219 =  51 @255 /* 9x */
    128:   232 =  51 @ 77 /* 1x */
    129:   263 =  52 @ 91 /* 1x */
    130:   284 =  52 @100 /* 1x */
    131:   321 =  53 @ 91 /* 1x */
    132:   348 =  53 @ 63 /* 1x */

Figure
  Black
  X
  Stroke
    133:   147 =  54 @143 /* 1x */
    134:   153 =  54 @255 /* 3x */
    135:   160 =  54 @167 /* 1x */
    136:   166 =  55 @250 /* 1x */
    137:   170 =  55 @255 /* 2x */
    138:   181 =  56 @125 /* 2x */
    139:   189 =  56 @255 /* 4x */
    140:   197 =  57 @255 /* 2x */
  Y
  Stroke
    141:   103 =  58 @125 /* 2x */
    142:   112 =  58 @255 /* 7x */
    143:   120 =  58 @112 /* 1x */
    144:   131 =  58 @ 50 /* 2x */
    145:   168 =  59 @250 /* 1x */
    146:   176 =  59 @250 /* 1x */
  Diag
  Stroke
    147:     0 =  60 @255 /* 2x */
    148:    91 =  62 @255 /* 2x */
    149:   100 =  63 @200 /* 1x */
    150:   105 =  63 @255 /* 3x */
    151:   112 =  61 @255 /* 5x */
    152:   120 =  61 @125 /* 3x */
    153:   133 =  61 @ 48 /* 1x */
    154:   157 =  61 @ 22 /* 2x */
    155:   202 =  64 @255 /* 3x */

Other
  Black
  X
  Stroke
    156:    11 =  65 @255 /* 1x */
    157:   151 =  67 @200 /* 1x */
    158:   160 =  67 @250 /* 1x */
    159:   186 =  67 @ 34 /* 1x */
    160:   276 =  66 @ 10 /* 2x */
  Y
  Stroke
    161:    22 =  68 @255 /* 1x */
    162:   105 =  70 @125 /* 1x */
    163:   111 =  70 @255 /* 4x */
    164:   116 =  69 @200 /* 3x */
    165:   121 =  69 @255 /* 9x */
    166:   129 =  69 @112 /* 1x */
    167:   136 =  71 @ 63 /* 1x */
    168:   143 =  71 @112 /* 2x */
    169:   153 =  71 @255 /* 5x */
  Diag
  Stroke
    170:    17 =  72 @255 /* 8x */
    171:   119 =  74 @255 /* 6x */
    172:   127 =  74 @167 /* 5x */
    173:   133 =  75 @200 /* 3x */
    174:   138 =  75 @255 /* 4x */
    175:   149 =  74 @ 42 /* 5x */
    176:   164 =  76 @ 84 /* 1x */
    177:   177 =  76 @255 /* 10x */



/*old style figures height control*/

178: 1093 /*small cap square height*/
179: 22 ~   178 @ 52 /*small cap round height overshoot*/



</talk>
  </cvt>
  <glyf>
    <TTGlyph ID="0">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

/* YDir: Stroke #0 */
YShift(3,5) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(0,4) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 0, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
SHP[1], 5
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="1">
      <instructions>
        <talk>/* VTTTalk Unicode 0xd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

</talk>
        <assembly>/* TT glyph 1, char 0xd */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="2">
      <instructions>
        <talk>/* VTTTalk Unicode 0x20 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 2, char 0x20 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="3">
      <instructions>
        <talk>/* VTTTalk glyph 3, char 0x21 (!) */
/* GUI generated Mon Sep 28 18:23:26 2020 */

/* Y direction */
ResYAnchor(9,19)
YShift(9,3)
YDist(3,21,&gt;=)
ResYAnchor(15,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 3, char 0x21 (!) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 9, 19, 114
SHP[2], 3
SRP0[], 3
MDRP[m&gt;RWh], 21
CALL[], 15, 3, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="4">
      <instructions>
        <talk>/* VTTTalk glyph 4, char 0x22 (") */
/* GUI generated Mon Sep 28 18:24:06 2020 */

/* Y direction */
ResYAnchor(4,3)
YShift(4,13)
YAnchor(13)
YDist(4,0,&gt;=)
YShift(0,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 4, char 0x22 (") */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 4, 3, 114
SHP[2], 13
MDAP[R], 13
SRP0[], 4
MDRP[m&gt;RBl], 0
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="5">
      <instructions>
        <talk>/* VTTTalk glyph 5, char 0x23 (#) */
/* GUI generated Mon Sep 28 18:25:32 2020 */

/* Y direction */
ResYAnchor(9,3)
YShift(9,10)
YShift(9,13)
YShift(13,14)
ResYAnchor(11,18)
YShift(11,8)
YIPAnchor(11,4,9)
YShift(4,5)
YDist(4,1,&gt;=)
YShift(1,0)
YShift(11,15)
YAnchor(15)
YShift(15,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 5, char 0x23 (#) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 9, 3, 114
SHP[2], 10
SHP[2], 13
SRP1[], 13
SHP[1], 14
CALL[], 11, 18, 114
SHP[2], 8
SRP1[], 9
IP[], 4
MDAP[R], 4
SHP[1], 5
MDRP[m&gt;RWh], 1
SHP[2], 0
SRP1[], 11
SHP[1], 15
MDAP[R], 15
SHP[1], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="6">
      <instructions>
        <talk>/* VTTTalk glyph 6, char 0x24 ($) */
/* GUI generated Mon Sep 28 18:27:58 2020 */

/* Y direction */
YAnchor(16,5)
YShift(16,23)
YShift(23,53)
YShift(23,20)
YShift(20,19)
YDist(16,47,&gt;=)
YShift(47,46)
YAnchor(35,12)
YShift(35,4)
YShift(4,39)
YShift(4,1)
YShift(1,0)
YInterpolate(35,7,32,42,50,41,51,13,26,16)
YDist(35,38,&gt;=)
YShift(38,45)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 6, char 0x24 ($) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MIAP[R], 16, 5
SHP[1], 23
SRP1[], 23
SHP[1], 53
SHP[1], 20
SRP1[], 20
SHP[1], 19
MDRP[m&gt;RBl], 47
SHP[2], 46
MIAP[R], 35, 12
SHP[1], 4
SRP1[], 4
SHP[1], 39
SHP[1], 1
SRP1[], 1
SHP[1], 0
SRP1[], 35
SRP2[], 16
SLOOP[], 8
IP[], 7, 32, 42, 50, 41, 51, 13, 26
MDRP[m&gt;RGr], 38
SHP[2], 45
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="7">
      <instructions>
        <talk>/* VTTTalk glyph 7, char 0x25 (%) */
/* GUI generated Mon Sep 28 18:29:00 2020 */

/* Y direction */
ResYAnchor(3,5)
YShift(3,21)
YDist(3,9,&gt;=)
YShift(9,15)
YShift(3,25)
YAnchor(25)
YShift(25,26)
ResYAnchor(37,13)
YShift(37,43)
YShift(37,27)
YAnchor(27)
YShift(27,24)
YDist(37,31,&gt;=)
YShift(31,49)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 7, char 0x25 (%) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 5, 114
SHP[2], 21
MDRP[m&gt;RGr], 9
SHP[2], 15
SHP[1], 25
MDAP[R], 25
SHP[1], 26
CALL[], 37, 13, 114
SHP[2], 43
SHP[2], 27
MDAP[R], 27
SHP[1], 24
SRP0[], 37
MDRP[m&gt;RGr], 31
SHP[2], 49
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="8">
      <instructions>
        <talk>/* VTTTalk glyph 8, char 0x26 (&amp;) */
/* GUI generated Mon Sep 28 18:31:48 2020 */

/* Y direction */
ResYAnchor(4,19)
YShift(4,0)
YAnchor(0)
YShift(0,59)
YShift(4,51)
YShift(51,1)
ResYAnchor(16,3)
YShift(16,19)
YShift(16,23)
YAnchor(23)
YShift(16,25)
YAnchor(25)
YShift(16,29)
YIPAnchor(16,45,4)
YShift(45,35)
YShift(35,10)
YShift(45,55)
YShift(55,56)
YShift(56,42)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 8, char 0x26 (&amp;) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 4, 19, 114
SHP[2], 0
MDAP[R], 0
SHP[1], 59
SHP[2], 51
SRP1[], 51
SHP[1], 1
CALL[], 16, 3, 114
SHP[2], 19
SHP[2], 23
MDAP[R], 23
SHP[2], 25
MDAP[R], 25
SHP[2], 29
SRP1[], 4
IP[], 45
MDAP[R], 45
SHP[1], 35
SRP1[], 35
SHP[1], 10
SRP1[], 45
SHP[1], 55
SRP1[], 55
SHP[1], 56
SRP1[], 56
SHP[1], 42
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="9">
      <instructions>
        <talk>/* VTTTalk glyph 9, char 0x27 (') */
/* GUI generated Mon Sep 28 18:31:11 2020 */

/* Y direction */
ResYAnchor(4,3)
YDist(4,0,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 9, char 0x27 (') */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="10">
      <instructions>
        <talk>/* VTTTalk glyph 10, char 0x28 (() */
/* GUI generated Mon Sep 28 18:32:18 2020 */

/* Y direction */
ResYAnchor(3,3)
YShift(3,4)
YAnchor(11)
YShift(11,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 10, char 0x28 (() */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 3, 114
SHP[2], 4
MDAP[R], 11
SHP[1], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="11">
      <instructions>
        <talk>/* VTTTalk glyph 11, char 0x29 ()) */
/* GUI generated Mon Sep 28 18:33:29 2020 */

/* Y direction */
YAnchor(3)
YShift(3,4)
ResYAnchor(11,3)
YShift(11,10)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 11, char 0x29 ()) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
CALL[], 11, 3, 114
SHP[2], 10
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="12">
      <instructions>
        <talk>/* VTTTalk glyph 12, char 0x2a (*) */
/* GUI generated Mon Oct  5 13:16:36 2020 */

/* Y direction */
YAnchor(27,17)
YShift(27,0)
YAnchor(0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 12, char 0x2a (*) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MIAP[R], 27, 17
SHP[1], 0
MDAP[R], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="13">
      <instructions>
        <talk>/* VTTTalk glyph 13, char 0x2b (+) */
/* GUI generated Mon Sep 28 18:33:56 2020 */

/* Y direction */
YAnchor(0)
YShift(0,4)
YShift(0,1)
YShift(1,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 13, char 0x2b (+) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
SHP[2], 1
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="14">
      <instructions>
        <talk>/* VTTTalk glyph 14, char 0x2c (,) */
/* GUI generated Mon Sep 28 18:34:32 2020 */

/* Y direction */
YAnchor(9)
YDist(9,15,&gt;=3)
YShift(15,0)
YInterpolate(15,3,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 14, char 0x2c (,) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 9
SMD[], 192
MDRP[m&gt;RGr], 15
SHP[2], 0
IP[], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="15">
      <instructions>
        <talk>/* VTTTalk glyph 15, char 0x2d (-) */
/* GUI generated Mon Sep 28 18:34:46 2020 */

/* Y direction */
YAnchor(5)
YShift(5,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 15, char 0x2d (-) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="16">
      <instructions>
        <talk>/* VTTTalk glyph 16, char 0x2e (.) */
/* GUI generated Mon Sep 28 18:35:05 2020 */

/* Y direction */
ResYAnchor(9,11)
YShift(9,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 16, char 0x2e (.) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 9, 11, 114
SHP[2], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="17">
      <instructions>
        <talk>/* VTTTalk glyph 17, char 0x2f (/) */
/* GUI generated Mon Sep 28 18:36:06 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,2)
YAnchor(3)
YShift(3,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 17, char 0x2f (/) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 2
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="18">
      <instructions>
        <talk>/* VTTTalk glyph 18, char 0x30 (0) */
/* GUI generated Mon Sep 28 10:51:27 2020 */

/* Y direction */
ResYAnchor(3,5)
YShift(3,21)
ResYAnchor(9,13)
YShift(9,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 18, char 0x30 (0) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 5, 114
SHP[2], 21
CALL[], 9, 13, 114
SHP[2], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="19">
      <instructions>
        <talk>/* VTTTalk glyph 19, char 0x31 (1) */
/* GUI generated Mon Sep 28 10:52:29 2020 */

/* Y direction */
ResYAnchor(0,12)
YShift(0,15)
ResYAnchor(8,5)
YShift(8,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 19, char 0x31 (1) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 12, 114
SHP[2], 15
CALL[], 8, 5, 114
SHP[2], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="20">
      <instructions>
        <talk>/* VTTTalk glyph 20, char 0x32 (2) */
/* GUI generated Mon Sep 28 10:53:03 2020 */

/* Y direction */
ResYAnchor(15,5)
YShift(15,8)
ResYAnchor(31,13)
YShift(31,0)
YAnchor(0)
YInterpolate(31,34,1,21,25,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 20, char 0x32 (2) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 15, 5, 114
SHP[2], 8
CALL[], 31, 13, 114
SHP[2], 0
MDAP[R], 0
SRP1[], 15
SLOOP[], 4
IP[], 34, 1, 21, 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="21">
      <instructions>
        <talk>/* VTTTalk glyph 21, char 0x33 (3) */
/* GUI generated Mon Sep 28 10:53:35 2020 */

/* Y direction */
ResYAnchor(32,5)
YShift(32,25)
ResYAnchor(45,13)
YShift(45,10)
YIPAnchor(45,17,32)
YShift(17,18)
YShift(18,39,38)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 21, char 0x33 (3) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 32, 5, 114
SHP[2], 25
CALL[], 45, 13, 114
SHP[2], 10
SRP1[], 32
IP[], 17
MDAP[R], 17
SHP[1], 18
SRP1[], 18
SHP[1], 39
SHP[1], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="22">
      <instructions>
        <talk>/* VTTTalk glyph 22, char 0x34 (4) */
/* GUI generated Thu Oct  1 10:47:00 2020 */

/* Y direction */
ResYAnchor(2,5)
ResYAnchor(9,13)
YIPAnchor(9,19,2)
YInterpolate(9,13,2)
YShift(19,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 22, char 0x34 (4) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 2, 5, 114
CALL[], 9, 13, 114
SRP1[], 2
IP[], 19
MDAP[R], 19
SRP1[], 2
IP[], 13
SRP1[], 19
SHP[1], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="23">
      <instructions>
        <talk>/* VTTTalk glyph 23, char 0x35 (5) */
/* GUI generated Thu Oct  1 10:48:37 2020 */

/* Y direction */
ResYAnchor(18,4)
YShift(18,21)
ResYAnchor(32,13)
YShift(32,3)
YAnchor(3)
YShift(32,8)
YIPAnchor(32,26,18)
YShift(26,14)
YShift(14,25)
YShift(25,16)
YShift(16,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 23, char 0x35 (5) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 18, 4, 114
SHP[2], 21
CALL[], 32, 13, 114
SHP[2], 3
MDAP[R], 3
SHP[2], 8
SRP1[], 18
IP[], 26
MDAP[R], 26
SHP[1], 14
SRP1[], 14
SHP[1], 25
SRP1[], 25
SHP[1], 16
SRP1[], 16
SHP[1], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="24">
      <instructions>
        <talk>/* VTTTalk glyph 24, char 0x36 (6) */
/* GUI generated Thu Oct  1 10:48:58 2020 */

/* Y direction */
ResYAnchor(3,5)
YShift(3,4)
ResYAnchor(29,13)
YShift(29,10)
YIPAnchor(3,23,29)
YShift(23,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 24, char 0x36 (6) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 5, 114
SHP[2], 4
CALL[], 29, 13, 114
SHP[2], 10
SRP2[], 3
IP[], 23
MDAP[R], 23
SHP[1], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="25">
      <instructions>
        <talk>/* VTTTalk glyph 25, char 0x37 (7) */
/* GUI generated Thu Oct  1 10:49:32 2020 */

/* Y direction */
ResYAnchor(1,4)
YShift(1,13)
YShift(1,14)
YAnchor(14)
ResYAnchor(7,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 25, char 0x37 (7) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 1, 4, 114
SHP[2], 13
SHP[2], 14
MDAP[R], 14
CALL[], 7, 13, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="26">
      <instructions>
        <talk>/* VTTTalk glyph 26, char 0x38 (8) */
/* GUI generated Thu Oct  1 10:50:05 2020 */

/* Y direction */
ResYAnchor(22,5)
YShift(22,35)
ResYAnchor(47,13)
YShift(47,10)
YInterpolate(47,16,4,28,3,41,29,22)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 26, char 0x38 (8) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 22, 5, 114
SHP[2], 35
CALL[], 47, 13, 114
SHP[2], 10
SRP1[], 22
SLOOP[], 6
IP[], 16, 4, 28, 3, 41, 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="27">
      <instructions>
        <talk>/* VTTTalk glyph 27, char 0x39 (9) */
/* GUI generated Thu Oct  1 10:50:21 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)
ResYAnchor(26,5)
YShift(26,7)
YIPAnchor(26,20,0)
YShift(20,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 27, char 0x39 (9) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
CALL[], 26, 5, 114
SHP[2], 7
SRP1[], 0
IP[], 20
MDAP[R], 20
SHP[1], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="28">
      <instructions>
        <talk>/* VTTTalk glyph 28, char 0x3a (:) */
/* GUI generated Mon Oct  5 13:17:11 2020 */

/* Y direction */

ResYAnchor(9,11)
YShift(9,3)
ResYAnchor(15,7)
YShift(15,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 28, char 0x3a (:) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 9, 11, 114
SHP[2], 3
CALL[], 15, 7, 114
SHP[2], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="29">
      <instructions>
        <talk>/* VTTTalk glyph 29, char 0x3b (;) */
/* GUI generated Mon Oct  5 13:18:56 2020 */

/* Y direction */
ResYAnchor(3,7)
YShift(3,9)
YAnchor(21)
YShift(21,15)
YShift(21,27)
YAnchor(27)
YShift(27,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 29, char 0x3b (;) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 7, 114
SHP[2], 9
MDAP[R], 21
SHP[1], 15
SHP[1], 27
MDAP[R], 27
SHP[1], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="30">
      <instructions>
        <talk>/* VTTTalk glyph 30, char 0x3c (&lt;) */
/* GUI generated Mon Oct  5 13:20:02 2020 */

/* Y direction */
YAnchor(14)
YDist(14,4,&gt;=)
YInterpolate(14,9,0,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 30, char 0x3c (&lt;) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 14
MDRP[m&gt;RGr], 4
IP[], 9
IP[], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="31">
      <instructions>
        <talk>/* VTTTalk glyph 31, char 0x3d (=) */
/* GUI generated Mon Oct  5 13:20:41 2020 */

/* Y direction */
YAnchor(11)
YShift(11,8)
YDist(11,2,&gt;=)
YShift(2,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 31, char 0x3d (=) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 8
MDRP[m&gt;RWh], 2
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="32">
      <instructions>
        <talk>/* VTTTalk glyph 32, char 0x3e (&gt;) */
/* GUI generated Mon Oct  5 13:21:22 2020 */

/* Y direction */
YAnchor(4)
YDist(4,14,&gt;=)
YInterpolate(4,0,9,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 32, char 0x3e (&gt;) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RGr], 14
IP[], 0
IP[], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="33">
      <instructions>
        <talk>/* VTTTalk glyph 33, char 0x3f (?) */
/* GUI generated Mon Oct  5 13:22:15 2020 */

/* Y direction */
ResYAnchor(3,3)
YShift(3,24)
YShift(3,33)
YAnchor(33)
ResYAnchor(45,8)
YShift(45,39)
YShift(39,13)
YAnchor(13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 33, char 0x3f (?) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 3, 114
SHP[2], 24
SHP[2], 33
MDAP[R], 33
CALL[], 45, 8, 114
SHP[2], 39
SRP1[], 39
SHP[1], 13
MDAP[R], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="34">
      <instructions>
        <talk>/* VTTTalk glyph 34, char 0x40 (@) */
/* GUI generated Mon Oct  5 13:23:39 2020 */

/* Y direction */
YAnchor(33)
YShift(33,26)
YShift(26,51)
YAnchor(51)
YShift(51,45)
YAnchor(45)
YShift(45,14)
YShift(51,57)
YShift(57,48)
ResYAnchor(39,3)
YShift(39,20)
YShift(20,3)
YAnchor(3)
YShift(3,7)
YShift(3,64)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 34, char 0x40 (@) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 33
SHP[1], 26
SRP1[], 26
SHP[1], 51
MDAP[R], 51
SHP[1], 45
MDAP[R], 45
SHP[1], 14
SRP1[], 51
SHP[1], 57
SRP1[], 57
SHP[1], 48
CALL[], 39, 3, 114
SHP[2], 20
SRP1[], 20
SHP[1], 3
MDAP[R], 3
SHP[1], 7
SHP[1], 64
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="35">
      <instructions>
        <talk>/* VTTTalk glyph 35, char 0x41 (A) */
/* GUI generated Mon Sep 28 10:49:51 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,10)
YAnchor(10)
ResYAnchor(4,3)

YShift(4,5)
YShift(4,14)
YShift(4,15)
YIPAnchor(4,23,0)
YShift(23,22,27,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 35, char 0x41 (A) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 10
MDAP[R], 10
CALL[], 4, 3, 114
SHP[2], 5
SHP[2], 14
SHP[2], 15
SRP1[], 0
IP[], 23
MDAP[R], 23
SLOOP[], 3
SHP[1], 22, 27, 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="36">
      <instructions>
        <talk>/* VTTTalk glyph 36, char 0x42 (B) */
/* GUI generated Fri Sep 25 12:04:41 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,22)
ResYAnchor(6,2)
YShift(6,41)
YIPAnchor(6,30,0)
YShift(30,33)
YInterpolate(33,13,14,30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 36, char 0x42 (B) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 22
CALL[], 6, 2, 114
SHP[2], 41
SRP1[], 0
IP[], 30
MDAP[R], 30
SHP[1], 33
SRP2[], 33
IP[], 13
IP[], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="37">
      <instructions>
        <talk>/* VTTTalk glyph 37, char 0x43 (C) */
/* GUI generated Wed Oct  7 10:42:44 2020 */

/* Y direction */
ResYAnchor(3,3)
YShift(3,10)
YAnchor(10)
YShift(3,14)
ResYAnchor(28,9)
YShift(28,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 37, char 0x43 (C) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 3, 114
SHP[2], 10
MDAP[R], 10
SHP[2], 14
CALL[], 28, 9, 114
SHP[2], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="38">
      <instructions>
        <talk>/* VTTTalk glyph 38, char 0x44 (D) */
/* GUI generated Mon Sep 28 11:11:40 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,17)
ResYAnchor(6,2)
YShift(6,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 38, char 0x44 (D) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 17
CALL[], 6, 2, 114
SHP[2], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="39">
      <instructions>
        <talk>/* VTTTalk glyph 39, char 0x45 (E) */
/* GUI generated Mon Sep 28 11:12:27 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,15)
ResYAnchor(6,2)
YShift(6,11)
YIPAnchor(0,20,6)
YShift(20,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 39, char 0x45 (E) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 15
CALL[], 6, 2, 114
SHP[2], 11
SRP2[], 0
IP[], 20
MDAP[R], 20
SHP[1], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="40">
      <instructions>
        <talk>/* VTTTalk glyph 40, char 0x46 (F) */
/* GUI generated Fri Oct  9 16:04:37 2020 */

/* Y direction */
ResYAnchor(0,8)
ResYAnchor(6,2)
YShift(6,9)
YAnchor(9)
YShift(6,11)
YIPAnchor(6,18,0)
YShift(18,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 40, char 0x46 (F) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 6, 2, 114
SHP[2], 9
MDAP[R], 9
SHP[2], 11
SRP1[], 0
IP[], 18
MDAP[R], 18
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="41">
      <instructions>
        <talk>/* VTTTalk glyph 41, char 0x47 (G) */
/* GUI generated Fri Oct  9 16:04:57 2020 */

/* Y direction */
ResYAnchor(3,3)
YShift(3,10)
YAnchor(10)
YShift(3,14)
ResYAnchor(34,9)
YShift(34,20)
YShift(20,30)
YShift(30,23)
YIPAnchor(34,26,3)
YShift(26,24)
YShift(24,29)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 41, char 0x47 (G) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 3, 114
SHP[2], 10
MDAP[R], 10
SHP[2], 14
CALL[], 34, 9, 114
SHP[2], 20
SRP1[], 20
SHP[1], 30
SRP1[], 30
SHP[1], 23
SRP1[], 3
IP[], 26
MDAP[R], 26
SHP[1], 24
SRP1[], 24
SHP[1], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="42">
      <instructions>
        <talk>/* VTTTalk glyph 42, char 0x48 (H) */
/* GUI generated Thu Sep 24 11:22:02 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,20)
YAnchor(20)
ResYAnchor(6,2)
YShift(6,26)
YAnchor(26)
YIPAnchor(6,19,0)
YShift(19,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 42, char 0x48 (H) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 20
MDAP[R], 20
CALL[], 6, 2, 114
SHP[2], 26
MDAP[R], 26
SRP1[], 0
IP[], 19
MDAP[R], 19
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="43">
      <instructions>
        <talk>/* VTTTalk glyph 43, char 0x49 (I) */
/* GUI generated Fri Sep 25 11:55:29 2020 */

/* Y direction */
ResYAnchor(0,8)
ResYAnchor(6,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 43, char 0x49 (I) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 6, 2, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="44">
      <instructions>
        <talk>/* VTTTalk glyph 44, char 0x4a (J) */
/* GUI generated Fri Sep 25 11:55:44 2020 */

/* Y direction */
ResYAnchor(11,2)
YAnchor(19)
YShift(19,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 44, char 0x4a (J) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 11, 2, 114
MDAP[R], 19
SHP[1], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="45">
      <instructions>
        <talk>/* VTTTalk glyph 45, char 0x4b (K) */
/* GUI generated Fri Sep 25 11:56:33 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,26)
YAnchor(26)
ResYAnchor(6,2)
YShift(6,18)
YAnchor(18)
YInterpolate(0,14,15,22,23,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 45, char 0x4b (K) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 26
MDAP[R], 26
CALL[], 6, 2, 114
SHP[2], 18
MDAP[R], 18
SRP1[], 0
SLOOP[], 4
IP[], 14, 15, 22, 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="46">
      <instructions>
        <talk>/* VTTTalk glyph 46, char 0x4c (L) */
/* GUI generated Fri Sep 25 11:56:52 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,12)
YShift(0,14)
YAnchor(14)
ResYAnchor(6,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 46, char 0x4c (L) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 12
SHP[2], 14
MDAP[R], 14
CALL[], 6, 2, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="47">
      <instructions>
        <talk>/* VTTTalk glyph 47, char 0x4d (M) */
/* GUI generated Fri Sep 25 11:57:39 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,1)
YShift(0,19)
YAnchor(19)
YShift(19,25)
YAnchor(25)
ResYAnchor(6,2)
YShift(6,11)
YAnchor(11)
YInterpolate(0,9,28,23,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 47, char 0x4d (M) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 1
SHP[2], 19
MDAP[R], 19
SHP[1], 25
MDAP[R], 25
CALL[], 6, 2, 114
SHP[2], 11
MDAP[R], 11
SRP1[], 0
SLOOP[], 3
IP[], 9, 28, 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="48">
      <instructions>
        <talk>/* VTTTalk glyph 48, char 0x4e (N) */
/* GUI generated Fri Sep 25 11:58:21 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,19)
YAnchor(19)
ResYAnchor(6,2)
YShift(6,14)
YInterpolate(0,9,21,4,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 48, char 0x4e (N) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 19
MDAP[R], 19
CALL[], 6, 2, 114
SHP[2], 14
SRP2[], 0
SLOOP[], 3
IP[], 9, 21, 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="49">
      <instructions>
        <talk>/* VTTTalk glyph 49, char 0x4f (O) */
/* GUI generated Wed Oct  7 10:47:21 2020 */

/* Y direction */
ResYAnchor(3,3)
YShift(3,21)
ResYAnchor(9,9)
YShift(9,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 49, char 0x4f (O) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 3, 114
SHP[2], 21
CALL[], 9, 9, 114
SHP[2], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="50">
      <instructions>
        <talk>/* VTTTalk glyph 50, char 0x50 (P) */
/* GUI generated Fri Sep 25 11:58:29 2020 */

/* Y direction */
ResYAnchor(0,8)
ResYAnchor(6,2)
YShift(6,27)
YIPAnchor(6,13,0)
YShift(13,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 50, char 0x50 (P) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 6, 2, 114
SHP[2], 27
SRP1[], 0
IP[], 13
MDAP[R], 13
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="51">
      <instructions>
        <talk>/* VTTTalk glyph 51, char 0x51 (Q) */
/* GUI generated Tue Oct  6 11:47:15 2020 */

/* Y direction */
ResYAnchor(3,3)
YShift(3,21)
ResYAnchor(9,9)
YShift(9,15)
YShift(15,33)
YAnchor(33)
YShift(9,50)
YShift(50,43)
YInterpolate(50,51,42,27,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 51, char 0x51 (Q) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 3, 114
SHP[2], 21
CALL[], 9, 9, 114
SHP[2], 15
SRP1[], 15
SHP[1], 33
MDAP[R], 33
SHP[2], 50
SRP1[], 50
SHP[1], 43
SLOOP[], 3
IP[], 51, 42, 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="52">
      <instructions>
        <talk>/* VTTTalk glyph 52, char 0x52 (R) */
/* GUI generated Fri Sep 25 11:59:32 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,38)
YAnchor(38)
ResYAnchor(6,2)
YShift(6,26)
YIPAnchor(0,16,6)
YShift(16,17)
YShift(17,33)
YShift(33,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 52, char 0x52 (R) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 38
MDAP[R], 38
CALL[], 6, 2, 114
SHP[2], 26
SRP2[], 0
IP[], 16
MDAP[R], 16
SHP[1], 17
SRP1[], 17
SHP[1], 33
SRP1[], 33
SHP[1], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="53">
      <instructions>
        <talk>/* VTTTalk glyph 53, char 0x53 (S) */
/* GUI generated Fri Sep 25 12:00:33 2020 */

/* Y direction */
ResYAnchor(18,3)
YShift(18,25)
YAnchor(25)
YShift(18,22)
YAnchor(22)
YShift(22,23)
YShift(18,29)
YShift(29,21)
ResYAnchor(41,9)
YShift(41,2)
YAnchor(2)
YShift(41,6)
YShift(6,44)
YInterpolate(41,9,38,15,32,18)
YShift(41,45)
YAnchor(45)
YShift(45,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 53, char 0x53 (S) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 18, 3, 114
SHP[2], 25
MDAP[R], 25
SHP[2], 22
MDAP[R], 22
SHP[1], 23
SHP[2], 29
SRP1[], 29
SHP[1], 21
CALL[], 41, 9, 114
SHP[2], 2
MDAP[R], 2
SHP[2], 6
SRP1[], 6
SHP[1], 44
SRP1[], 18
SLOOP[], 4
IP[], 9, 38, 15, 32
SHP[2], 45
MDAP[R], 45
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="54">
      <instructions>
        <talk>/* VTTTalk glyph 54, char 0x54 (T) */
/* GUI generated Fri Sep 25 12:01:05 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,18)
YShift(18,6)
YShift(1,19)
YAnchor(19)
YShift(19,4)
ResYAnchor(12,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 54, char 0x54 (T) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 18
SRP1[], 18
SHP[1], 6
SHP[2], 19
MDAP[R], 19
SHP[1], 4
CALL[], 12, 8, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="55">
      <instructions>
        <talk>/* VTTTalk glyph 55, char 0x55 (U) */
/* GUI generated Fri Sep 25 12:01:11 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,19)
YAnchor(19)
ResYAnchor(26,9)
YShift(26,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 55, char 0x55 (U) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 19
MDAP[R], 19
CALL[], 26, 9, 114
SHP[2], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="56">
      <instructions>
        <talk>/* VTTTalk glyph 56, char 0x56 (V) */
/* GUI generated Fri Sep 25 12:01:29 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,11)
YAnchor(11)
ResYAnchor(17,8)
YInterpolate(17,6,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 56, char 0x56 (V) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 11
MDAP[R], 11
CALL[], 17, 8, 114
SRP1[], 1
IP[], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="57">
      <instructions>
        <talk>/* VTTTalk glyph 57, char 0x57 (W) */
/* GUI generated Fri Sep 25 12:02:06 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,17)
YShift(1,27)
YShift(27,26)
ResYAnchor(13,8)
YShift(13,33)
YInterpolate(13,22,6,10,9,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 57, char 0x57 (W) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 17
SHP[2], 27
SRP1[], 27
SHP[1], 26
CALL[], 13, 8, 114
SHP[2], 33
SRP1[], 1
SLOOP[], 4
IP[], 22, 6, 10, 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="58">
      <instructions>
        <talk>/* VTTTalk glyph 58, char 0x58 (X) */
/* GUI generated Fri Sep 25 12:02:23 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,25)
ResYAnchor(17,2)
YShift(17,8)
YInterpolate(0,28,3,4,21,12,11,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 58, char 0x58 (X) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 25
CALL[], 17, 2, 114
SHP[2], 8
SRP2[], 0
SLOOP[], 6
IP[], 28, 3, 4, 21, 12, 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="59">
      <instructions>
        <talk>/* VTTTalk glyph 59, char 0x59 (Y) */
/* GUI generated Fri Sep 25 12:03:04 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,11)
ResYAnchor(19,8)
YInterpolate(1,6,15,22,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 59, char 0x59 (Y) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 11
CALL[], 19, 8, 114
SRP2[], 1
SLOOP[], 3
IP[], 6, 15, 22
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="60">
      <instructions>
        <talk>/* VTTTalk glyph 60, char 0x5a (Z) */
/* GUI generated Fri Sep 25 12:03:46 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,15)
YAnchor(15)
YShift(0,13)
YShift(13,1)
YShift(13,12)
ResYAnchor(8,2)
YShift(8,7)
YAnchor(7)
YShift(8,5)
YShift(5,3)
YShift(5,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 60, char 0x5a (Z) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 15
MDAP[R], 15
SHP[2], 13
SRP1[], 13
SHP[1], 1
SHP[1], 12
CALL[], 8, 2, 114
SHP[2], 7
MDAP[R], 7
SHP[2], 5
SRP1[], 5
SHP[1], 3
SHP[1], 10
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="61">
      <instructions>
        <talk>/* VTTTalk glyph 61, char 0x5b ([) */
/* GUI generated Fri Sep 25 14:23:52 2020 */

/* Y direction */
ResYAnchor(3,2)
YShift(3,6)
YAnchor(10)
YShift(10,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 61, char 0x5b ([) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 2, 114
SHP[2], 6
MDAP[R], 10
SHP[1], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="62">
      <instructions>
        <talk>/* VTTTalk glyph 62, char 0x5c (\) */
/* GUI generated Fri Sep 25 14:24:35 2020 */

/* Y direction */
ResYAnchor(1,3)
YShift(1,0)
YAnchor(3)
YShift(3,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 62, char 0x5c (\) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 1, 3, 114
SHP[2], 0
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="63">
      <instructions>
        <talk>/* VTTTalk glyph 63, char 0x5d (]) */
/* GUI generated Fri Sep 25 14:25:22 2020 */

/* Y direction */
ResYAnchor(6,2)
YShift(6,4)
YAnchor(13)
YShift(13,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 63, char 0x5d (]) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 6, 2, 114
SHP[2], 4
MDAP[R], 13
SHP[1], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="64">
      <instructions>
        <talk>/* VTTTalk glyph 64, char 0x5e (^) */
/* GUI generated Fri Sep 25 14:27:01 2020 */

/* Y direction */
ResYAnchor(4,2)
YShift(4,13)
YAnchor(13)
YShift(13,7)
YAnchor(7)
YInterpolate(13,9,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 64, char 0x5e (^) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 13
MDAP[R], 13
SHP[1], 7
MDAP[R], 7
SRP1[], 13
IP[], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="65">
      <instructions>
        <talk>/* VTTTalk glyph 65, char 0x5f (_) */
/* GUI generated Fri Sep 25 14:27:38 2020 */

/* Y direction */
YAnchor(2)
YShift(2,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 65, char 0x5f (_) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 2
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="66">
      <instructions>
        <talk>/* VTTTalk glyph 66, char 0x60 (`) */
/* GUI generated Fri Sep 25 14:28:02 2020 */

/* Y direction */
YAnchor(11)
YDist(11,6,&gt;=2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 66, char 0x60 (`) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 11
SMD[], 128
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="67">
      <instructions>
        <talk>/* VTTTalk glyph 67, char 0x61 (a) */
/* GUI generated Mon Sep 28 11:14:41 2020 */

/* Y direction */
ResYAnchor(3,6)
YShift(3,34)
YShift(3,6)
YShift(6,7)
ResYAnchor(21,11)
YShift(21,15)
YAnchor(15)
YShift(15,14)
YShift(21,27)
YShift(27,18)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 67, char 0x61 (a) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 34
SHP[2], 6
SRP1[], 6
SHP[1], 7
CALL[], 21, 11, 114
SHP[2], 15
MDAP[R], 15
SHP[1], 14
SHP[2], 27
SRP1[], 27
SHP[1], 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="68">
      <instructions>
        <talk>/* VTTTalk glyph 68, char 0x62 (b) */
/* GUI generated Mon Sep 28 11:15:29 2020 */

/* Y direction */
ResYAnchor(5,0)
YShift(5,3)
ResYAnchor(24,6)
YShift(24,17)
YShift(17,21)
YShift(21,20)
ResYAnchor(30,11)
YShift(30,11)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 68, char 0x62 (b) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 5, 0, 114
SHP[2], 3
CALL[], 24, 6, 114
SHP[2], 17
SRP1[], 17
SHP[1], 21
SRP1[], 21
SHP[1], 20
CALL[], 30, 11, 114
SHP[2], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="69">
      <instructions>
        <talk>/* VTTTalk glyph 69, char 0x63 (c) */
/* GUI generated Mon Sep 28 11:15:43 2020 */

/* Y direction */
ResYAnchor(3,7)
YShift(3,9)
YAnchor(9)
YShift(3,14)
ResYAnchor(28,11)
YShift(28,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 69, char 0x63 (c) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 7, 114
SHP[2], 9
MDAP[R], 9
SHP[2], 14
CALL[], 28, 11, 114
SHP[2], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="70">
      <instructions>
        <talk>/* VTTTalk glyph 70, char 0x64 (d) */
/* GUI generated Mon Sep 28 11:16:15 2020 */

/* Y direction */
ResYAnchor(3,6)
YShift(3,4)
YShift(3,32)
ResYAnchor(8,0)
ResYAnchor(14,11)
ResYAnchor(19,11)
YShift(19,25)
YShift(25,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 70, char 0x64 (d) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 4
SHP[2], 32
CALL[], 8, 0, 114
CALL[], 14, 11, 114
CALL[], 19, 11, 114
SHP[2], 25
SRP1[], 25
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="71">
      <instructions>
        <talk>/* VTTTalk glyph 71, char 0x65 (e) */
/* GUI generated Mon Sep 28 14:37:58 2020 */

/* Y direction */
ResYAnchor(3,7)
YShift(3,23)
ResYAnchor(37,11)
YShift(37,29)
YDownToGrid(15)
YIPAnchor(37,15,3)
YShift(15,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 71, char 0x65 (e) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 7, 114
SHP[2], 23
CALL[], 37, 11, 114
SHP[2], 29
SRP1[], 3
IP[], 15
RDTG[]
MDAP[R], 15
SHP[1], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="72">
      <instructions>
        <talk>/* VTTTalk glyph 72, char 0x66 (f) */
/* GUI generated Mon Oct  5 13:28:53 2020 */

/* Y direction */
ResYAnchor(11,1)
YShift(11,17)
YAnchor(17)
YShift(11,23)
ResYAnchor(32,14)
YShift(32,2)
ResYAnchor(35,6)
YShift(35,39)
YShift(39,38)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 72, char 0x66 (f) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 11, 1, 114
SHP[2], 17
MDAP[R], 17
SHP[2], 23
CALL[], 32, 14, 114
SHP[2], 2
CALL[], 35, 6, 114
SHP[2], 39
SRP1[], 39
SHP[1], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="73">
      <instructions>
        <talk>/* VTTTalk glyph 73, char 0x67 (g) */
/* GUI generated Mon Sep 28 11:53:12 2020 */

/* Y direction */
ResYAnchor(3,6)
YShift(3,7)
YShift(3,39)
ResYAnchor(16,15)
YShift(16,19)
ResYAnchor(26,10)
YShift(26,32)
YShift(32,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 73, char 0x67 (g) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 7
SHP[2], 39
CALL[], 16, 15, 114
SHP[2], 19
CALL[], 26, 10, 114
SHP[2], 32
SRP1[], 32
SHP[1], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="74">
      <instructions>
        <talk>/* VTTTalk glyph 74, char 0x68 (h) */
/* GUI generated Mon Sep 28 11:54:10 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,11)
YAnchor(11)
YShift(11,27)
ResYAnchor(6,0)
ResYAnchor(23,7)
YShift(23,16)
YShift(16,20)
YShift(20,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 74, char 0x68 (h) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 11
MDAP[R], 11
SHP[1], 27
CALL[], 6, 0, 114
CALL[], 23, 7, 114
SHP[2], 16
SRP1[], 16
SHP[1], 20
SRP1[], 20
SHP[1], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="75">
      <instructions>
        <talk>/* VTTTalk glyph 75, char 0x69 (i) */
/* GUI generated Mon Sep 28 11:54:35 2020 */

/* Y direction */
ResYAnchor(0,11)
ResYAnchor(6,6)
YDist(6,22,&gt;=)
YShift(22,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 75, char 0x69 (i) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 22
SHP[2], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="76">
      <instructions>
        <talk>/* VTTTalk glyph 76, char 0x6a (j) */
/* GUI generated Mon Sep 28 11:54:50 2020 */

/* Y direction */
ResYAnchor(3,6)
YDist(3,28,&gt;=)
YShift(28,22)
ResYAnchor(10,15)
YShift(10,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 76, char 0x6a (j) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 28
SHP[2], 22
CALL[], 10, 15, 114
SHP[2], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="77">
      <instructions>
        <talk>/* VTTTalk glyph 77, char 0x6b (k) */
/* GUI generated Mon Sep 28 11:55:55 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,21)
YAnchor(21)
YShift(21,18)
ResYAnchor(6,0)
ResYAnchor(11,7)
YShift(11,31)
YInterpolate(0,26,27,25,17,35,34,16,28,8,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 77, char 0x6b (k) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 21
MDAP[R], 21
SHP[1], 18
CALL[], 6, 0, 114
CALL[], 11, 7, 114
SHP[2], 31
SRP2[], 0
SLOOP[], 9
IP[], 26, 27, 25, 17, 35, 34, 16, 28, 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="78">
      <instructions>
        <talk>/* VTTTalk glyph 78, char 0x6c (l) */
/* GUI generated Mon Sep 28 11:53:53 2020 */

/* Y direction */
ResYAnchor(0,11)
ResYAnchor(6,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 78, char 0x6c (l) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
CALL[], 6, 0, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="79">
      <instructions>
        <talk>/* VTTTalk glyph 79, char 0x6d (m) */
/* GUI generated Mon Sep 28 11:57:21 2020 */

/* Y direction */
ResYAnchor(6,6)
ResYAnchor(24,7)
YShift(24,17)
YShift(17,21)
YShift(21,20)
YShift(21,39)
YShift(39,38)
YShift(24,42)
YAnchor(42)
YShift(42,35)
ResYAnchor(30,11)
YShift(30,0)
YAnchor(0)
YShift(30,12)
YAnchor(12)
YShift(30,46)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 79, char 0x6d (m) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 6, 6, 114
CALL[], 24, 7, 114
SHP[2], 17
SRP1[], 17
SHP[1], 21
SRP1[], 21
SHP[1], 20
SHP[1], 39
SRP1[], 39
SHP[1], 38
SHP[2], 42
MDAP[R], 42
SHP[1], 35
CALL[], 30, 11, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 12
MDAP[R], 12
SHP[2], 46
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="80">
      <instructions>
        <talk>/* VTTTalk glyph 80, char 0x6e (n) */
/* GUI generated Mon Sep 28 11:13:29 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,12)
YAnchor(12)
YShift(12,28)
ResYAnchor(6,6)
ResYAnchor(24,7)
YShift(24,17)
YShift(17,21)
YShift(21,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 80, char 0x6e (n) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 12
MDAP[R], 12
SHP[1], 28
CALL[], 6, 6, 114
CALL[], 24, 7, 114
SHP[2], 17
SRP1[], 17
SHP[1], 21
SRP1[], 21
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="81">
      <instructions>
        <talk>/* VTTTalk Unicode 0x6f (o) */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 7 */
/* CVT 9 11 */
/* Min and Max */
ResYAnchor(9,11)	/* min, CVT */
ResYAnchor(3,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(3,21) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(9,15) /*perpendicular to the stroke*/

Smooth()

</talk>
        <assembly>/* TT glyph 81, char 0x6f (o) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 9, 11, 114
CALL[], 3, 7, 114
SHP[2], 21
SRP1[], 9
SHP[1], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="82">
      <instructions>
        <talk>/* VTTTalk glyph 82, char 0x70 (p) */
/* GUI generated Mon Sep 28 11:58:06 2020 */

/* Y direction */
ResYAnchor(5,7)
ResYAnchor(9,6)
YShift(9,32)
YShift(32,6)
YShift(6,35)
YAnchor(15)
YShift(15,26)
ResYAnchor(22,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 82, char 0x70 (p) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 5, 7, 114
CALL[], 9, 6, 114
SHP[2], 32
SRP1[], 32
SHP[1], 6
SRP1[], 6
SHP[1], 35
MDAP[R], 15
SHP[1], 26
CALL[], 22, 14, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="83">
      <instructions>
        <talk>/* VTTTalk glyph 83, char 0x71 (q) */
/* GUI generated Mon Sep 28 12:06:29 2020 */

/* Y direction */
ResYAnchor(3,6)
YShift(3,6)
YShift(3,33)
ResYAnchor(7,7)
ResYAnchor(14,14)
ResYAnchor(20,10)
YShift(20,26)
YShift(26,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 83, char 0x71 (q) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 6
SHP[2], 33
CALL[], 7, 7, 114
CALL[], 14, 14, 114
CALL[], 20, 10, 114
SHP[2], 26
SRP1[], 26
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="84">
      <instructions>
        <talk>/* VTTTalk glyph 84, char 0x72 (r) */
/* GUI generated Mon Sep 28 12:06:46 2020 */

/* Y direction */
ResYAnchor(0,11)
ResYAnchor(6,6)
ResYAnchor(21,7)
YShift(21,13)
YAnchor(13)
YShift(21,14)
YShift(14,18)
YShift(18,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 84, char 0x72 (r) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
CALL[], 6, 6, 114
CALL[], 21, 7, 114
SHP[2], 13
MDAP[R], 13
SHP[2], 14
SRP1[], 14
SHP[1], 18
SRP1[], 18
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="85">
      <instructions>
        <talk>/* VTTTalk glyph 85, char 0x73 (s) */
/* GUI generated Mon Sep 28 12:07:15 2020 */

/* Y direction */
ResYAnchor(20,7)
YShift(20,31)
ResYAnchor(43,11)
YShift(43,8)
YInterpolate(43,11,40,14,37,17,34,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 85, char 0x73 (s) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 20, 7, 114
SHP[2], 31
CALL[], 43, 11, 114
SHP[2], 8
SRP1[], 20
SLOOP[], 6
IP[], 11, 40, 14, 37, 17, 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="86">
      <instructions>
        <talk>/* VTTTalk glyph 86, char 0x74 (t) */
/* GUI generated Mon Sep 28 12:08:05 2020 */

/* Y direction */
YAnchor(0,11)
YShift(0,12)
YAnchor(16,6)
YDist(16,8,&gt;=)
YShift(16,3)
YShift(3,15)
YShift(15,18)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 86, char 0x74 (t) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 12
MIAP[R], 16, 6
MDRP[m&gt;RBl], 8
SHP[1], 3
SRP1[], 3
SHP[1], 15
SRP1[], 15
SHP[1], 18
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="87">
      <instructions>
        <talk>/* VTTTalk glyph 87, char 0x75 (u) */
/* GUI generated Mon Sep 28 12:08:29 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,8)
ResYAnchor(5,7)
ResYAnchor(15,6)
ResYAnchor(28,10)
YShift(28,21)
YShift(21,25)
YShift(25,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 87, char 0x75 (u) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 8
CALL[], 5, 7, 114
CALL[], 15, 6, 114
CALL[], 28, 10, 114
SHP[2], 21
SRP1[], 21
SHP[1], 25
SRP1[], 25
SHP[1], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="88">
      <instructions>
        <talk>/* VTTTalk glyph 88, char 0x76 (v) */
/* GUI generated Mon Sep 28 12:08:44 2020 */

/* Y direction */
ResYAnchor(2,6)
ResYAnchor(14,7)
ResYAnchor(21,11)
YInterpolate(21,5,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 88, char 0x76 (v) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 2, 6, 114
CALL[], 14, 7, 114
CALL[], 21, 11, 114
SRP1[], 2
IP[], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="89">
      <instructions>
        <talk>/* VTTTalk glyph 89, char 0x77 (w) */
/* GUI generated Mon Sep 28 12:09:25 2020 */

/* Y direction */
ResYAnchor(2,6)
YShift(2,18)
YAnchor(18)

ResYAnchor(29,7)

ResYAnchor(13,11)
YShift(13,35)
YInterpolate(13,20,5,9,8,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 89, char 0x77 (w) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 18
MDAP[R], 18
CALL[], 29, 7, 114
CALL[], 13, 11, 114
SHP[2], 35
SRP1[], 2
SLOOP[], 4
IP[], 20, 5, 9, 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="90">
      <instructions>
        <talk>/* VTTTalk glyph 90, char 0x78 (x) */
/* GUI generated Mon Sep 28 12:09:53 2020 */

/* Y direction */
ResYAnchor(20,6)
YShift(20,2)
YAnchor(2)
YShift(20,31)
ResYAnchor(37,11)
YShift(37,14)
YShift(37,8)
YShift(8,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 90, char 0x78 (x) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 20, 6, 114
SHP[2], 2
MDAP[R], 2
SHP[2], 31
CALL[], 37, 11, 114
SHP[2], 14
SHP[2], 8
SRP1[], 8
SHP[1], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="91">
      <instructions>
        <talk>/* VTTTalk glyph 91, char 0x79 (y) */
/* GUI generated Mon Sep 28 12:10:26 2020 */

/* Y direction */
ResYAnchor(13,6)
ResYAnchor(25,7)
ResYAnchor(35,15)
YShift(35,2)
YInterpolate(35,32,5,7,16,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 91, char 0x79 (y) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 13, 6, 114
CALL[], 25, 7, 114
CALL[], 35, 15, 114
SHP[2], 2
SRP1[], 13
SLOOP[], 4
IP[], 32, 5, 7, 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="92">
      <instructions>
        <talk>/* VTTTalk glyph 92, char 0x7a (z) */
/* GUI generated Mon Sep 28 12:10:56 2020 */

/* Y direction */
ResYAnchor(12,6)
YShift(12,7)
YShift(7,14)
ResYAnchor(25,11)
YShift(25,0)
YAnchor(0)
YShift(25,21)
YShift(25,26)
YShift(26,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 92, char 0x7a (z) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 12, 6, 114
SHP[2], 7
SRP1[], 7
SHP[1], 14
CALL[], 25, 11, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 21
SHP[2], 26
SRP1[], 26
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="93">
      <instructions>
        <talk>/* VTTTalk glyph 93, char 0x7b ({) */
/* GUI generated Mon Oct  5 12:51:49 2020 */

/* Y direction */
ResYAnchor(11,2)
YShift(11,18)
YAnchor(43)
YShift(43,36)
YIPAnchor(11,50,43)
YShift(50,1)
YShift(1,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 93, char 0x7b ({) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 11, 2, 114
SHP[2], 18
MDAP[R], 43
SHP[1], 36
IP[], 50
MDAP[R], 50
SHP[1], 1
SRP1[], 1
SHP[1], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="94">
      <instructions>
        <talk>/* VTTTalk glyph 94, char 0x7c (|) */
/* GUI generated Mon Oct  5 12:52:28 2020 */

/* Y direction */
YAnchor(0)
ResYAnchor(6,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 94, char 0x7c (|) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 0
CALL[], 6, 3, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="95">
      <instructions>
        <talk>/* VTTTalk glyph 95, char 0x7d (}) */
/* GUI generated Mon Oct  5 12:53:06 2020 */

/* Y direction */
ResYAnchor(29,2)
YShift(29,22)
YAnchor(48)
YShift(48,4)
YIPAnchor(29,38,48)
YShift(38,37)
YShift(37,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 95, char 0x7d (}) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 29, 2, 114
SHP[2], 22
MDAP[R], 48
SHP[1], 4
IP[], 38
MDAP[R], 38
SHP[1], 37
SRP1[], 37
SHP[1], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="96">
      <instructions>
        <talk>/* VTTTalk glyph 96, char 0x7e (~) */
/* GUI generated Mon Oct  5 12:54:15 2020 */

/* Y direction */
YAnchor(11)
YShift(11,4)
YDist(11,3,&gt;=2)
YShift(3,12)
YShift(3,7)
YAnchor(7)
YShift(7,8)
YShift(11,15)
YAnchor(15)
YShift(15,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 96, char 0x7e (~) */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[2], 12
SHP[2], 7
MDAP[R], 7
SHP[1], 8
SRP1[], 11
SHP[1], 15
MDAP[R], 15
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="97">
      <instructions>
        <talk></talk>
        <assembly>/* TT glyph 97, char 0xa0 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="98">
      <instructions>
        <talk>/* VTTTalk glyph 98, char 0xa1 */
/* GUI generated Mon Oct  5 13:30:21 2020 */

/* Y direction */
YAnchor(15)
YAnchor(21)
YDist(21,3,&gt;=)
YShift(3,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 98, char 0xa1 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 15
MDAP[R], 21
MDRP[m&gt;RWh], 3
SHP[2], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="99">
      <instructions>
        <talk>/* VTTTalk glyph 99, char 0xa2 */
/* GUI generated Mon Oct  5 13:32:06 2020 */

/* Y direction */
YAnchor(19)
YShift(19,26)
YAnchor(26)
YDist(19,9,&gt;=)
YShift(9,8)
YShift(19,30)
YShift(30,15)
YShift(15,10)
YAnchor(44)
YDist(44,0,&gt;=)
YShift(0,7)
YShift(44,36)
YShift(36,1)
YShift(1,6)

YInterpolate(19,3,4,13,12,44)


/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 99, char 0xa2 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 19
SHP[1], 26
MDAP[R], 26
SRP0[], 19
MDRP[m&gt;RBl], 9
SHP[2], 8
SHP[1], 30
SRP1[], 30
SHP[1], 15
SRP1[], 15
SHP[1], 10
MDAP[R], 44
MDRP[m&gt;RBl], 0
SHP[2], 7
SHP[1], 36
SRP1[], 36
SHP[1], 1
SRP1[], 1
SHP[1], 6
SRP1[], 19
SRP2[], 44
SLOOP[], 4
IP[], 3, 4, 13, 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="100">
      <instructions>
        <talk>/* VTTTalk glyph 100, char 0xa3 */
/* GUI generated Mon Oct  5 13:34:17 2020 */

/* Y direction */
ResYAnchor(26,12)
YShift(26,19)
YShift(26,7)
YAnchor(7)
YShift(7,38)
YDist(7,13,&gt;=3)
YShift(13,32)
YDist(13,0,&gt;=)
YShift(0,1)
ResYAnchor(50,4)
YShift(50,57)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 100, char 0xa3 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 26, 12, 114
SHP[2], 19
SHP[2], 7
MDAP[R], 7
SHP[1], 38
SMD[], 192
MDRP[M&gt;RGr], 13
SHP[2], 32
SMD[], 64
MDRP[m&gt;RWh], 0
SHP[2], 1
CALL[], 50, 4, 114
SHP[2], 57
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="101">
      <instructions>
        <talk>/* VTTTalk glyph 101, char 0xa4 */
/* GUI generated Mon Oct  5 13:36:22 2020 */

/* Y direction */
YAnchor(9)
YShift(9,15)
YShift(9,3)
YAnchor(3)
YShift(3,21)
YShift(3,26)
YAnchor(26)
YShift(26,27)
YShift(26,25)
YShift(25,24)
YShift(26,30)
YAnchor(30)
YShift(30,29)
YShift(30,31)
YShift(31,28)
YShift(9,34)
YAnchor(34)
YShift(34,35)
YShift(35,32)
YShift(32,33)
YShift(9,38)
YAnchor(38)
YShift(38,39)
YShift(39,36)
YShift(36,37)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 101, char 0xa4 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 15
SHP[1], 3
MDAP[R], 3
SHP[1], 21
SHP[1], 26
MDAP[R], 26
SHP[1], 27
SHP[1], 25
SRP1[], 25
SHP[1], 24
SRP1[], 26
SHP[1], 30
MDAP[R], 30
SHP[1], 29
SHP[1], 31
SRP1[], 31
SHP[1], 28
SRP1[], 9
SHP[1], 34
MDAP[R], 34
SHP[1], 35
SRP1[], 35
SHP[1], 32
SRP1[], 32
SHP[1], 33
SRP1[], 9
SHP[1], 38
MDAP[R], 38
SHP[1], 39
SRP1[], 39
SHP[1], 36
SRP1[], 36
SHP[1], 37
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="102">
      <instructions>
        <talk>/* VTTTalk glyph 102, char 0xa5 */
/* GUI generated Mon Oct  5 12:30:32 2020 */

/* Y direction */
ResYAnchor(1,4)
YShift(1,11)
YAnchor(11)
ResYAnchor(19,12)
YIPAnchor(19,25,1)
YInterpolate(25,6,1)
YShift(25,26)
YDist(25,30,&gt;=)
YShift(30,29)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 102, char 0xa5 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 1, 4, 114
SHP[2], 11
MDAP[R], 11
CALL[], 19, 12, 114
SRP1[], 1
IP[], 25
MDAP[R], 25
SRP2[], 1
IP[], 6
SHP[1], 26
MDRP[m&gt;RWh], 30
SHP[2], 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="103">
      <instructions>
        <talk>/* VTTTalk glyph 103, char 0xa6 */
/* GUI generated Mon Oct  5 12:32:16 2020 */

/* Y direction */
ResYAnchor(4,3)
YAnchor(8)
YIPAnchor(8,7,4)
YDist(7,11,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 103, char 0xa6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 4, 3, 114
MDAP[R], 8
IP[], 7
MDAP[R], 7
MDRP[m&gt;RWh], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="104">
      <instructions>
        <talk>/* VTTTalk glyph 104, char 0xa7 */
/* GUI generated Mon Oct  5 12:34:12 2020 */

/* Y direction */
YAnchor(3)
YShift(3,9)
YAnchor(9)
YShift(3,16)
YAnchor(34,5)
YShift(34,47)
YInterpolate(3,19,59,65,68,56,25,62,74,28,31,50,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 104, char 0xa7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
MDAP[R], 9
SRP1[], 3
SHP[1], 16
MIAP[R], 34, 5
SHP[1], 47
SRP2[], 3
SLOOP[], 11
IP[], 19, 59, 65, 68, 56, 25, 62, 74, 28, 31, 50
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="105">
      <instructions>
        <talk>/* VTTTalk glyph 105, char 0xa8 */
/* GUI generated Mon Sep 28 14:33:16 2020 */

/* Y direction */
YAnchor(21)
YShift(21,15)
YShift(21,9)
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 105, char 0xa8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 21
SHP[1], 15
SHP[1], 9
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="106">
      <instructions>
        <talk>/* VTTTalk glyph 106, char 0xa9 */
/* GUI generated Mon Oct  5 13:37:09 2020 */

/* Y direction */
ResYAnchor(33,3)
YShift(33,51)
YShift(51,3)
YAnchor(3)
YShift(3,6)
YShift(3,7)
YShift(3,10)
YShift(3,14)
YAnchor(39)
YShift(39,45)
YShift(45,27)
YAnchor(27)
YShift(27,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 106, char 0xa9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 33, 3, 114
SHP[2], 51
SRP1[], 51
SHP[1], 3
MDAP[R], 3
SHP[1], 6
SHP[1], 7
SHP[1], 10
SHP[1], 14
MDAP[R], 39
SHP[1], 45
SRP1[], 45
SHP[1], 27
MDAP[R], 27
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="107">
      <instructions>
        <talk>/* VTTTalk glyph 107, char 0xaa */
/* GUI generated Mon Oct  5 13:38:28 2020 */

/* Y direction */
YAnchor(3)
YShift(3,6)
YShift(3,7)
YShift(3,28)
YShift(3,15)
YAnchor(15)
YShift(15,13)
YAnchor(13)
YShift(13,12)
YShift(15,21)
YShift(21,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 107, char 0xaa */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 6
SHP[1], 7
SHP[1], 28
SHP[1], 15
MDAP[R], 15
SHP[1], 13
MDAP[R], 13
SHP[1], 12
SRP1[], 15
SHP[1], 21
SRP1[], 21
SHP[1], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="108">
      <instructions>
        <talk>/* VTTTalk glyph 108, char 0xab */
/* GUI generated Wed Oct  7 11:35:46 2020 */

/* Y direction */
YAnchor(14)
YShift(14,33)
YAnchor(33)
YDist(14,4,&gt;=)
YShift(4,23)
YAnchor(23)
YInterpolate(14,37,27,18,8,19,0,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 108, char 0xab */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 14
SHP[1], 33
MDAP[R], 33
SRP0[], 14
MDRP[m&gt;RGr], 4
SHP[2], 23
MDAP[R], 23
SRP1[], 14
SLOOP[], 6
IP[], 37, 27, 18, 8, 19, 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="109">
      <instructions>
        <talk>/* VTTTalk glyph 109, char 0xac */
/* GUI generated Mon Oct  5 13:39:22 2020 */

/* Y direction */
YAnchor(5)
YShift(5,0)
YDist(5,3,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 109, char 0xac */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 0
MDRP[m&gt;RWh], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="110">
      <instructions>
        <talk>/* VTTTalk Unicode 0xad */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/
</talk>
        <assembly>/* TT glyph 110, char 0xad */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="111">
      <instructions>
        <talk>/* VTTTalk glyph 111, char 0xae */
/* GUI generated Wed Oct  7 11:48:29 2020 */

/* Y direction */
ResYAnchor(3,3)
YShift(3,21)
YShift(21,30)
YAnchor(30)
YShift(30,49)
YAnchor(9)
YShift(9,15)
YShift(15,54)
YAnchor(54)
YShift(54,61)
YAnchor(61)
YIPAnchor(54,37,30)
YShift(37,42)
YShift(42,55)
YShift(55,56)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 111, char 0xae */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 3, 114
SHP[2], 21
SRP1[], 21
SHP[1], 30
MDAP[R], 30
SHP[1], 49
MDAP[R], 9
SHP[1], 15
SRP1[], 15
SHP[1], 54
MDAP[R], 54
SHP[1], 61
MDAP[R], 61
SRP1[], 54
SRP2[], 30
IP[], 37
MDAP[R], 37
SHP[1], 42
SRP1[], 42
SHP[1], 55
SRP1[], 55
SHP[1], 56
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="112">
      <instructions>
        <talk>/* VTTTalk glyph 112, char 0xaf */
/* GUI generated Tue Sep 29 11:52:56 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 112, char 0xaf */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="113">
      <instructions>
        <talk>/* VTTTalk glyph 113, char 0xb0 */
/* GUI generated Wed Oct  7 11:53:53 2020 */

/* Y direction */
ResYAnchor(3,3)
YShift(3,21)
YDist(3,9,&gt;=)
YShift(9,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 113, char 0xb0 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 3, 114
SHP[2], 21
MDRP[m&gt;RGr], 9
SHP[2], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="114">
      <instructions>
        <talk>/* VTTTalk glyph 114, char 0xb1 */
/* GUI generated Wed Oct  7 11:54:56 2020 */

/* Y direction */
YAnchor(8)
YShift(8,9)
YUpToGrid(4)
YShift(9,4)
YAnchor(4)
YShift(4,0)
YAnchor(0)
YShift(0,1)
YShift(1,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 114, char 0xb1 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 9
SRP1[], 9
SHP[1], 4
RUTG[]
MDAP[R], 4
SHP[1], 0
RTG[]
MDAP[R], 0
SHP[2], 1
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="115">
      <instructions>
        <talk>/* VTTTalk glyph 115, char 0xb2 */
/* GUI generated Tue Oct  6 15:13:45 2020 */

/* Y direction */
YAnchor(15,5)
YShift(15,8)
YShift(15,26)
YAnchor(26)
YShift(26,25)
YShift(26,0)
YAnchor(0)
YShift(0,22)
YShift(22,1)
YShift(22,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 115, char 0xb2 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MIAP[R], 15, 5
SHP[1], 8
SHP[1], 26
MDAP[R], 26
SHP[1], 25
SHP[1], 0
MDAP[R], 0
SHP[2], 22
SRP1[], 22
SHP[1], 1
SHP[1], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="116">
      <instructions>
        <talk>/* VTTTalk glyph 116, char 0xb3 */
/* GUI generated Tue Oct  6 15:14:43 2020 */

/* Y direction */
YAnchor(33,5)
YShift(33,26)
YShift(33,46)
YAnchor(46)
YShift(46,11)
YIPAnchor(46,17,33)
YShift(17,20)
YShift(20,39,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 116, char 0xb3 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MIAP[R], 33, 5
SHP[1], 26
SHP[1], 46
MDAP[R], 46
SHP[1], 11
SRP2[], 33
IP[], 17
MDAP[R], 17
SHP[1], 20
SRP1[], 20
SHP[1], 39
SHP[1], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="117">
      <instructions>
        <talk>/* VTTTalk glyph 117, char 0xb4 */
/* GUI generated Mon Oct  5 10:49:53 2020 */

/* Y direction */
YAnchor(11)
YDist(11,4,&gt;=2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 117, char 0xb4 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 11
SMD[], 128
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="118">
      <instructions>
        <talk>/* VTTTalk glyph 118, char 0xb5 */
/* GUI generated Wed Oct  7 11:56:51 2020 */

/* Y direction */
ResYAnchor(9,6)
YShift(9,5)
YShift(9,20)
YAnchor(20)
ResYAnchor(31,10)
YShift(31,26)
YAnchor(26)
YShift(31,14)
YShift(14,28)
YShift(28,17)
YShift(28,27)
YAnchor(38)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 118, char 0xb5 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 9, 6, 114
SHP[2], 5
SHP[2], 20
MDAP[R], 20
CALL[], 31, 10, 114
SHP[2], 26
MDAP[R], 26
SHP[2], 14
SRP1[], 14
SHP[1], 28
SRP1[], 28
SHP[1], 17
SHP[1], 27
MDAP[R], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="119">
      <instructions>
        <talk>/* VTTTalk glyph 119, char 0xb6 */
/* GUI generated Wed Oct  7 12:09:14 2020 */

/* Y direction */
ResYAnchor(10,2)
YShift(10,13)
YShift(10,4)
YShift(4,22)
YAnchor(18,8)
YAnchor(27)
YShift(27,41)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 119, char 0xb6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 10, 2, 114
SHP[2], 13
SHP[2], 4
SRP1[], 4
SHP[1], 22
MIAP[R], 18, 8
MDAP[R], 27
SHP[1], 41
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="120">
      <instructions>
        <talk>/* VTTTalk glyph 120, char 0xb7 */
/* GUI generated Mon Oct  5 14:47:32 2020 */

/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 120, char 0xb7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="121">
      <instructions>
        <talk>/* VTTTalk glyph 121, char 0xb8 */
/* GUI generated Wed Oct  7 12:10:53 2020 */

/* Y direction */
YAnchor(28)
YShift(28,0)
YDist(28,10,&gt;=)
YShift(10,17)
YInterpolate(10,23,27,1,4,28)
YShift(23,26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 121, char 0xb8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 28
SHP[1], 0
MDRP[m&gt;RGr], 10
SHP[2], 17
SLOOP[], 4
IP[], 23, 27, 1, 4
SRP1[], 23
SHP[1], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="122">
      <instructions>
        <talk>/* VTTTalk glyph 122, char 0xb9 */
/* GUI generated Wed Oct  7 13:46:10 2020 */

/* Y direction */
YAnchor(8,5)
YDist(8,15,&gt;=)
YInterpolate(15,5,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 122, char 0xb9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MIAP[R], 8, 5
MDRP[m&gt;RBl], 15
IP[], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="123">
      <instructions>
        <talk>/* VTTTalk glyph 123, char 0xba */
/* GUI generated Wed Oct  7 13:46:36 2020 */

/* Y direction */
ResYAnchor(3,4)
YShift(3,21)
YDist(3,9,&gt;=)
YShift(9,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 123, char 0xba */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 4, 114
SHP[2], 21
MDRP[m&gt;RGr], 9
SHP[2], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="124">
      <instructions>
        <talk>/* VTTTalk glyph 124, char 0xbb */
/* GUI generated Wed Oct  7 11:37:10 2020 */

/* Y direction */
YAnchor(4)
YShift(4,23)
YAnchor(23)
YDist(4,14,&gt;=)
YShift(14,33)
YAnchor(33)
YInterpolate(4,19,0,27,37,8,18,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 124, char 0xbb */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 23
MDAP[R], 23
SRP0[], 4
MDRP[m&gt;RGr], 14
SHP[2], 33
MDAP[R], 33
SRP1[], 4
SLOOP[], 6
IP[], 19, 0, 27, 37, 8, 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="125">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xbc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 122, -29, -1
OFFSET[R], 609, 530, 0
OFFSET[R], 611, 667, -699
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="126">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xbd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 122, -30, 0
OFFSET[R], 609, 490, 0
OFFSET[R], 115, 661, -701

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="127">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xbe */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 609, 650, 0
OFFSET[R], 611, 736, -699
OFFSET[R], 116, -20, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="128">
      <instructions>
        <talk>/* VTTTalk glyph 128, char 0xbf */
/* GUI generated Tue Oct  6 16:09:33 2020 */

/* Y direction */
YAnchor(3)
YShift(3,24)
YShift(3,33)
YAnchor(33)
YAnchor(45)
YShift(45,39)
YDist(39,13,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 128, char 0xbf */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 24
SHP[1], 33
MDAP[R], 33
MDAP[R], 45
SHP[1], 39
SRP0[], 39
MDRP[m&gt;RWh], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="129">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 666, 215, 48


/*SVTCA[Y]
CALL[], 39, 4, 1, 1, 109, 86
SHC[2], 3
SVTCA[X]
CALL[], 31, 38, 0, 51, 8, 87
SHC[2], 3*/







SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="130">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 667, 191, 48


/*SVTCA[Y]
CALL[], 39, 4, 1, 1, 109, 86
SHC[2], 3
SVTCA[X]
CALL[], 28, 35, 0, 55, 8, 87
SHC[2], 3*/






SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="131">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 668, 153, 30


/*SVTCA[Y]
CALL[], 33, 4, 1, 1, 109, 86
SHC[2], 3
SVTCA[X]
CALL[], 36, 32, 0, 52, 8, 87
SHC[2], 3*/






SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 33

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="132">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 669, 244, -11


/*SVTCA[Y]
CALL[], 44, 4, 1, 1, 109, 86
SHC[2], 3
SVTCA[X]
CALL[], 28, 41, 0, 53, 8, 87
SHC[2], 3*/






SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="133">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 673, 253, -18


/*SVTCA[Y]
CALL[], 37, 4, 1, 1, 109, 86
SHC[2], 3
SHC[2], 4
SVTCA[X]
CALL[], 28, 46, 0, 53, 8, 87
SHC[2], 3
SHC[2], 4*/






SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 37
MDRP[m&gt;RWh], 49

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="134">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 675, 249, 26
SVTCA[Y]
CALL[], 37, 4, 1, 1, 109, 86
SHC[2], 3
SHC[2], 4


/*SVTCA[X]
CALL[], 28, 34, 0, 53, 8, 87
SHC[2], 3
SHC[2], 4*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="135">
      <instructions>
        <talk>/* VTTTalk glyph 135, char 0xc6 */
/* GUI generated Mon Sep 28 12:58:13 2020 */

/* Y direction */
ResYAnchor(14,2)
YShift(14,17)
YAnchor(17)
YShift(14,19)
ResYAnchor(41,8)
YIPAnchor(14,7,3,41)
YShift(7,2)
YShift(3,4)
YShift(41,8)
YAnchor(8)
YShift(8,23)
YShift(8,25)
YAnchor(25)
YIPAnchor(8,28,14)
YShift(28,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 135, char 0xc6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 14, 2, 114
SHP[2], 17
MDAP[R], 17
SHP[2], 19
CALL[], 41, 8, 114
SRP2[], 14
IP[], 7
IP[], 3
MDAP[R], 7
MDAP[R], 3
SRP1[], 7
SHP[1], 2
SRP1[], 3
SHP[1], 4
SRP1[], 41
SHP[1], 8
MDAP[R], 8
SHP[1], 23
SHP[1], 25
MDAP[R], 25
SRP1[], 8
IP[], 28
MDAP[R], 28
SHP[1], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="136">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 684, 163, -18


/*SVTCA[Y]
CALL[], 59, 27, 0, 0, 77, 86
SHC[2], 1*/


/*SVTCA[X]
CALL[], 44, 37, 30, 26, 8, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="137">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 666, 7, 52


/*SVTCA[Y]
CALL[], 39, 6, 1, 1, 144, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 38, 0, 43, 7, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="138">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xc9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 667, 6, 48


/*SVTCA[Y]
CALL[], 39, 6, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 28, 35, 0, 49, 7, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="139">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xca */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 668, -50, 27


/*SVTCA[Y]
CALL[], 33, 6, 1, 1, 137, 86
SHC[2], 2
SVTCA[X]
CALL[], 36, 32, 0, 44, 7, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 33

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="140">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xcb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 673, 22, -11


/*SVTCA[Y]
CALL[], 37, 6, 1, 1, 147, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 28, 46, 0, 44, 7, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 37
MDRP[m&gt;RWh], 49

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="141">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xcc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 666, -213, 48


/*SVTCA[Y]
CALL[], 25, 6, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 17, 24, 0, 46, 7, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 25

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="142">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xcd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 667, -230, 48


/*SVTCA[Y]
CALL[], 25, 6, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 14, 21, 0, 54, 7, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 25

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="143">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xce */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 668, -285, 30


/*SVTCA[Y]
CALL[], 19, 6, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 22, 18, 0, 47, 7, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 21

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="144">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xcf */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 673, -233, -13


/*SVTCA[Y]
CALL[], 23, 6, 1, 1, 145, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 14, 32, 0, 45, 7, 87
SHC[2], 1
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 23
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="145">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 38, 0, 0
OFFSET[R], 593, 0, 0


/*SVTCA[Y]
CALL[], 29, 0, 2, 0, 646, 86
SHC[2], 2*/


/*SVTCA[X]
CALL[], 29, 32, 0, 18, 9, 87
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="146">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 669, 173, -6


/*SVTCA[Y]
CALL[], 42, 13, 1, 1, 145, 86
SHC[2], 1
SVTCA[X]
CALL[], 26, 39, 1, 41, 14, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="147">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 666, 231, 57


/*SVTCA[Y]
CALL[], 35, 3, 1, 1, 130, 86
SHC[2], 2
SVTCA[X]
CALL[], 27, 34, 11, 41, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="148">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 667, 195, 48


/*SVTCA[Y]
CALL[], 35, 3, 1, 1, 121, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 31, 11, 45, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="149">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 668, 152, 35


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 126, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 28, 11, 42, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="150">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 669, 209, 2


/*SVTCA[Y]
CALL[], 40, 3, 1, 1, 134, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 37, 11, 42, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="151">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 673, 179, -11


/*SVTCA[Y]
CALL[], 33, 3, 1, 1, 128, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 24, 42, 11, 40, 5, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 45
MDRP[m&gt;RWh], 33

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="152">
      <instructions>
        <talk>/* VTTTalk glyph 152, char 0xd7 */
/* GUI generated Mon Sep 28 13:20:45 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)
YShift(0,4)
YAnchor(4)
YShift(4,7)
YDist(0,6,&gt;=)
YShift(6,2)
YAnchor(2)
YShift(6,5)
YShift(5,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 152, char 0xd7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SHP[2], 4
MDAP[R], 4
SHP[1], 7
SRP0[], 0
MDRP[m&gt;RGr], 6
SHP[2], 2
MDAP[R], 2
SHP[2], 5
SRP1[], 5
SHP[1], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="153">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 647, 423, 3


/*SVTCA[Y]
CALL[], 31, 9, 0, 0, -89, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 24, 33, 11, 33, 5, 87
SHC[2], 2
SHC[2], 3*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="154">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xd9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 666, 190, 48


/*SVTCA[Y]
CALL[], 45, 18, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 37, 44, 29, 35, 19, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 45

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="155">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xda */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 667, 168, 48


/*SVTCA[Y]
CALL[], 45, 18, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 34, 41, 29, 40, 19, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 45

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="156">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xdb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 668, 101, 30


/*SVTCA[Y]
CALL[], 39, 18, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 42, 38, 29, 35, 19, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 41

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="157">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xdc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 673, 191, -18


/*SVTCA[Y]
CALL[], 43, 18, 1, 1, 140, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 34, 52, 29, 36, 19, 87
SHC[2], 1
SHC[2], 2*/


SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 43
MDRP[m&gt;RWh], 55

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="158">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xdd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 667, 62, 48


/*SVTCA[Y]
CALL[], 36, 10, 1, 1, 140, 86
SHC[2], 1*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="159">
      <instructions>
        <talk>/* VTTTalk glyph 159, char 0xde */
/* GUI generated Mon Sep 28 13:24:16 2020 */

/* Y direction */
ResYAnchor(27,8)
ResYAnchor(33,2)
YDownToGrid(0)
YIPAnchor(27,7,0,33)
YShift(7,14)
YShift(0,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 159, char 0xde */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 27, 8, 114
CALL[], 33, 2, 114
SRP2[], 27
IP[], 7
IP[], 0
MDAP[R], 7
RDTG[]
MDAP[R], 0
SRP1[], 7
SHP[1], 14
SRP1[], 0
SHP[1], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="160">
      <instructions>
        <talk>/* VTTTalk glyph 160, char 0xdf */
/* GUI generated Mon Sep 28 13:24:49 2020 */

/* Y direction */
ResYAnchor(4,1)
YShift(4,51)
ResYAnchor(22,11)
YShift(22,33)
YInterpolate(22,36,42,48,4)
ResYAnchor(58,14)
YShift(58,60)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 160, char 0xdf */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 4, 1, 114
SHP[2], 51
CALL[], 22, 11, 114
SHP[2], 33
SRP1[], 4
SLOOP[], 3
IP[], 36, 42, 48
CALL[], 58, 14, 114
SHP[2], 60
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="161">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 394, 31, 30


/*SVTCA[Y]
CALL[], 48, 6, 1, 1, 183, 86
SHC[2], 2
SVTCA[X]
CALL[], 40, 47, 0, 46, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="162">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 395, 18, 28


/*SVTCA[Y]
CALL[], 48, 6, 1, 1, 181, 86
SHC[2], 2
SVTCA[X]
CALL[], 37, 44, 0, 51, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="163">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 396, 28, 28


/*SVTCA[Y]
CALL[], 42, 6, 1, 1, 183, 86
SHC[2], 2
SVTCA[X]
CALL[], 45, 41, 0, 49, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="164">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 397, 8, 13


/*SVTCA[Y]
CALL[], 53, 6, 1, 1, 183, 86
SHC[2], 2
SVTCA[X]
CALL[], 37, 50, 0, 48, 9, 87
SHC[2], 2*/


SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 53

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="165">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 401, 29, -20


/*SVTCA[Y]
CALL[], 46, 6, 1, 1, 183, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 49, 43, 0, 49, 9, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 58
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="166">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 403, -5, 25
SVTCA[Y]
CALL[], 46, 6, 1, 1, 175, 86
SHC[2], 2
SHC[2], 3


/*SVTCA[X]
CALL[], 37, 43, 0, 50, 9, 87
SHC[2], 2
SHC[2], 3*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="167">
      <instructions>
        <talk>/* VTTTalk glyph 167, char 0xe6 */
/* GUI generated Mon Sep 28 14:36:06 2020 */

/* Y direction */
ResYAnchor(16,6)
YShift(16,10)
YShift(10,7)
YShift(16,19)
YShift(19,20)
ResYAnchor(25,7)
YShift(25,45)
YShift(45,22)
ResYAnchor(59,11)
YShift(59,51)
YDownToGrid(37)
YIPAnchor(59,37,25)
YShift(37,38)
ResYAnchor(65,11)
YShift(65,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 167, char 0xe6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 16, 6, 114
SHP[2], 10
SRP1[], 10
SHP[1], 7
SHP[2], 19
SRP1[], 19
SHP[1], 20
CALL[], 25, 7, 114
SHP[2], 45
SRP1[], 45
SHP[1], 22
CALL[], 59, 11, 114
SHP[2], 51
SRP1[], 25
IP[], 37
RDTG[]
MDAP[R], 37
SHP[1], 38
CALL[], 65, 11, 114
SHP[2], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="168">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 69, 0, 0
OFFSET[R], 412, -94, -5


/*SVTCA[Y]
CALL[], 59, 28, 0, 0, 63, 86
SHC[2], 1
SVTCA[X]
CALL[], 44, 37, 30, 24, 6, 87
SHC[2], 1
*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="169">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 394, 29, 30


/*SVTCA[Y]
CALL[], 51, 3, 1, 1, 133, 86
SHC[2], 1
SVTCA[X]
CALL[], 43, 50, 39, 48, 9, 87
SHC[2], 1*/




SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="170">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xe9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 395, 52, 36


/*SVTCA[Y]
CALL[], 51, 3, 1, 1, 139, 86
SHC[2], 1
SVTCA[X]
CALL[], 40, 47, 39, 56, 9, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="171">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xea */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 396, -4, 28


/*SVTCA[Y]
CALL[], 45, 3, 1, 1, 133, 86
SHC[2], 1
SVTCA[X]
CALL[], 48, 44, 39, 49, 9, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 45

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="172">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xeb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 401, -33, -20


/*SVTCA[Y]
CALL[], 49, 3, 1, 1, 133, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 52, 46, 39, 47, 9, 87
SHC[2], 1
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 49
MDRP[m&gt;RWh], 61

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="173">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xec */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 394, -287, 53


/*SVTCA[Y]
CALL[], 24, 6, 1, 1, 173, 86
SHC[2], 1
SVTCA[X]
CALL[], 16, 23, 5, 42, 12, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="174">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xed */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 395, -311, 26

/*SVTCA[Y]
CALL[], 24, 6, 1, 1, 146, 86
SHC[2], 1
SVTCA[X]
CALL[], 13, 20, 5, 52, 12, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="175">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xee */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 396, -320, 23


/*SVTCA[Y]
CALL[], 18, 6, 1, 1, 145, 86
SHC[2], 1
SVTCA[X]
CALL[], 21, 17, 5, 44, 12, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 18

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="176">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xef */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 401, -303, -7


/*SVTCA[Y]
CALL[], 22, 6, 1, 1, 163, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 25, 19, 5, 47, 12, 87
SHC[2], 1
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 22
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="177">
      <instructions>
        <talk>/* VTTTalk glyph 177, char 0xf0 */
/* GUI generated Wed Oct  7 13:51:01 2020 */

/* Y direction */
ResYAnchor(3,7)
YShift(3,10)
YShift(3,40)
YShift(40,41)
YShift(40,30)
YShift(30,22)
YShift(3,43)
YShift(43,44)
ResYAnchor(36,11)
YShift(36,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 177, char 0xf0 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 3, 7, 114
SHP[2], 10
SHP[2], 40
SRP1[], 40
SHP[1], 41
SHP[1], 30
SRP1[], 30
SHP[1], 22
SHP[2], 43
SRP1[], 43
SHP[1], 44
CALL[], 36, 11, 114
SHP[2], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="178">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
OFFSET[R], 397, 4, 21


/*SVTCA[Y]
CALL[], 47, 6, 1, 1, 158, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 44, 5, 135, 8, 87
SHC[2], 2*/


SVTCA[Y]
CALL[], 24, 7, 114
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="179">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 394, 15, 30


/*SVTCA[Y]
CALL[], 35, 3, 1, 1, 134, 86
SHC[2], 2
SVTCA[X]
CALL[], 27, 34, 11, 43, 5, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="180">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 395, 2, 26


/*SVTCA[Y]
CALL[], 35, 3, 1, 1, 130, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 31, 11, 47, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="181">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 396, -29, 24


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 130, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 28, 11, 43, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="182">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 397, -28, 17


/*SVTCA[Y]
CALL[], 40, 3, 1, 1, 138, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 37, 11, 44, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="183">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 401, -33, -21


/*SVTCA[Y]
CALL[], 33, 3, 1, 1, 133, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 36, 30, 11, 43, 5, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 33
MDRP[m&gt;RWh], 45

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="184">
      <instructions>
        <talk>/* VTTTalk glyph 184, char 0xf7 */
/* GUI generated Wed Sep 30 11:04:34 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(1,25,&gt;=)
YShift(25,19)
YDist(0,7,&gt;=)
YShift(7,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 184, char 0xf7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SRP0[], 1
MDRP[m&gt;RWh], 25
SHP[2], 19
SRP0[], 0
MDRP[m&gt;RWh], 7
SHP[2], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="185">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 649, 205, -5


/*SVTCA[Y]
CALL[], 32, 3, 0, 0, 124, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 24, 33, 11, 32, 5, 87
SHC[2], 2
SHC[2], 3*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="186">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 394, -36, 30


/*SVTCA[Y]
CALL[], 42, 5, 1, 1, 129, 86
SHC[2], 2
SVTCA[X]
CALL[], 34, 41, 14, 36, 9, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="187">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xfa */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 395, 19, 30


/*SVTCA[Y]
CALL[], 42, 15, 1, 1, 148, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 38, 14, 46, 9, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="188">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xfb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 396, -38, 28


/*SVTCA[Y]
CALL[], 36, 5, 1, 1, 129, 86
SHC[2], 2
SVTCA[X]
CALL[], 39, 35, 14, 39, 9, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="189">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xfc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 401, -2, -8


/*SVTCA[Y]
CALL[], 40, 5, 1, 1, 141, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 43, 37, 14, 42, 9, 87
SHC[2], 2
SHC[2], 3*/




SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 40
MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="190">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xfd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 395, -104, 30


/*SVTCA[Y]
CALL[], 47, 13, 1, 1, 149, 86
SHC[2], 1
SVTCA[X]
CALL[], 36, 43, 0, 50, 28, 87
SHC[2], 1*/





SVTCA[Y]
CALL[], 13, 6, 114
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="191">
      <instructions>
        <talk>/* VTTTalk glyph 191, char 0xfe */
/* GUI generated Tue Oct  6 13:03:49 2020 */

/* Y direction */
ResYAnchor(5,0)
ResYAnchor(10,6)
YShift(10,33)
YShift(33,7)
YShift(7,36)
YAnchor(16)
YShift(16,19)
YShift(16,27)
ResYAnchor(23,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 191, char 0xfe */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 5, 0, 114
CALL[], 10, 6, 114
SHP[2], 33
SRP1[], 33
SHP[1], 7
SRP1[], 7
SHP[1], 36
MDAP[R], 16
SHP[1], 19
SHP[1], 27
CALL[], 23, 14, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="192">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 401, -96, -8


/*SVTCA[Y]
CALL[], 45, 25, 1, 1, 149, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 48, 42, 0, 48, 28, 87
SHC[2], 1
SHC[2], 2*/




SVTCA[Y]
CALL[], 13, 6, 114
MDRP[m&gt;RWh], 45
MDRP[m&gt;RWh], 57

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="193">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x100 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 670, 239, -50


/*SVTCA[Y]
CALL[], 28, 4, 1, 1, 113, 86
SHC[2], 3
SVTCA[X]
CALL[], 28, 30, 0, 52, 8, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="194">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x101 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 398, 30, -32


/*SVTCA[Y]
CALL[], 37, 3, 1, 1, 159, 86
SHC[2], 2
SVTCA[X]
CALL[], 37, 39, 0, 49, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="195">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x102 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 671, 240, 0


/*SVTCA[Y]
CALL[], 32, 4, 1, 1, 109, 86
SHC[2], 3
SVTCA[X]
CALL[], 35, 29, 0, 53, 8, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="196">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x103 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 399, -12, -2


/*SVTCA[Y]
CALL[], 41, 6, 1, 1, 183, 86
SHC[2], 2
SVTCA[X]
CALL[], 44, 38, 0, 49, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 41

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="197">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x104 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 685, 760, 42


/*SVTCA[Y]
CALL[], 45, 10, 0, 0, 93, 86
SHC[2], 3
SVTCA[X]
CALL[], 41, 35, 0, 58, 8, 87
SHC[2], 3*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="198">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x105 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 413, 268, 16


/*SVTCA[Y]
CALL[], 54, 21, 0, 0, 77, 86
SHC[2], 2
SVTCA[X]
CALL[], 50, 44, 0, 48, 9, 87
SHC[2], 2*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="199">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x106 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 667, 203, 48


/*SVTCA[Y]
CALL[], 42, 3, 1, 1, 117, 86
SHC[2], 1
SVTCA[X]
CALL[], 31, 38, 30, 53, 8, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="200">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x107 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 69, 0, 0
OFFSET[R], 395, 44, 20


/*SVTCA[Y]
CALL[], 42, 3, 1, 1, 123, 86
SHC[2], 1
SVTCA[X]
CALL[], 31, 38, 30, 57, 6, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="201">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x108 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 668, 142, 31


/*SVTCA[Y]
CALL[], 36, 3, 1, 1, 118, 86
SHC[2], 1
SVTCA[X]
CALL[], 39, 35, 30, 48, 8, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 38

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="202">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x109 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 69, 0, 0
OFFSET[R], 396, 6, 18


/*SVTCA[Y]
CALL[], 36, 3, 1, 1, 123, 86
SHC[2], 1
SVTCA[X]
CALL[], 39, 35, 30, 51, 6, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 38

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="203">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 672, 233, 7



/*SVTCA[Y]
CALL[], 40, 3, 1, 1, 128, 86
SHC[2], 1
SVTCA[X]
CALL[], 31, 37, 30, 49, 8, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="204">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 69, 0, 0
OFFSET[R], 400, 8, -3


/*SVTCA[Y]
CALL[], 40, 3, 1, 1, 131, 86
SHC[2], 1
SVTCA[X]
CALL[], 31, 37, 30, 51, 6, 87
SHC[2], 1*/




SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="205">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 677, 205, 24


/*SVTCA[Y]
CALL[], 31, 3, 1, 1, 117, 86
SHC[2], 1
SVTCA[X]
CALL[], 35, 39, 30, 50, 8, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="206">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 69, 0, 0
OFFSET[R], 405, -33, 29


/*SVTCA[Y]
CALL[], 31, 3, 1, 1, 124, 86
SHC[2], 1
SVTCA[X]
CALL[], 35, 39, 30, 53, 6, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="207">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 38, 0, 0
OFFSET[R], 677, 58, 38


/*SVTCA[Y]
CALL[], 28, 6, 1, 1, 154, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 36, 0, 39, 9, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="208">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x10f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 661, 563, 1


/*SVTCA[Y]
CALL[], 39, 8, 2, 0, -54, 86
SHC[2], 2
SVTCA[X]
CALL[], 35, 9, 1, 1, 73, 86
SHC[2], 2*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="209">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x110 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 38, 0, 0
OFFSET[R], 593, 25, 49


/*SVTCA[Y]
CALL[], 30, 6, 2, 0, -669, 86
SHC[2], 2
SVTCA[X]
CALL[], 29, 32, 0, 19, 9, 87
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="210">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x111 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 654, 470, 483


/*SVTCA[Y]
CALL[], 37, 8, 2, 0, -341, 86
SHC[2], 2
SVTCA[X]
CALL[], 36, 39, 0, 51, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="211">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x112 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 670, 40, -42


/*SVTCA[Y]
CALL[], 28, 6, 1, 1, 152, 86
SHC[2], 2
SVTCA[X]
CALL[], 28, 30, 0, 45, 7, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="212">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x113 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 398, -1, -22


/*SVTCA[Y]
CALL[], 40, 3, 1, 1, 143, 86
SHC[2], 1
SVTCA[X]
CALL[], 40, 42, 39, 49, 9, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="213">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x114 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 671, 70, 12


/*SVTCA[Y]
CALL[], 32, 6, 1, 1, 152, 86
SHC[2], 2
SVTCA[X]
CALL[], 35, 29, 0, 47, 7, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="214">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x115 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 399, 6, 4


/*SVTCA[Y]
CALL[], 44, 3, 1, 1, 139, 86
SHC[2], 1
SVTCA[X]
CALL[], 47, 41, 39, 53, 9, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]








</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="215">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x116 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 672, 78, -1


/*SVTCA[Y]
CALL[], 37, 6, 1, 1, 143, 86
SHC[2], 2
SVTCA[X]
CALL[], 28, 34, 0, 47, 7, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="216">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x117 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 400, 31, -3


/*SVTCA[Y]
CALL[], 49, 3, 1, 1, 131, 86
SHC[2], 1
SVTCA[X]
CALL[], 40, 46, 39, 52, 9, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 49

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="217">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x118 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 685, 473, 57


/*SVTCA[Y]
CALL[], 45, 0, 0, 0, 108, 86
SHC[2], 2
SVTCA[X]
CALL[], 41, 35, 0, 47, 7, 87
SHC[2], 2*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="218">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x119 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 413, 132, 75


/*SVTCA[Y]
CALL[], 57, 37, 0, 0, 143, 86
SHC[2], 1
SVTCA[X]
CALL[], 53, 47, 39, 41, 9, 87
SHC[2], 1*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="219">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x11a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 677, 40, 23


/*SVTCA[Y]
CALL[], 28, 6, 1, 1, 139, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 36, 0, 47, 7, 87
SHC[2], 2*/


SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="220">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x11b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 405, -33, 33


/*SVTCA[Y]
CALL[], 40, 3, 1, 1, 128, 86
SHC[2], 1
SVTCA[X]
CALL[], 44, 48, 39, 53, 9, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="221">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x11c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 668, 157, 30


/*SVTCA[Y]
CALL[], 42, 3, 1, 1, 117, 86
SHC[2], 1
SVTCA[X]
CALL[], 45, 41, 36, 45, 27, 87
SHC[2], 1*/




SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="222">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x11d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
OFFSET[R], 396, 31, 29


/*SVTCA[Y]
CALL[], 47, 3, 1, 1, 166, 86
SHC[2], 2
SVTCA[X]
CALL[], 50, 46, 18, 49, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 49

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="223">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x11e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 671, 216, 0


/*SVTCA[Y]
CALL[], 41, 3, 1, 1, 117, 86
SHC[2], 1
SVTCA[X]
CALL[], 44, 38, 36, 45, 27, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 41

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="224">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x11f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
OFFSET[R], 399, 29, -2


/*SVTCA[Y]
CALL[], 46, 3, 1, 1, 165, 86
SHC[2], 2
SVTCA[X]
CALL[], 49, 43, 18, 52, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]








</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="225">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x120 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 672, 233, -4


/*SVTCA[Y]
CALL[], 46, 3, 1, 1, 117, 86
SHC[2], 1
SVTCA[X]
CALL[], 37, 43, 36, 45, 27, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="226">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x121 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
OFFSET[R], 400, 36, -1


/*SVTCA[Y]
CALL[], 51, 3, 1, 1, 165, 86
SHC[2], 2
SVTCA[X]
CALL[], 42, 48, 18, 49, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]








</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="227">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x122 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 683, 190, -20


/*SVTCA[Y]
CALL[], 46, 33, 1, 1, -120, 86
SHC[2], 1
SVTCA[X]
CALL[], 43, 49, 36, 25, 27, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="228">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x123 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
SOFFSET[R], 411, 990, 993, -1, 0, 0, -1


/*SVTCA[Y]
CALL[], 51, 3, 1, 1, 165, 86
SHC[2], 2
SVTCA[X]
CALL[], 54, 48, 18, 45, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="229">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x124 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 668, 129, 30


/*SVTCA[Y]
CALL[], 39, 26, 1, 1, 140, 86
SHC[2], 3
SVTCA[X]
CALL[], 42, 38, 0, 39, 27, 87
SHC[2], 3*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="230">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x125 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 396, 11, 493


/*SVTCA[Y]
CALL[], 35, 6, 1, 0, 13, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 34, 1, 93, 7, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 0, 114
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="231">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x126 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 653, 58, -45


SVTCA[Y]
CALL[], 43, 6, 2, 0, -363, 86
SHC[2], 3
SHC[2], 4


/*SVTCA[X]
CALL[], 42, 41, 0, 35, 27, 87
SHC[2], 3
SHC[2], 4*/





/*
SVTCA[Y]
MDAP[R], 16
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]
*/




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="232">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x127 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 654, 26, 464


/*SVTCA[Y]
CALL[], 32, 6, 2, 0, -356, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 34, 1, 51, 7, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 23, 7, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="233">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x128 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 669, -212, -5


/*SVTCA[Y]
CALL[], 30, 6, 1, 1, 146, 86
SHC[2], 1
SVTCA[X]
CALL[], 14, 27, 0, 48, 7, 87
SHC[2], 1*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="234">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x129 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 397, -290, 23


/*SVTCA[Y]
CALL[], 29, 6, 1, 1, 160, 86
SHC[2], 1
SVTCA[X]
CALL[], 13, 26, 5, 51, 12, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 29

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="235">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 670, -227, -53


/*SVTCA[Y]
CALL[], 14, 6, 1, 1, 141, 86
SHC[2], 1
SVTCA[X]
CALL[], 14, 16, 0, 46, 7, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 14

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="236">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 398, -300, -23


/*SVTCA[Y]
CALL[], 13, 6, 1, 1, 159, 86
SHC[2], 1
SVTCA[X]
CALL[], 13, 15, 5, 47, 12, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 13

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="237">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 671, -188, 12


/*SVTCA[Y]
CALL[], 18, 6, 1, 1, 152, 86
SHC[2], 1
SVTCA[X]
CALL[], 21, 15, 0, 50, 7, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 18

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="238">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 399, -305, 5


/*SVTCA[Y]
CALL[], 17, 6, 1, 1, 157, 86
SHC[2], 1
SVTCA[X]
CALL[], 20, 14, 5, 53, 12, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 17

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="239">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 685, -140, 32


/*SVTCA[Y]
CALL[], 31, 0, 0, 0, 83, 86
SHC[2], 1
SVTCA[X]
CALL[], 27, 21, 0, 22, 7, 87
SHC[2], 1*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="240">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x12f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 75, 0, 0
OFFSET[R], 413, -203, 42


/*SVTCA[Y]
CALL[], 42, 0, 0, 0, 114, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 32, 5, 24, 12, 87
SHC[2], 2*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="241">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x130 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 672, -223, -4


/*SVTCA[Y]
CALL[], 23, 6, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 14, 20, 0, 45, 7, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="242">
      <instructions>
        <talk>/* VTTTalk glyph 242, char 0x131 */
/* GUI generated Tue Oct  6 13:14:09 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,10)
ResYAnchor(6,6)
YShift(6,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 242, char 0x131 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 10
CALL[], 6, 6, 114
SHP[2], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="243">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x132 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 43, 0, 0
OFFSET[R], 44, 639, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="244">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x133 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 75, 0, 0
OFFSET[R], 76, 580, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="245">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x134 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 668, -289, 30


/*SVTCA[Y]
CALL[], 27, 11, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 30, 26, 0, 48, 12, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 11, 2, 114
MDRP[m&gt;RWh], 29

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="246">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x135 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 659, 0, 0
OFFSET[R], 396, -318, 28


/*SVTCA[Y]
CALL[], 24, 3, 1, 1, 150, 86
SHC[2], 1
SVTCA[X]
CALL[], 27, 23, 11, 58, 5, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 26

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="247">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x136 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 683, 165, -83


/*SVTCA[Y]
CALL[], 39, 0, 1, 1, -220, 86
SHC[2], 3
SVTCA[X]
CALL[], 36, 42, 1, 47, 7, 87
SHC[2], 3*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="248">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x137 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
OFFSET[R], 411, -11, -69


/*SVTCA[Y]
CALL[], 47, 0, 1, 1, -203, 86
SHC[2], 1
SVTCA[X]
CALL[], 44, 50, 1, 23, 20, 87
SHC[2], 1*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="249">
      <instructions>
        <talk>/* VTTTalk glyph 249, char 0x138 */
/* GUI generated Thu Oct  1 11:06:52 2020 */

/* Y direction */
ResYAnchor(6,6)
YShift(6,28)
ResYAnchor(11,11)
YInterpolate(11,23,24,22,14,6)
YShift(11,18)
YAnchor(18)
YShift(18,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 249, char 0x138 */
/* VTT 6.33 compiler Tue Oct 13 13:17:10 2020 */
SVTCA[Y]
CALL[], 6, 6, 114
SHP[2], 28
CALL[], 11, 11, 114
SRP1[], 6
SLOOP[], 4
IP[], 23, 24, 22, 14
SHP[2], 18
MDAP[R], 18
SHP[1], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="250">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x139 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 667, 80, 32


/*SVTCA[Y]
CALL[], 28, 6, 1, 1, 124, 86
SHC[2], 1
SVTCA[X]
CALL[], 17, 24, 0, 57, 15, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="251">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 78, 0, 0
OFFSET[R], 395, -157, 582


/*SVTCA[Y]
CALL[], 23, 6, 1, 1, 96, 86
SHC[2], 1
SVTCA[X]
CALL[], 12, 11, 1, 0, -92, 86
SHC[2], 1*/




SVTCA[Y]
CALL[], 6, 0, 114
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="252">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 683, 32, 16


/*SVTCA[Y]
CALL[], 26, 0, 1, 1, -121, 86
SHC[2], 1
SVTCA[X]
CALL[], 23, 29, 0, 26, 15, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="253">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 78, 0, 0
OFFSET[R], 411, -269, 0


/*SVTCA[Y]
CALL[], 21, 0, 1, 1, -143, 86
SHC[2], 1
SVTCA[X]
CALL[], 18, 24, 1, 13, 11, 87
SHC[2], 1*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="254">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 661, 337, 48


/*SVTCA[Y]
CALL[], 21, 6, 0, 0, 99, 86
SHC[2], 1
SVTCA[X]
CALL[], 17, 24, 0, 63, 15, 87
SHC[2], 1*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="255">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 78, 0, 0
OFFSET[R], 661, -17, -10


/*SVTCA[Y]
CALL[], 16, 6, 2, 0, -65, 86
SHC[2], 1
SVTCA[X]
CALL[], 12, 11, 1, 1, 116, 86
SHC[2], 1*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="256">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x13f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 672, 142, -1019


/*SVTCA[Y]
CALL[], 26, 0, 2, 0, 625, 86
SHC[2], 1
SVTCA[X]
CALL[], 17, 23, 0, 54, 15, 87
SHC[2], 18*/




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="257">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x140 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 78, 0, 0
OFFSET[R], 400, -38, -472


/*SVTCA[Y]
CALL[], 21, 9, 1, 1, 545, 86
SHC[2], 1
SVTCA[X]
CALL[], 12, 11, 1, 1, 105, 86
SHC[2], 1*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="258">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x141 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 648, 35, -12


/*SVTCA[Y]
CALL[], 21, 0, 2, 0, 473, 86
SHC[2], 1
SVTCA[X]
CALL[], 22, 19, 0, 26, 15, 87
SHC[2], 1*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="259">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x142 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 78, 0, 0
OFFSET[R], 648, -101, 27


/*SVTCA[Y]
CALL[], 16, 0, 2, 0, 526, 86
SHC[2], 1
SVTCA[X]
CALL[], 17, 14, 1, 40, 11, 87
SHC[2], 1*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="260">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x143 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 667, 95, 48


/*SVTCA[Y]
CALL[], 37, 13, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 26, 33, 1, 42, 14, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="261">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x144 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
OFFSET[R], 395, 46, 30


/*SVTCA[Y]
CALL[], 42, 6, 1, 1, 150, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 38, 5, 150, 8, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 24, 7, 114
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="262">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x145 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 683, 190, -40


/*SVTCA[Y]
CALL[], 35, 19, 1, 1, -177, 86
SHC[2], 1
SVTCA[X]
CALL[], 32, 38, 1, 25, 14, 87
SHC[2], 1*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="263">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x146 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
OFFSET[R], 411, 51, -5


/*SVTCA[Y]
CALL[], 40, 0, 1, 1, -139, 86
SHC[2], 2
SVTCA[X]
CALL[], 37, 43, 5, 78, 8, 87
SHC[2], 2*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="264">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x147 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 677, 139, 22


/*SVTCA[Y]
CALL[], 26, 13, 1, 1, 138, 86
SHC[2], 1
SVTCA[X]
CALL[], 30, 34, 1, 41, 14, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 26

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="265">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x148 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
OFFSET[R], 405, -5, 39


/*SVTCA[Y]
CALL[], 31, 6, 1, 1, 151, 86
SHC[2], 2
SVTCA[X]
CALL[], 35, 39, 5, 146, 8, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 24, 7, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="266">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x149 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 595, -243, -18
OFFSET[R], 80, 167, 0


/*SVTCA[Y]
CALL[], 15, 22, 1, 0, -6, 86
SHC[2], 0
SVTCA[X]
CALL[], 12, 19, 1, 0, -30, 86
SHC[2], 0*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="267">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 652, 627, 0


/*SVTCA[Y]
CALL[], 35, 19, 0, 0, 190, 86
SHC[2], 1
SVTCA[X]
CALL[], 26, 36, 1, 34, 14, 87
SHC[2], 1*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="268">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 651, -36, 0
OFFSET[R], 652, 424, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="269">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 670, 188, -26


/*SVTCA[Y]
CALL[], 24, 3, 1, 1, 149, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 26, 11, 40, 5, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="270">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 398, -44, -30


/*SVTCA[Y]
CALL[], 24, 3, 1, 1, 136, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 26, 11, 42, 5, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="271">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 671, 210, 3


/*SVTCA[Y]
CALL[], 28, 3, 1, 1, 124, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 25, 11, 42, 5, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="272">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x14f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 399, -54, -20


/*SVTCA[Y]
CALL[], 28, 3, 1, 1, 116, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 25, 11, 44, 5, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="273">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x150 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 676, 326, 50


/*SVTCA[Y]
CALL[], 28, 3, 1, 1, 124, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 29, 36, 11, 47, 5, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 40
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="274">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x151 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 404, -27, 23


/*SVTCA[Y]
CALL[], 35, 3, 1, 1, 123, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 24, 43, 11, 49, 5, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 47
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="275">
      <instructions>
        <talk>/* VTTTalk glyph 275, char 0x152 */
/* GUI generated Thu Oct  1 11:33:48 2020 */

/* Y direction */
ResYAnchor(3,2)
YShift(3,37)
YShift(37,34)
ResYAnchor(6,2)
YShift(6,9)
YAnchor(9)
YShift(6,11)
YAnchor(20,8)
YShift(20,15)
YShift(20,17)
YAnchor(17)
YIPAnchor(6,40,20)
YShift(40,46)
YShift(40,41)
YShift(41,43)
ResYAnchor(22,9)
YShift(22,29)
YShift(29,32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 275, char 0x152 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 2, 114
SHP[2], 37
SRP1[], 37
SHP[1], 34
CALL[], 6, 2, 114
SHP[2], 9
MDAP[R], 9
SHP[2], 11
MIAP[R], 20, 8
SHP[1], 15
SHP[1], 17
MDAP[R], 17
SRP1[], 20
IP[], 40
MDAP[R], 40
SHP[1], 46
SHP[1], 41
SRP1[], 41
SHP[1], 43
CALL[], 22, 9, 114
SHP[2], 29
SRP1[], 29
SHP[1], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="276">
      <instructions>
        <talk>/* VTTTalk glyph 276, char 0x153 */
/* GUI generated Thu Oct  1 11:36:02 2020 */

/* Y direction */
ResYAnchor(3,7)
YShift(3,61)
YShift(61,6)
ResYAnchor(9,7)
YShift(9,29)
ResYAnchor(43,11)
YShift(43,35)
YIPAnchor(43,22,9)
YShift(22,21)
ResYAnchor(49,11)
YShift(49,55)
YShift(55,46)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 276, char 0x153 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 7, 114
SHP[2], 61
SRP1[], 61
SHP[1], 6
CALL[], 9, 7, 114
SHP[2], 29
CALL[], 43, 11, 114
SHP[2], 35
SRP1[], 9
IP[], 22
MDAP[R], 22
SHP[1], 21
CALL[], 49, 11, 114
SHP[2], 55
SRP1[], 55
SHP[1], 46
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="277">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x154 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 667, -8, 48


/*SVTCA[Y]
CALL[], 54, 6, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 43, 50, 0, 50, 9, 87
SHC[2], 2
*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 54

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="278">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x155 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 395, -82, 30


/*SVTCA[Y]
CALL[], 39, 6, 1, 1, 149, 86
SHC[2], 2
SVTCA[X]
CALL[], 28, 35, 5, 118, 12, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 21, 7, 114
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="279">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x156 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 683, 102, -33


/*SVTCA[Y]
CALL[], 52, 0, 1, 1, -170, 86
SHC[2], 2
SVTCA[X]
CALL[], 49, 55, 0, 29, 9, 87
SHC[2], 2*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="280">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x157 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 411, -220, -2


/*SVTCA[Y]
CALL[], 37, 0, 1, 1, -145, 86
SHC[2], 2
SVTCA[X]
CALL[], 34, 40, 5, 21, 12, 87
SHC[2], 2*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="281">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x158 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 677, -46, 3


/*SVTCA[Y]
CALL[], 43, 6, 1, 1, 119, 86
SHC[2], 2
SVTCA[X]
CALL[], 47, 51, 0, 45, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="282">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x159 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 405, -244, 4


/*SVTCA[Y]
CALL[], 28, 6, 1, 1, 115, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 36, 5, 91, 12, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 21, 7, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="283">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0
OFFSET[R], 667, -74, 67


/*SVTCA[Y]
CALL[], 57, 18, 1, 1, 139, 86
SHC[2], 1
SVTCA[X]
CALL[], 46, 53, 0, 56, 38, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 18, 3, 114
MDRP[m&gt;RWh], 57

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="284">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 395, -102, 33


/*SVTCA[Y]
CALL[], 57, 20, 1, 1, 135, 86
SHC[2], 1
SVTCA[X]
CALL[], 46, 53, 0, 54, 23, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 20, 7, 114
MDRP[m&gt;RWh], 57

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="285">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0
OFFSET[R], 668, -147, 28


/*SVTCA[Y]
CALL[], 51, 18, 1, 1, 118, 86
SHC[2], 1
SVTCA[X]
CALL[], 54, 50, 0, 49, 38, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 18, 3, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="286">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 396, -165, 2


/*SVTCA[Y]
CALL[], 51, 20, 1, 1, 106, 86
SHC[2], 1
SVTCA[X]
CALL[], 54, 50, 0, 45, 23, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 20, 7, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="287">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0
OFFSET[R], 684, -21, -8


/*SVTCA[Y]
CALL[], 74, 41, 0, 0, 69, 86
SHC[2], 1
SVTCA[X]
CALL[], 59, 52, 0, 26, 38, 87
SHC[2], 1*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="288">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x15f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 412, -153, 1


/*SVTCA[Y]
CALL[], 74, 43, 0, 0, 67, 86
SHC[2], 1
SVTCA[X]
CALL[], 59, 52, 0, 22, 23, 87
SHC[2], 1*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="289">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x160 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0
OFFSET[R], 677, -57, 20


/*SVTCA[Y]
CALL[], 46, 18, 1, 1, 116, 86
SHC[2], 1
SVTCA[X]
CALL[], 50, 54, 0, 53, 38, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 18, 3, 114
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="290">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x161 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 405, -184, 38


/*SVTCA[Y]
CALL[], 46, 20, 1, 1, 132, 86
SHC[2], 1
SVTCA[X]
CALL[], 50, 54, 0, 50, 23, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 20, 7, 114
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="291">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x162 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OFFSET[R], 684, 102, 5


/*SVTCA[Y]
CALL[], 48, 12, 0, 0, 60, 86
SHC[2], 1
SVTCA[X]
CALL[], 33, 26, 13, 17, 2, 87
SHC[2], 1*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="292">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x163 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 86, 0, 0
OFFSET[R], 412, -287, 20


/*SVTCA[Y]
CALL[], 47, 0, 0, 0, 86, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 25, 4, 12, 14, 87
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="293">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x164 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OFFSET[R], 677, 4, 24


/*SVTCA[Y]
CALL[], 20, 1, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 24, 28, 13, 37, 2, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="294">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x165 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 86, 0, 0
OFFSET[R], 661, 83, -77


/*SVTCA[Y]
CALL[], 23, 8, 0, 0, 237, 86
SHC[2], 2
SVTCA[X]
CALL[], 19, 14, 1, 1, 214, 86
SHC[2], 2*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="295">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x166 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OFFSET[R], 593, 223, 41


/*SVTCA[Y]
CALL[], 22, 1, 2, 0, -677, 86
SHC[2], 1
SVTCA[X]
CALL[], 21, 24, 13, 24, 2, 87
SHC[2], 1*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="296">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x167 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 86, 0, 0
OFFSET[R], 654, -83, -108


/*SVTCA[Y]
CALL[], 20, 0, 2, 0, 563, 86
SHC[2], 2


SVTCA[X]
CALL[], 20, 23, 4, 41, 14, 87
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="297">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x168 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 669, 144, -11


/*SVTCA[Y]
CALL[], 50, 18, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 34, 47, 29, 34, 19, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 50

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="298">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x169 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 397, -45, 10


/*SVTCA[Y]
CALL[], 47, 5, 1, 1, 126, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 44, 14, 40, 9, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="299">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 670, 169, -54


/*SVTCA[Y]
CALL[], 34, 18, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 34, 36, 29, 35, 19, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]








</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="300">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 398, -16, -32


/*SVTCA[Y]
CALL[], 31, 15, 1, 1, 148, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 33, 14, 41, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="301">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 671, 159, 0


/*SVTCA[Y]
CALL[], 38, 18, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 41, 35, 29, 35, 19, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 38

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="302">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 399, -49, -2


/*SVTCA[Y]
CALL[], 35, 5, 1, 1, 129, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 32, 14, 42, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="303">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 675, 164, 26
SVTCA[Y]
CALL[], 43, 18, 1, 1, 140, 86
SHC[2], 1
SHC[2], 2


/*SVTCA[X]
CALL[], 34, 40, 29, 35, 19, 87
SHC[2], 1
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="304">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x16f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 403, -110, 33
SVTCA[Y]
CALL[], 40, 5, 1, 1, 129, 86
SHC[2], 2
SHC[2], 3


/*SVTCA[X]
CALL[], 31, 37, 14, 38, 9, 87
SHC[2], 2
SHC[2], 3*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="305">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x170 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 676, 296, 47


/*SVTCA[Y]
CALL[], 38, 18, 1, 1, 140, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 39, 46, 29, 41, 19, 87
SHC[2], 1
SHC[2], 2*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 38
MDRP[m&gt;RWh], 50

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="306">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x171 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 404, -36, 34


/*SVTCA[Y]
CALL[], 42, 15, 1, 1, 148, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 31, 50, 14, 46, 9, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 42
MDRP[m&gt;RWh], 54

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="307">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x172 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 685, 462, 57


/*SVTCA[Y]
CALL[], 51, 26, 0, 0, 130, 86
SHC[2], 1
SVTCA[X]
CALL[], 47, 41, 29, 30, 19, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="308">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x173 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 413, 428, 57


/*SVTCA[Y]
CALL[], 48, 28, 0, 0, 115, 86
SHC[2], 2
SVTCA[X]
CALL[], 44, 38, 14, 54, 9, 87
SHC[2], 2*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="309">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x174 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 668, 226, 30


/*SVTCA[Y]
CALL[], 41, 27, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 44, 40, 0, 33, 28, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]








</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="310">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x175 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 396, 105, 14


/*SVTCA[Y]
CALL[], 45, 29, 1, 1, 95, 86
SHC[2], 2
SVTCA[X]
CALL[], 48, 44, 1, 36, 32, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 2, 6, 114
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="311">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x176 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 668, -71, 31


/*SVTCA[Y]
CALL[], 30, 10, 1, 1, 141, 86
SHC[2], 1
SVTCA[X]
CALL[], 33, 29, 20, 33, 11, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="312">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x177 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 396, -124, 35


/*SVTCA[Y]
CALL[], 41, 25, 1, 1, 144, 86
SHC[2], 1
SVTCA[X]
CALL[], 44, 40, 0, 46, 28, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 25, 7, 114
MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="313">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x178 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 673, 4, -18


/*SVTCA[Y]
CALL[], 34, 10, 1, 1, 140, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 25, 43, 20, 33, 11, 87
SHC[2], 1
SHC[2], 2*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 46
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="314">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x179 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 667, -105, 48


/*SVTCA[Y]
CALL[], 29, 8, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 18, 25, 1, 47, 10, 87
SHC[2], 1*/





SVTCA[Y]
CALL[], 8, 2, 114
MDRP[m&gt;RWh], 29

IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="315">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 395, -106, 22


/*SVTCA[Y]
CALL[], 38, 12, 1, 1, 150, 86
SHC[2], 1
SVTCA[X]
CALL[], 27, 34, 1, 49, 14, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 12, 6, 114
MDRP[m&gt;RWh], 38

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="316">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 672, -61, 3


/*SVTCA[Y]
CALL[], 27, 8, 1, 1, 147, 86
SHC[2], 1
SVTCA[X]
CALL[], 18, 24, 1, 43, 10, 87
SHC[2], 1*/





SVTCA[Y]
CALL[], 8, 2, 114
MDRP[m&gt;RWh], 27

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="317">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 400, -161, 7


/*SVTCA[Y]
CALL[], 36, 12, 1, 1, 166, 86
SHC[2], 1
SVTCA[X]
CALL[], 27, 33, 1, 42, 14, 87
SHC[2], 1*/






SVTCA[Y]
CALL[], 12, 6, 114
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="318">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 677, -52, 24


/*SVTCA[Y]
CALL[], 18, 8, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 22, 26, 1, 47, 10, 87
SHC[2], 1*/




SVTCA[Y]
CALL[], 8, 2, 114
MDRP[m&gt;RWh], 18

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="319">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x17e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 405, -189, 35


/*SVTCA[Y]
CALL[], 27, 12, 1, 1, 155, 86
SHC[2], 1
SVTCA[X]
CALL[], 31, 35, 1, 45, 14, 87
SHC[2], 1*/





SVTCA[Y]
CALL[], 12, 6, 114
MDRP[m&gt;RWh], 27

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="320">
      <instructions>
        <talk>/* VTTTalk glyph 320, char 0x18f */
/* GUI generated Wed Oct  7 16:03:20 2020 */

/* Y direction */
YAnchor(3)
YShift(3,23)
YAnchor(9)
YShift(9,28)
YIPAnchor(3,32,9)
YShift(32,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 320, char 0x18f */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 23
MDAP[R], 9
SHP[1], 28
SRP2[], 3
IP[], 32
MDAP[R], 32
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="321">
      <instructions>
        <talk>/* VTTTalk glyph 321, char 0x192 */
/* GUI generated Mon Oct  5 14:22:15 2020 */

/* Y direction */
YAnchor(3)
YShift(3,12)
ResYAnchor(23,5)
YShift(23,32)
YIPAnchor(3,19,23)
YShift(19,36)
YShift(19,16)
YShift(16,39)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 321, char 0x192 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 12
CALL[], 23, 5, 114
SHP[2], 32
SRP2[], 3
IP[], 19
MDAP[R], 19
SHP[1], 36
SHP[1], 16
SRP1[], 16
SHP[1], 39
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="322">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1a0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 680, 560, 0


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="323">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1a1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 408, 570, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="324">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1af */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 655, -46, 0
OFFSET[R], 680, 878, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="325">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1b0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 408, 821, 2


/*SVTCA[Y]
CALL[], 47, 5, 1, 0, -145, 86
SHC[2], 2
SVTCA[X]
CALL[], 50, 9, 1, 0, -87, 86
SHC[2], 2*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="326">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1c4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 38, 0, 0
OFFSET[R], 318, 1457, 0




SVTCA[Y]
CALL[], 36, 2, 114
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="327">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1c5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 38, 0, 0
OFFSET[R], 92, 1449, 0
OFFSET[R], 405, 1258, 4


/*SVTCA[Y]
CALL[], 60, 6, 0, 0, 5, 86
SHC[2], 3
SVTCA[X]
CALL[], 59, 9, 1, 1, 231, 86
SHC[2], 3*/



SVTCA[Y]
CALL[], 40, 6, 114
MDRP[m&gt;RWh], 55

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="328">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1c6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 70, 0, 0
OFFSET[R], 92, 1066, 0
OFFSET[R], 405, 953, 0


/*SVTCA[Y]
CALL[], 67, 8, 2, 0, -105, 86
SHC[2], 3
SVTCA[X]
CALL[], 66, 9, 1, 1, 351, 86
SHC[2], 3*/



SVTCA[Y]
CALL[], 47, 6, 114
MDRP[m&gt;RWh], 62

IUP[Y]
IUP[X]









</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="329">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1c7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 46, 0, 0
OFFSET[R], 44, 1052, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="330">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1c8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 46, 0, 0
OFFSET[R], 76, 1135, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="331">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1c9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 78, 0, 0
OFFSET[R], 76, 537, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="332">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ca */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 48, 0, 0
OFFSET[R], 44, 1392, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="333">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1cb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 48, 0, 0
OFFSET[R], 76, 1381, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="334">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1cc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 80, 0, 0
OFFSET[R], 76, 1153, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="335">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 677, 185, 24


/*SVTCA[Y]
CALL[], 37, 3, 1, 1, 117, 86
SHC[2], 1
SVTCA[X]
CALL[], 41, 45, 36, 45, 27, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="336">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
OFFSET[R], 405, -13, 44


/*SVTCA[Y]
CALL[], 42, 3, 1, 1, 171, 86
SHC[2], 2
SVTCA[X]
CALL[], 46, 50, 18, 51, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="337">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 685, 531, 65


/*SVTCA[Y]
CALL[], 41, 9, 0, 0, 133, 86
SHC[2], 2
SVTCA[X]
CALL[], 37, 31, 11, 38, 5, 87
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="338">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 413, 119, 63


/*SVTCA[Y]
CALL[], 41, 9, 0, 0, 130, 86
SHC[2], 2
SVTCA[X]
CALL[], 37, 31, 11, 36, 5, 87
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="339">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1fa */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 403, 295, 523
OFFSET[R], 689, 392, 609
SVTCA[Y]
CALL[], 37, 4, 1, 1, 109, 86
SHC[2], 3
SHC[2], 4
CALL[], 56, 31, 1, 1, 100, 86
SHC[2], 5


/*SVTCA[X]
CALL[], 28, 34, 0, 52, 8, 87
SHC[2], 3
SHC[2], 4
CALL[], 57, 52, 28, 57, 34, 87
SHC[2], 5*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="340">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1fb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 403, -22, 25
OFFSET[R], 395, 123, 500
SVTCA[Y]
CALL[], 46, 6, 1, 1, 175, 86
SHC[2], 2
SHC[2], 3
CALL[], 72, 40, 1, 1, 46, 86
SHC[2], 4


/*SVTCA[X]
CALL[], 37, 43, 0, 49, 9, 87
SHC[2], 2
SHC[2], 3
CALL[], 61, 68, 37, 51, 43, 87
SHC[2], 4*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="341">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1fc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 135, 0, 0
OFFSET[R], 667, 563, 48


/*SVTCA[Y]
CALL[], 57, 14, 1, 1, 140, 86
SHC[2], 5
SVTCA[X]
CALL[], 46, 53, 41, 51, 15, 87
SHC[2], 5*/





SVTCA[Y]
CALL[], 14, 2, 114
MDRP[m&gt;RWh], 57

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="342">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1fd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 167, 0, 0
OFFSET[R], 395, 478, 30


/*SVTCA[Y]
CALL[], 79, 25, 1, 1, 120, 86
SHC[2], 2
SVTCA[X]
CALL[], 68, 75, 13, 49, 31, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 16, 6, 114
MDRP[m&gt;RWh], 79

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="343">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1fe */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 153, 0, 0
OFFSET[R], 667, 160, 48


/*SVTCA[Y]
CALL[], 51, 3, 1, 1, 121, 86
SHC[2], 4
SVTCA[X]
CALL[], 40, 47, 11, 44, 5, 87
SHC[2], 4*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="344">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 185, 0, 0
OFFSET[R], 395, -8, 30


/*SVTCA[Y]
CALL[], 51, 3, 1, 1, 134, 86
SHC[2], 4
SVTCA[X]
CALL[], 40, 47, 11, 47, 5, 87
SHC[2], 4*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="345">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x200 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 679, 172, 48


/*SVTCA[Y]
CALL[], 36, 4, 1, 1, 109, 86
SHC[2], 3
SHC[2], 4
SVTCA[X]
CALL[], 28, 47, 0, 49, 8, 87
SHC[2], 3
SHC[2], 4*/




SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 36
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="346">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x201 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 407, 52, 5


/*SVTCA[Y]
CALL[], 57, 6, 1, 1, 158, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 48, 56, 0, 45, 9, 87
SHC[2], 2
SHC[2], 3*/




SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 45
MDRP[m&gt;RWh], 57

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="347">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x202 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 678, 225, -5


/*SVTCA[Y]
CALL[], 36, 4, 1, 1, 79, 86
SHC[2], 3
SVTCA[X]
CALL[], 29, 35, 0, 51, 8, 87
SHC[2], 3*/




SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="348">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x203 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 406, -29, -3


/*SVTCA[Y]
CALL[], 45, 6, 1, 1, 182, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 44, 0, 48, 9, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="349">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x204 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 679, -50, 48


/*SVTCA[Y]
CALL[], 36, 6, 1, 1, 140, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 28, 47, 0, 40, 7, 87
SHC[2], 2
SHC[2], 3*/






SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 36
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="350">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x205 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 407, 36, 33


/*SVTCA[Y]
CALL[], 60, 3, 1, 1, 136, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 51, 59, 39, 47, 9, 87
SHC[2], 1
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 48
MDRP[m&gt;RWh], 60

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="351">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x206 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 678, 50, 29


/*SVTCA[Y]
CALL[], 36, 6, 1, 1, 144, 86
SHC[2], 2
SVTCA[X]
CALL[], 29, 35, 0, 45, 7, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="352">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x207 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 406, -66, -7


/*SVTCA[Y]
CALL[], 48, 3, 1, 1, 128, 86
SHC[2], 1
SVTCA[X]
CALL[], 41, 47, 39, 48, 9, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="353">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x208 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 679, -262, 52


/*SVTCA[Y]
CALL[], 22, 6, 1, 1, 144, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 14, 33, 0, 43, 7, 87
SHC[2], 1
SHC[2], 2*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 22
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="354">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x209 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 407, -281, 54


/*SVTCA[Y]
CALL[], 33, 6, 1, 1, 174, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 24, 32, 5, 39, 12, 87
SHC[2], 1
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 21
MDRP[m&gt;RWh], 33

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="355">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x20a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 678, -214, 21


/*SVTCA[Y]
CALL[], 22, 6, 1, 1, 136, 86
SHC[2], 1
SVTCA[X]
CALL[], 15, 21, 0, 45, 7, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 14

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="356">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x20b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 406, -368, 7


/*SVTCA[Y]
CALL[], 21, 6, 1, 1, 159, 86
SHC[2], 1
SVTCA[X]
CALL[], 14, 20, 5, 44, 12, 87
SHC[2], 1*/





SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 13

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="357">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x20c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 679, 101, 63


/*SVTCA[Y]
CALL[], 32, 3, 1, 1, 136, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 24, 43, 11, 36, 5, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="358">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x20d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 407, -58, 34


/*SVTCA[Y]
CALL[], 44, 3, 1, 1, 138, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 35, 43, 11, 36, 5, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="359">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x20e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 678, 180, 21


/*SVTCA[Y]
CALL[], 32, 3, 1, 1, 117, 86
SHC[2], 2
SVTCA[X]
CALL[], 25, 31, 11, 39, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="360">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x20f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 406, -84, -10


/*SVTCA[Y]
CALL[], 32, 3, 1, 1, 126, 86
SHC[2], 2
SVTCA[X]
CALL[], 25, 31, 11, 42, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="361">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x210 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 679, -118, 35


/*SVTCA[Y]
CALL[], 51, 6, 1, 1, 127, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 43, 62, 0, 39, 9, 87
SHC[2], 2
SHC[2], 3*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 51
MDRP[m&gt;RWh], 63

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="362">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x211 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 407, -132, 37


/*SVTCA[Y]
CALL[], 48, 6, 1, 1, 156, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 39, 47, 5, 85, 12, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 36
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="363">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x212 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 678, -49, 37


/*SVTCA[Y]
CALL[], 51, 6, 1, 1, 152, 86
SHC[2], 2
SVTCA[X]
CALL[], 44, 50, 0, 41, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="364">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x213 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 406, -215, -13


/*SVTCA[Y]
CALL[], 36, 6, 1, 1, 138, 86
SHC[2], 2
SVTCA[X]
CALL[], 29, 35, 5, 92, 12, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="365">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x214 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 679, 110, 48



/*SVTCA[Y]
CALL[], 42, 18, 1, 1, 140, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 34, 53, 29, 32, 19, 87
SHC[2], 1
SHC[2], 2*/




SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 42
MDRP[m&gt;RWh], 54

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="366">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x215 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 407, -10, 28


/*SVTCA[Y]
CALL[], 51, 5, 1, 1, 127, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 42, 50, 14, 36, 9, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 39
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="367">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x216 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 678, 165, 25


/*SVTCA[Y]
CALL[], 42, 18, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 35, 41, 29, 34, 19, 87
SHC[2], 1*/




SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]








</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="368">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x217 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 406, -86, -2


/*SVTCA[Y]
CALL[], 39, 5, 1, 1, 129, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 38, 14, 39, 9, 87
SHC[2], 2*/





SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="369">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x218 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0
OFFSET[R], 683, -9, -37


/*SVTCA[Y]
CALL[], 55, 41, 1, 1, -152, 86
SHC[2], 1
SVTCA[X]
CALL[], 52, 58, 0, 27, 38, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="370">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x219 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 411, -184, 12


/*SVTCA[Y]
CALL[], 55, 43, 1, 1, -130, 86
SHC[2], 1
SVTCA[X]
CALL[], 52, 58, 0, 18, 23, 87
SHC[2], 1*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="371">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x21a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0
OFFSET[R], 683, 57, -18


/*SVTCA[Y]
CALL[], 29, 12, 1, 1, -155, 86
SHC[2], 1
SVTCA[X]
CALL[], 26, 32, 13, 14, 2, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="372">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x21b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 86, 0, 0
OFFSET[R], 411, -283, -26


/*SVTCA[Y]
CALL[], 28, 0, 1, 1, -168, 86
SHC[2], 2
SVTCA[X]
CALL[], 25, 31, 4, 9, 14, 87
SHC[2], 2*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="373">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x22a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 692, 170, 7
OFFSET[R], 696, 214, 388


/*SVTCA[Y]
CALL[], 33, 3, 1, 1, 121, 86
SHC[2], 2
SHC[2], 3
CALL[], 48, 27, 1, 1, 180, 86
SHC[2], 4
SVTCA[X]
CALL[], 24, 42, 11, 39, 5, 87
SHC[2], 2
SHC[2], 3
CALL[], 48, 50, 24, 36, 42, 87
SHC[2], 4*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 45
MDRP[m&gt;RWh], 33
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="374">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x22b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 401, -32, -18
OFFSET[R], 398, 37, 354


/*SVTCA[Y]
CALL[], 33, 3, 1, 1, 136, 86
SHC[2], 2
SHC[2], 3
CALL[], 48, 39, 1, 1, 157, 86
SHC[2], 4
SVTCA[X]
CALL[], 36, 30, 11, 43, 5, 87
SHC[2], 2
SHC[2], 3
CALL[], 48, 50, 36, 38, 30, 87
SHC[2], 4*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 45
MDRP[m&gt;RWh], 33
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="375">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x22c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 697, 162, 8
OFFSET[R], 696, 238, 395


/*SVTCA[Y]
CALL[], 40, 3, 1, 1, 120, 86
SHC[2], 2
CALL[], 50, 27, 1, 1, 150, 86
SHC[2], 3
SVTCA[X]
CALL[], 24, 37, 11, 40, 5, 87
SHC[2], 2
CALL[], 50, 52, 24, 38, 37, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 40
MDRP[m&gt;RWh], 50

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="376">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x22d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 397, -59, -4
OFFSET[R], 398, 37, 354


/*SVTCA[Y]
CALL[], 40, 3, 1, 1, 117, 86
SHC[2], 2
CALL[], 50, 27, 1, 1, 133, 86
SHC[2], 3
SVTCA[X]
CALL[], 24, 37, 11, 42, 5, 87
SHC[2], 2
CALL[], 50, 52, 24, 39, 37, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 40
MDRP[m&gt;RWh], 50

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="377">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x230 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 693, 224, 4
OFFSET[R], 696, 295, 377


/*SVTCA[Y]
CALL[], 33, 3, 1, 1, 129, 86
SHC[2], 2
CALL[], 36, 27, 1, 1, 149, 86
SHC[2], 3
SVTCA[X]
CALL[], 24, 30, 11, 41, 5, 87
SHC[2], 2
CALL[], 36, 38, 24, 52, 30, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 33
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="378">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x231 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 400, -51, -9
OFFSET[R], 398, 37, 354


/*SVTCA[Y]
CALL[], 33, 3, 1, 1, 126, 86
SHC[2], 2
CALL[], 36, 27, 1, 1, 158, 86
SHC[2], 3
SVTCA[X]
CALL[], 24, 30, 11, 42, 5, 87
SHC[2], 2
CALL[], 36, 38, 24, 54, 30, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 33
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="379">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x232 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 670, 3, -39


/*SVTCA[Y]
CALL[], 25, 1, 1, 1, 155, 86
SHC[2], 1
SVTCA[X]
CALL[], 25, 27, 20, 33, 11, 87
SHC[2], 1*/





SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 25

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="380">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x233 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 398, -99, -12


/*SVTCA[Y]
CALL[], 36, 13, 1, 1, 169, 86
SHC[2], 1
SVTCA[X]
CALL[], 36, 38, 0, 47, 28, 87
SHC[2], 1*/




SVTCA[Y]
CALL[], 13, 6, 114
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="381">
      <instructions>
        <talk>/* VTTTalk glyph 381, char 0x259 */
/* GUI generated Mon Oct  5 12:27:59 2020 */

/* Y direction */
ResYAnchor(3,11)
YShift(3,23)
ResYAnchor(37,7)
YShift(37,29)
YIPAnchor(3,16,37)
YShift(16,11)
YShift(11,26)
YShift(26,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 381, char 0x259 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 11, 114
SHP[2], 23
CALL[], 37, 7, 114
SHP[2], 29
SRP2[], 3
IP[], 16
MDAP[R], 16
SHP[1], 11
SRP1[], 11
SHP[1], 26
SRP1[], 26
SHP[1], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="382">
      <instructions>
        <talk>/* VTTTalk glyph 382, char 0x2b9 */
/* GUI generated Mon Sep 28 17:16:18 2020 */

/* Y direction */
YAnchor(2)
YDist(2,0,&gt;=2)
YShift(2,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 382, char 0x2b9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 2
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[1], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="383">
      <instructions>
        <talk>/* VTTTalk glyph 383, char 0x2ba */
/* GUI generated Mon Sep 28 17:16:13 2020 */

/* Y direction */
YAnchor(2)
YShift(2,3)
YDist(2,0,&gt;=)
YShift(0,4)
YShift(2,6)
YAnchor(6)
YShift(6,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 383, char 0x2ba */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
MDRP[m&gt;RBl], 0
SHP[2], 4
SHP[1], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="384">
      <instructions>
        <talk>/* VTTTalk glyph 384, char 0x2bc */
/* GUI generated Mon Sep 28 17:17:40 2020 */

/* Y direction */
YAnchor(9,3)
YDist(9,15,&gt;=3)
YShift(15,0)
YInterpolate(15,3,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 384, char 0x2bc */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 9, 3
SMD[], 192
MDRP[m&gt;RGr], 15
SHP[2], 0
IP[], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="385">
      <instructions>
        <talk>/* VTTTalk glyph 385, char 0x2c6 */
/* GUI generated Mon Sep 28 17:18:19 2020 */

/* Y direction */
YAnchor(7)
YShift(7,8)
YDist(7,0,&gt;=)
YInterpolate(0,6,7)
YShift(7,5)
YShift(5,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 385, char 0x2c6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 7
SHP[1], 8
MDRP[m&gt;RBl], 0
IP[], 6
SHP[1], 5
SRP1[], 5
SHP[1], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="386">
      <instructions>
        <talk>/* VTTTalk glyph 386, char 0x2c7 */
/* GUI generated Thu Oct  1 11:10:39 2020 */

/* Y direction */
YAnchor(0)
YDist(0,5,&gt;=2)
YShift(5,4)
YInterpolate(0,6,5)
YShift(5,7)
YAnchor(7)
YShift(7,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 386, char 0x2c7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 5
SHP[2], 4
IP[], 6
SHP[2], 7
MDAP[R], 7
SHP[1], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="387">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2c9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 112, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="388">
      <instructions>
        <talk>/* VTTTalk glyph 388, char 0x2d8 */
/* GUI generated Thu Oct  1 11:11:17 2020 */

/* Y direction */
YAnchor(4)
YShift(4,11)
YDist(4,8,&gt;=2)
YShift(8,7)
YShift(8,0)
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 388, char 0x2d8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 11
SMD[], 128
MDRP[m&gt;RGr], 8
SHP[2], 7
SHP[2], 0
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="389">
      <instructions>
        <talk>/* VTTTalk glyph 389, char 0x2d9 */
/* GUI generated Mon Sep 28 17:06:43 2020 */

/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 389, char 0x2d9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="390">
      <instructions>
        <talk>/* VTTTalk glyph 390, char 0x2da */
/* GUI generated Thu Oct  1 11:19:01 2020 */

/* Y direction */
YAnchor(9)
YShift(9,15)
YDist(9,3,&gt;=2)
YShift(3,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 390, char 0x2da */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 15
SMD[], 128
MDRP[m&gt;RGr], 3
SHP[2], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="391">
      <instructions>
        <talk>/* VTTTalk glyph 391, char 0x2db */
/* GUI generated Tue Oct  6 14:19:41 2020 */

/* Y direction */
YAnchor(17)
YDist(17,10,&gt;=3)
YShift(10,3)
YShift(17,18)
YShift(18,19)
YShift(19,20)
YShift(20,21)
YShift(21,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 391, char 0x2db */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 17
SMD[], 192
MDRP[m&gt;RGr], 10
SHP[2], 3
SHP[1], 18
SRP1[], 18
SHP[1], 19
SRP1[], 19
SHP[1], 20
SRP1[], 20
SHP[1], 21
SRP1[], 21
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="392">
      <instructions>
        <talk>/* VTTTalk glyph 392, char 0x2dc */
/* GUI generated Mon Sep 28 14:32:03 2020 */

/* Y direction */
YAnchor(16)
YShift(16,9)
YDist(16,3,&gt;=2)
YShift(3,22)
YShift(3,12)
YAnchor(12)
YShift(12,13)
YShift(16,25)
YAnchor(25)
YShift(25,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 392, char 0x2dc */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 16
SHP[1], 9
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[2], 22
SHP[2], 12
MDAP[R], 12
SHP[1], 13
SRP1[], 16
SHP[1], 25
MDAP[R], 25
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="393">
      <instructions>
        <talk>/* VTTTalk glyph 393, char 0x2dd */
/* GUI generated Thu Oct  1 11:20:59 2020 */

/* Y direction */
YAnchor(11)
YShift(11,0)
YDist(11,4,&gt;=2)
YShift(4,16)
YAnchor(16)
YShift(11,23)
YAnchor(23)
YShift(23,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 393, char 0x2dd */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 0
SMD[], 128
MDRP[m&gt;RBl], 4
SHP[2], 16
MDAP[R], 16
SRP1[], 11
SHP[1], 23
MDAP[R], 23
SHP[1], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="394">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x300 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 66, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="395">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x301 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 117, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="396">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x302 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 385, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="397">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x303 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 392, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="398">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x304 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 112, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="399">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x306 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 388, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="400">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x307 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 389, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="401">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x308 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 105, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="402">
      <instructions>
        <talk>/* VTTTalk glyph 402, char 0xffff */
/* GUI generated Mon Oct  5 11:13:08 2020 */

/* Y direction */
YAnchor(28)
YDist(28,17,&gt;=3)
YShift(17,10)
YShift(28,23)
YShift(23,4)
YShift(4,1)
YShift(23,26)
YShift(26,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 402, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 28
SMD[], 192
MDRP[m&gt;RGr], 17
SHP[2], 10
SHP[1], 23
SRP1[], 23
SHP[1], 4
SRP1[], 4
SHP[1], 1
SRP1[], 23
SHP[1], 26
SRP1[], 26
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="403">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x30a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 390, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="404">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x30b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 393, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="405">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x30c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 386, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="406">
      <instructions>
        <talk>/* VTTTalk glyph 406, char 0xffff */
/* GUI generated Thu Oct  1 14:38:40 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,4,&gt;=2)
YShift(4,11)
YShift(0,8)
YShift(8,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 406, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SMD[], 128
MDRP[m&gt;RGr], 4
SHP[2], 11
SHP[1], 8
SRP1[], 8
SHP[1], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="407">
      <instructions>
        <talk>/* VTTTalk glyph 407, char 0xffff */
/* GUI generated Thu Oct  1 14:35:24 2020 */

/* Y direction */
YAnchor(8)
YShift(8,7)
YDist(8,2,&gt;=2)
YShift(2,14)
YShift(8,20)
YAnchor(20)
YShift(20,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 407, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 7
SMD[], 128
MDRP[m&gt;RBl], 2
SHP[2], 14
SHP[1], 20
MDAP[R], 20
SHP[1], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="408">
      <instructions>
        <talk>/* VTTTalk glyph 408, char 0xffff */
/* GUI generated Tue Oct  6 14:15:20 2020 */

/* Y direction */
YAnchor(16)
YShift(16,3)
YDist(16,9,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 408, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 16
SHP[1], 3
MDRP[m&gt;RGr], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="409">
      <instructions>
        <talk>/* VTTTalk glyph 409, char 0xffff */
/* GUI generated Mon Oct  5 11:16:58 2020 */

/* Y direction */
YAnchor(3)
YShift(3,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 409, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="410">
      <instructions>
        <talk>/* VTTTalk glyph 410, char 0xffff */
/* GUI generated Tue Oct  6 14:15:51 2020 */

/* Y direction */
YAnchor(15)
YShift(15,21)
YShift(15,3)
YAnchor(3)
YShift(3,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 410, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 15
SHP[1], 21
SHP[1], 3
MDAP[R], 3
SHP[1], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="411">
      <instructions>
        <talk>/* VTTTalk glyph 411, char 0xffff */
/* GUI generated Tue Oct  6 14:16:37 2020 */

/* Y direction */
YAnchor(9)
YDist(9,15,&gt;=)
YInterpolate(15,0,3,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 411, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RGr], 15
IP[], 0
IP[], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="412">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x327 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 121, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="413">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x328 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 391, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="414">
      <instructions>
        <talk>/* VTTTalk glyph 414, char 0xffff */
/* GUI generated Tue Oct  6 14:18:10 2020 */

/* Y direction */
YDownToGrid(8)
YAnchor(8)
YShift(8,7)
YShift(8,0)
YAnchor(0)
YShift(0,1)
YDist(8,4,&gt;=2)
YShift(4,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 414, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
RUTG[]
MDAP[R], 8
SHP[1], 7
SHP[1], 0
RTG[]
MDAP[R], 0
SHP[2], 1
SMD[], 128
SRP0[], 8
MDRP[m&gt;RGr], 4
SHP[2], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="415">
      <instructions>
        <talk>/* VTTTalk glyph 415, char 0xffff */
/* GUI generated Tue Oct  6 14:18:26 2020 */

/* Y direction */
YAnchor(1)
YShift(1,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 415, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="416">
      <instructions>
        <talk>/* VTTTalk glyph 416, char 0x374 */
/* GUI generated Tue Oct  6 14:18:56 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,2,&gt;=)
YShift(2,3)
YShift(3,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 416, char 0x374 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
MDRP[m&gt;RBl], 2
SHP[2], 3
SRP1[], 3
SHP[1], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="417">
      <instructions>
        <talk>/* VTTTalk glyph 417, char 0x375 */
/* GUI generated Tue Oct  6 14:20:20 2020 */

/* Y direction */
YAnchor(3)
YShift(3,4)
YDist(3,0,&gt;=)
YShift(0,1)
YShift(1,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 417, char 0x375 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
MDRP[m&gt;RBl], 0
SHP[2], 1
SRP1[], 1
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="418">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x37e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 29, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="419">
      <instructions>
        <talk>/* VTTTalk glyph 419, char 0x384 */
/* GUI generated Mon Oct  5 13:02:28 2020 */

/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 419, char 0x384 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="420">
      <instructions>
        <talk>/* VTTTalk glyph 420, char 0x385 */
/* GUI generated Thu Oct  1 12:42:37 2020 */

/* Y direction */
YAnchor(21)
YShift(21,15)
YShift(21,9)
YAnchor(9)
YShift(9,3)
YShift(9,24)
YAnchor(24)
YDist(24,26,&gt;=2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 420, char 0x385 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 21
SHP[1], 15
SHP[1], 9
MDAP[R], 9
SHP[1], 3
SHP[1], 24
MDAP[R], 24
SMD[], 128
MDRP[m&gt;RBl], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="421">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x386 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 430, 0, 0
OFFSET[R], 688, -194, 0


SVTCA[Y]
CALL[], 30, 4, 1, 0, 0, 86
SHC[2], 3


/*SVTCA[X]
CALL[], 29, 32, 0, 27, 8, 87
SHC[2], 3*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="422">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x387 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 120, 46, 235
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="423">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x388 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 434, 585, 0
OFFSET[R], 688, -221, 0


SVTCA[Y]
CALL[], 30, 6, 0, 0, 10, 86
SHC[2], 2

/*SVTCA[X]
CALL[], 32, 5, 1, 1, -183, 86
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="424">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x389 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 436, 545, 0
OFFSET[R], 688, -221, 0



SVTCA[Y]
CALL[], 36, 6, 0, 0, 10, 86
SHC[2], 3


/*SVTCA[X]
CALL[], 38, 5, 1, 1, -144, 86
SHC[2], 3*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="425">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x38a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 438, 545, 0
OFFSET[R], 688, -221, 0


SVTCA[Y]
CALL[], 16, 6, 0, 0, 10, 86
SHC[2], 1


/*SVTCA[X]
CALL[], 18, 5, 1, 1, -153, 86
SHC[2], 1*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="426">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x38c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 444, 383, 0
OFFSET[R], 688, -221, 0



SVTCA[Y]
CALL[], 26, 3, 0, 0, 0, 86
SHC[2], 2



/*SVTCA[X]
CALL[], 25, 28, 11, 0, 5, 87
SHC[2], 2*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="427">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x38e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 449, 635, 0
OFFSET[R], 688, -221, 0


SVTCA[Y]
CALL[], 27, 1, 0, 0, 10, 86
SHC[2], 1

/*SVTCA[X]
CALL[], 29, 20, 1, 1, -230, 86
SHC[2], 1*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="428">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x38f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 453, 383, 0
OFFSET[R], 688, -221, 0


SVTCA[Y]
CALL[], 40, 11, 0, 0, 0, 86
SHC[2], 1


/*SVTCA[X]
CALL[], 39, 42, 1, 2, 14, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="429">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x390 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 469, 0, 0
OFFSET[R], 420, -407, 0


/*SVTCA[Y]
CALL[], 19, 4, 1, 1, 158, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 22, 16, 1, 48, 9, 87
SHC[2], 1
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 4, 6, 114
MDRP[m&gt;RWh], 19
MDRP[m&gt;RWh], 31
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="430">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x391 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="431">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x392 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 36, 3, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="432">
      <instructions>
        <talk>/* VTTTalk glyph 432, char 0x393 */
/* GUI generated Mon Sep 28 11:21:51 2020 */

/* Y direction */
ResYAnchor(0,8)
ResYAnchor(6,2)
YShift(6,9)
YAnchor(9)
YShift(6,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 432, char 0x393 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 6, 2, 114
SHP[2], 9
MDAP[R], 9
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="433">
      <instructions>
        <talk>/* VTTTalk glyph 433, char 0x394 */
/* GUI generated Mon Sep 28 11:22:40 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,9)
ResYAnchor(3,3)
YShift(3,4)
YInterpolate(0,12,13,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 433, char 0x394 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 9
CALL[], 3, 3, 114
SHP[2], 4
SRP2[], 0
IP[], 12
IP[], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="434">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x395 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="435">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x396 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="436">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x397 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="437">
      <instructions>
        <talk>/* VTTTalk glyph 437, char 0x398 */
/* GUI generated Thu Oct  8 16:11:22 2020 */

/* Y direction */
ResYAnchor(9,3)
YShift(9,27)
ResYAnchor(15,9)
YShift(15,21)
YIPAnchor(9,5,15)
YShift(5,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 437, char 0x398 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 9, 3, 114
SHP[2], 27
CALL[], 15, 9, 114
SHP[2], 21
SRP2[], 9
IP[], 5
MDAP[R], 5
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="438">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x399 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="439">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x39a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="440">
      <instructions>
        <talk>/* VTTTalk glyph 440, char 0x39b */
/* GUI generated Mon Sep 28 11:23:30 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,10)
YAnchor(10)
YAnchor(4,2)
YInterpolate(0,14,15,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 440, char 0x39b */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 10
MDAP[R], 10
MIAP[R], 4, 2
IP[], 14
IP[], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="441">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x39c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="442">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x39d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="443">
      <instructions>
        <talk>/* VTTTalk glyph 443, char 0x39e */
/* GUI generated Mon Sep 28 11:24:14 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,3)
YShift(0,1)
YAnchor(1)
YShift(1,5)
ResYAnchor(23,2)
YShift(23,28)
YIPAnchor(23,21,0)
YShift(21,14)
YShift(23,22)
YAnchor(22)
YShift(22,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 443, char 0x39e */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 3
SHP[2], 1
MDAP[R], 1
SHP[1], 5
CALL[], 23, 2, 114
SHP[2], 28
SRP1[], 0
IP[], 21
MDAP[R], 21
SHP[1], 14
SHP[2], 22
MDAP[R], 22
SHP[1], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="444">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x39f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="445">
      <instructions>
        <talk>/* VTTTalk glyph 445, char 0x3a0 */
/* GUI generated Mon Sep 28 11:24:37 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,14)
YAnchor(14)
ResYAnchor(6,2)
YShift(6,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 445, char 0x3a0 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 14
MDAP[R], 14
CALL[], 6, 2, 114
SHP[2], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="446">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3a1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 50, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="447">
      <instructions>
        <talk>/* VTTTalk glyph 447, char 0x3a3 */
/* GUI generated Mon Sep 28 11:25:41 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,14)
YShift(0,16)
YAnchor(16)
ResYAnchor(4,2)
YShift(4,7)
YAnchor(7)
YShift(4,9)
YInterpolate(0,2,11,12,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 447, char 0x3a3 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 14
SHP[2], 16
MDAP[R], 16
CALL[], 4, 2, 114
SHP[2], 7
MDAP[R], 7
SHP[2], 9
SRP1[], 0
SLOOP[], 3
IP[], 2, 11, 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="448">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3a4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="449">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3a5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="450">
      <instructions>
        <talk>/* VTTTalk glyph 450, char 0x3a6 */
/* GUI generated Mon Sep 28 11:26:51 2020 */

/* Y direction */
ResYAnchor(0,8)
ResYAnchor(6,2)
YIPAnchor(0,14,20,6)
YShift(14,34)
YShift(14,27)
YShift(27,35)
YShift(20,28)
YShift(20,21)
YShift(21,41)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 450, char 0x3a6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 6, 2, 114
SRP2[], 0
IP[], 14
IP[], 20
MDAP[R], 14
MDAP[R], 20
SRP1[], 14
SHP[1], 34
SHP[1], 27
SRP1[], 27
SHP[1], 35
SRP1[], 20
SHP[1], 28
SHP[1], 21
SRP1[], 21
SHP[1], 41
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="451">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3a7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="452">
      <instructions>
        <talk>/* VTTTalk glyph 452, char 0x3a8 */
/* GUI generated Mon Sep 28 11:51:12 2020 */

/* Y direction */
ResYAnchor(0,8)
ResYAnchor(20,2)
YShift(20,7)
YAnchor(7)
YShift(20,33)
YAnchor(33)
YIPAnchor(0,14,20)
YShift(14,27)
YShift(14,26)
YShift(26,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 452, char 0x3a8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 20, 2, 114
SHP[2], 7
MDAP[R], 7
SHP[2], 33
MDAP[R], 33
SRP1[], 0
IP[], 14
MDAP[R], 14
SHP[1], 27
SHP[1], 26
SRP1[], 26
SHP[1], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="453">
      <instructions>
        <talk>/* VTTTalk glyph 453, char 0x3a9 */
/* GUI generated Mon Sep 28 11:52:06 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,1)
YAnchor(1)
YShift(1,20)
YAnchor(20)
YShift(0,4)
YShift(4,5)
YShift(5,36)
YShift(0,23)
YAnchor(23)
YShift(23,18)
YShift(18,17)
YShift(17,24)
ResYAnchor(11,2)
YShift(11,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 453, char 0x3a9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 1
MDAP[R], 1
SHP[1], 20
MDAP[R], 20
SHP[2], 4
SRP1[], 4
SHP[1], 5
SRP1[], 5
SHP[1], 36
SHP[2], 23
MDAP[R], 23
SHP[1], 18
SRP1[], 18
SHP[1], 17
SRP1[], 17
SHP[1], 24
CALL[], 11, 2, 114
SHP[2], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="454">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3aa */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 144, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="455">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3ab */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 313, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="456">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3ac */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 461, 0, 0
OFFSET[R], 419, 59, 0


/*SVTCA[Y]
CALL[], 39, 6, 1, 1, 139, 86
SHC[2], 1
SVTCA[X]
CALL[], 40, 43, 3, 41, 12, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 6, 7, 114
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="457">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3ad */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 465, 0, 0
OFFSET[R], 419, 38, 0


/*SVTCA[Y]
CALL[], 49, 21, 1, 0, 267, 86
SHC[2], 1
SVTCA[X]
CALL[], 50, 53, 11, -1197, 35, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 32, 7, 114
MDRP[m&gt;RWh], 49

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="458">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3ae */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 467, 0, 0
OFFSET[R], 419, -27, 0


/*SVTCA[Y]
CALL[], 29, 23, 1, 1, 133, 86
SHC[2], 1
SVTCA[X]
CALL[], 30, 33, 17, 39, 25, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 23, 7, 114
MDRP[m&gt;RWh], 29

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="459">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3af */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 469, 0, 0
OFFSET[R], 419, -215, 0


/*SVTCA[Y]
CALL[], 10, 4, 1, 1, 155, 86
SHC[2], 1
SVTCA[X]
CALL[], 11, 14, 1, 59, 9, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 4, 6, 114
MDRP[m&gt;RWh], 10

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="460">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3b0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 420, -176, 0


/*SVTCA[Y]
CALL[], 36, 21, 1, 1, 120, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 39, 33, 7, 40, 24, 87
SHC[2], 1
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 21, 7, 114
MDRP[m&gt;RWh], 48
MDRP[m&gt;RWh], 36
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="461">
      <instructions>
        <talk>/* VTTTalk glyph 461, char 0x3b1 */
/* GUI generated Thu Oct  1 12:44:59 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,26)
YShift(0,14)
YAnchor(14)
YShift(14,11)
ResYAnchor(6,7)
YShift(6,20)
YInterpolate(0,17,36,9,29,6)
ResYAnchor(32,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 461, char 0x3b1 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 26
SHP[2], 14
MDAP[R], 14
SHP[1], 11
CALL[], 6, 7, 114
SHP[2], 20
SRP2[], 0
SLOOP[], 4
IP[], 17, 36, 9, 29
CALL[], 32, 6, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="462">
      <instructions>
        <talk>/* VTTTalk glyph 462, char 0x3b2 */
/* GUI generated Thu Oct  1 12:49:35 2020 */

/* Y direction */
ResYAnchor(0,14)
YAnchor(44)
YShift(44,6)
YIPAnchor(44,27,0)
YInterpolate(44,34,12,13,37,27)
YShift(27,19)
YShift(19,22)
YShift(22,24)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 462, char 0x3b2 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 14, 114
MDAP[R], 44
SHP[1], 6
IP[], 27
MDAP[R], 27
SRP2[], 44
SLOOP[], 4
IP[], 34, 12, 13, 37
SHP[1], 19
SRP1[], 19
SHP[1], 22
SRP1[], 22
SHP[1], 24
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="463">
      <instructions>
        <talk>/* VTTTalk glyph 463, char 0x3b3 */
/* GUI generated Thu Oct  1 12:50:36 2020 */

/* Y direction */
ResYAnchor(0,14)
ResYAnchor(18,6)
YInterpolate(0,12,27,3,18)
YShift(18,6)
YAnchor(6)
YShift(6,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 463, char 0x3b3 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 14, 114
CALL[], 18, 6, 114
SRP2[], 0
SLOOP[], 3
IP[], 12, 27, 3
SHP[1], 6
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="464">
      <instructions>
        <talk>/* VTTTalk glyph 464, char 0x3b4 */
/* GUI generated Thu Oct  1 12:51:14 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,14)
YAnchor(26)
YShift(26,32)
YAnchor(32)
YShift(26,37)
YInterpolate(0,8,20,6,7,43,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 464, char 0x3b4 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 14
MDAP[R], 26
SHP[1], 32
MDAP[R], 32
SRP1[], 26
SHP[1], 37
SLOOP[], 5
IP[], 8, 20, 6, 7, 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="465">
      <instructions>
        <talk>/* VTTTalk glyph 465, char 0x3b5 */
/* GUI generated Thu Oct  1 12:52:10 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,8)
ResYAnchor(32,6)
YShift(32,21)
YIPAnchor(0,5,26,32)
YInterpolate(5,39,14,15,42,26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 465, char 0x3b5 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 8
CALL[], 32, 6, 114
SHP[2], 21
SRP2[], 0
IP[], 5
IP[], 26
MDAP[R], 5
MDAP[R], 26
SRP2[], 5
SLOOP[], 4
IP[], 39, 14, 15, 42
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="466">
      <instructions>
        <talk>/* VTTTalk glyph 466, char 0x3b6 */
/* GUI generated Thu Oct  1 12:54:02 2020 */

/* Y direction */
YAnchor(12)
YShift(12,9)
YShift(9,8)
YShift(9,10)
YShift(9,14)
YAnchor(23,14)
YInterpolate(23,1,22,21,20,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 466, char 0x3b6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 12
SHP[1], 9
SRP1[], 9
SHP[1], 8
SHP[1], 10
SHP[1], 14
MIAP[R], 23, 14
SRP2[], 12
SLOOP[], 4
IP[], 1, 22, 21, 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="467">
      <instructions>
        <talk>/* VTTTalk glyph 467, char 0x3b7 */
/* GUI generated Thu Oct  1 12:54:32 2020 */

/* Y direction */
ResYAnchor(0,14)
YAnchor(12,10)
ResYAnchor(23,7)
YShift(23,18)
YAnchor(18)
YShift(23,6)
YShift(6,20)
YShift(20,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 467, char 0x3b7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 14, 114
MIAP[R], 12, 10
CALL[], 23, 7, 114
SHP[2], 18
MDAP[R], 18
SHP[2], 6
SRP1[], 6
SHP[1], 20
SRP1[], 20
SHP[1], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="468">
      <instructions>
        <talk>/* VTTTalk glyph 468, char 0x3b8 */
/* GUI generated Thu Oct  1 13:32:46 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,14)
YAnchor(33)
YShift(33,20)
YInterpolate(0,27,33)
YShift(27,26)
YShift(27,8)
YAnchor(8)
YShift(8,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 468, char 0x3b8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 14
MDAP[R], 33
SHP[1], 20
IP[], 27
SRP1[], 27
SHP[1], 26
SHP[1], 8
MDAP[R], 8
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="469">
      <instructions>
        <talk>/* VTTTalk glyph 469, char 0x3b9 */
/* GUI generated Thu Oct  1 13:32:59 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,7)
ResYAnchor(4,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 469, char 0x3b9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 7
CALL[], 4, 6, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="470">
      <instructions>
        <talk>/* VTTTalk glyph 470, char 0x3ba */
/* GUI generated Thu Oct  1 13:33:39 2020 */

/* Y direction */
ResYAnchor(0,10)
ResYAnchor(12,7)
YShift(12,3)
YAnchor(3)
ResYAnchor(18,11)
YShift(18,22)
YInterpolate(18,7,8,20,21,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 470, char 0x3ba */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 12, 7, 114
SHP[2], 3
MDAP[R], 3
CALL[], 18, 11, 114
SHP[2], 22
SRP1[], 12
SLOOP[], 4
IP[], 7, 8, 20, 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="471">
      <instructions>
        <talk>/* VTTTalk glyph 471, char 0x3bb */
/* GUI generated Thu Oct  1 13:35:05 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,9)
YShift(0,12)
YAnchor(12)
YAnchor(6)
YShift(6,3)
YInterpolate(0,16,15,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 471, char 0x3bb */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 9
SHP[2], 12
MDAP[R], 12
MDAP[R], 6
SHP[1], 3
IP[], 16
IP[], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="472">
      <instructions>
        <talk>/* VTTTalk glyph 472, char 0x3bc */
/* GUI generated Thu Oct  1 13:35:37 2020 */

/* Y direction */
ResYAnchor(0,14)
ResYAnchor(4,6)
YShift(4,14)
YAnchor(14)
YAnchor(23,10)
YShift(23,12)
ResYAnchor(26,11)
YShift(26,9)
YShift(9,22)
YShift(26,20)
YAnchor(20)
YShift(20,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 472, char 0x3bc */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 14, 114
CALL[], 4, 6, 114
SHP[2], 14
MDAP[R], 14
MIAP[R], 23, 10
SHP[1], 12
CALL[], 26, 11, 114
SHP[2], 9
SRP1[], 9
SHP[1], 22
SHP[2], 20
MDAP[R], 20
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="473">
      <instructions>
        <talk>/* VTTTalk glyph 473, char 0x3bd */
/* GUI generated Thu Oct  1 13:36:35 2020 */

/* Y direction */
ResYAnchor(1,10)
YShift(1,0)
YAnchor(19)
YShift(19,6)
YAnchor(6)
YShift(6,3)
YInterpolate(19,10,9,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 473, char 0x3bd */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 10, 114
SHP[2], 0
MDAP[R], 19
SHP[1], 6
MDAP[R], 6
SHP[1], 3
SRP1[], 19
IP[], 10
IP[], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="474">
      <instructions>
        <talk>/* VTTTalk glyph 474, char 0x3be */
/* GUI generated Thu Oct  1 13:37:09 2020 */

/* Y direction */
YAnchor(0)
YAnchor(19)
YShift(19,21)
YInterpolate(0,32,10,33,34,11,35,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 474, char 0x3be */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 19
SHP[1], 21
SLOOP[], 6
IP[], 32, 10, 33, 34, 11, 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="475">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3bf */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="476">
      <instructions>
        <talk>/* VTTTalk glyph 476, char 0x3c0 */
/* GUI generated Thu Oct  1 13:39:03 2020 */

/* Y direction */
YAnchor(4,7)
YShift(4,3)
YShift(4,0)
YShift(0,1)
YAnchor(6,10)
YAnchor(13,11)
YShift(13,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 476, char 0x3c0 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 4, 7
SHP[1], 3
SHP[1], 0
SHP[2], 1
MIAP[R], 6, 10
MIAP[R], 13, 11
SHP[1], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="477">
      <instructions>
        <talk>/* VTTTalk glyph 477, char 0x3c1 */
/* GUI generated Thu Oct  1 13:39:18 2020 */

/* Y direction */
ResYAnchor(0,14)
ResYAnchor(6,7)
YShift(6,26)
ResYAnchor(12,11)
YShift(12,20)
YShift(20,17)
YShift(17,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 477, char 0x3c1 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 14, 114
CALL[], 6, 7, 114
SHP[2], 26
CALL[], 12, 11, 114
SHP[2], 20
SRP1[], 20
SHP[1], 17
SRP1[], 17
SHP[1], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="478">
      <instructions>
        <talk>/* VTTTalk glyph 478, char 0x3c2 */
/* GUI generated Thu Oct  1 13:39:50 2020 */

/* Y direction */
YAnchor(0)
ResYAnchor(8,7)
YShift(8,14)
YAnchor(14)
YShift(8,19)
YInterpolate(0,1,25,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 478, char 0x3c2 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
CALL[], 8, 7, 114
SHP[2], 14
MDAP[R], 14
SHP[2], 19
SRP1[], 0
IP[], 1
IP[], 25
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="479">
      <instructions>
        <talk>/* VTTTalk glyph 479, char 0x3c3 */
/* GUI generated Thu Oct  1 13:40:07 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,16)
ResYAnchor(6,6)
YShift(6,10)
YAnchor(24,6)
YShift(24,23)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 479, char 0x3c3 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 16
CALL[], 6, 6, 114
SHP[2], 10
MIAP[R], 24, 6
SHP[1], 23
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="480">
      <instructions>
        <talk>/* VTTTalk glyph 480, char 0x3c4 */
/* GUI generated Thu Oct  1 13:40:40 2020 */

/* Y direction */
YAnchor(0,11)
YShift(0,6)
YAnchor(13,7)
YShift(13,9)
YShift(9,10)
YShift(13,12)
YShift(12,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 480, char 0x3c4 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 6
MIAP[R], 13, 7
SHP[1], 9
SRP1[], 9
SHP[1], 10
SRP1[], 13
SHP[1], 12
SRP1[], 12
SHP[1], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="481">
      <instructions>
        <talk>/* VTTTalk glyph 481, char 0x3c5 */
/* GUI generated Thu Oct  1 13:40:55 2020 */

/* Y direction */
ResYAnchor(0,10)
YShift(0,14)
ResYAnchor(21,7)
YShift(21,20)
YShift(21,8)
YAnchor(8)
YShift(8,5)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 481, char 0x3c5 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 14
CALL[], 21, 7, 114
SHP[2], 20
SHP[2], 8
MDAP[R], 8
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="482">
      <instructions>
        <talk>/* VTTTalk glyph 482, char 0x3c6 */
/* GUI generated Thu Oct  1 13:41:21 2020 */

/* Y direction */
ResYAnchor(0,14)
ResYAnchor(7,7)
YShift(7,20)
YShift(7,33)
YAnchor(33)
YShift(33,34)
ResYAnchor(13,11)
YShift(13,14)
YShift(13,27)
YShift(27,40)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 482, char 0x3c6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 14, 114
CALL[], 7, 7, 114
SHP[2], 20
SHP[2], 33
MDAP[R], 33
SHP[1], 34
CALL[], 13, 11, 114
SHP[2], 14
SHP[2], 27
SRP1[], 27
SHP[1], 40
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="483">
      <instructions>
        <talk>/* VTTTalk glyph 483, char 0x3c7 */
/* GUI generated Thu Oct  1 13:42:36 2020 */

/* Y direction */
ResYAnchor(7,7)
ResYAnchor(12,14)
YShift(12,1)
YAnchor(1)
ResYAnchor(16,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 483, char 0x3c7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 7, 7, 114
CALL[], 12, 14, 114
SHP[2], 1
MDAP[R], 1
CALL[], 16, 6, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="484">
      <instructions>
        <talk>/* VTTTalk glyph 484, char 0x3c8 */
/* GUI generated Thu Oct  1 13:43:32 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,13)
YShift(0,14)
YShift(14,15)
ResYAnchor(8,7)
YShift(8,5)
YShift(8,9)
YShift(8,33)
YAnchor(33)
ResYAnchor(22,7)
YShift(22,21)
ResYAnchor(28,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 484, char 0x3c8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 13
SHP[2], 14
SRP1[], 14
SHP[1], 15
CALL[], 8, 7, 114
SHP[2], 5
SHP[2], 9
SHP[2], 33
MDAP[R], 33
CALL[], 22, 7, 114
SHP[2], 21
CALL[], 28, 14, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="485">
      <instructions>
        <talk>/* VTTTalk glyph 485, char 0x3c9 */
/* GUI generated Thu Oct  1 13:47:03 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,13)
YShift(0,33)
YAnchor(33)
YShift(33,20)
ResYAnchor(27,7)
YShift(27,26)
YShift(27,6)
YAnchor(6)
YShift(6,7)
YIPAnchor(0,39,27)
YInterpolate(0,16,39)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 485, char 0x3c9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 13
SHP[2], 33
MDAP[R], 33
SHP[1], 20
CALL[], 27, 7, 114
SHP[2], 26
SHP[2], 6
MDAP[R], 6
SHP[1], 7
SRP1[], 0
IP[], 39
MDAP[R], 39
SRP2[], 0
IP[], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="486">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3ca */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 469, 0, 0
OFFSET[R], 105, -317, 0


/*SVTCA[Y]
CALL[], 19, 4, 1, 1, 170, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 22, 16, 1, 48, 9, 87
SHC[2], 1
SHC[2], 2*/




SVTCA[Y]
CALL[], 4, 6, 114
MDRP[m&gt;RWh], 19
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="487">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3cb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 105, -86, 0


/*SVTCA[Y]
CALL[], 36, 21, 1, 1, 132, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 39, 33, 7, 40, 24, 87
SHC[2], 1
SHC[2], 2*/



SVTCA[Y]
CALL[], 21, 7, 114
MDRP[m&gt;RWh], 36
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="488">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3cc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 475, 0, 0
OFFSET[R], 419, 35, 0


/*SVTCA[Y]
CALL[], 24, 3, 1, 1, 139, 86
SHC[2], 2
SVTCA[X]
CALL[], 25, 28, 11, 45, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="489">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3cd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 419, 16, 0


/*SVTCA[Y]
CALL[], 27, 21, 1, 1, 117, 86
SHC[2], 1
SVTCA[X]
CALL[], 28, 31, 7, 46, 24, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 21, 7, 114
MDRP[m&gt;RWh], 27

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="490">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x3ce */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 485, 0, 0
OFFSET[R], 419, 241, 0


/*SVTCA[Y]
CALL[], 44, 27, 1, 1, 117, 86
SHC[2], 1
SVTCA[X]
CALL[], 45, 48, 3, 43, 29, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 27, 7, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="491">
      <instructions>
        <talk>/* VTTTalk glyph 491, char 0x3cf */
/* GUI generated Mon Oct  5 13:08:19 2020 */

/* Y direction */
YAnchor(6,2)
YShift(6,18)
YAnchor(18)
YAnchor(13,8)
YInterpolate(13,14,15,22,23,6)
YShift(13,27)
YAnchor(27)
YShift(27,24)
YShift(27,38)
YDist(27,28,&gt;=)
YShift(28,35)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 491, char 0x3cf */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 18
MDAP[R], 18
MIAP[R], 13, 8
SRP2[], 6
SLOOP[], 4
IP[], 14, 15, 22, 23
SHP[1], 27
MDAP[R], 27
SHP[1], 24
SHP[1], 38
MDRP[m&gt;RGr], 28
SHP[2], 35
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="492">
      <instructions>
        <talk>/* VTTTalk glyph 492, char 0x3d7 */
/* GUI generated Mon Oct  5 13:09:31 2020 */

/* Y direction */
YAnchor(17,6)
YAnchor(20,10)
YInterpolate(20,21,22,34,35,17)
YShift(20,32)
YAnchor(32)
YShift(32,10)
YShift(32,36)
YDist(32,0,&gt;=)
YShift(0,7)
YAnchor(26,7)
YShift(26,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 492, char 0x3d7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 17, 6
MIAP[R], 20, 10
SRP2[], 17
SLOOP[], 4
IP[], 21, 22, 34, 35
SHP[1], 32
MDAP[R], 32
SHP[1], 10
SHP[1], 36
MDRP[m&gt;RGr], 0
SHP[2], 7
MIAP[R], 26, 7
SHP[1], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="493">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e80 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 666, 302, 48


/*SVTCA[Y]
CALL[], 47, 27, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 39, 46, 0, 33, 28, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="494">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e81 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 394, 110, 48


/*SVTCA[Y]
CALL[], 51, 17, 1, 1, 167, 86
SHC[2], 2
SVTCA[X]
CALL[], 43, 50, 1, 34, 32, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 2, 6, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="495">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e82 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 667, 294, 55


/*SVTCA[Y]
CALL[], 47, 17, 1, 1, 147, 86
SHC[2], 2
SVTCA[X]
CALL[], 36, 43, 0, 37, 28, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="496">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e83 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 395, 143, 28


/*SVTCA[Y]
CALL[], 51, 17, 1, 1, 147, 86
SHC[2], 2
SVTCA[X]
CALL[], 40, 47, 1, 40, 32, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 2, 6, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="497">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e84 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 673, 300, -18


/*SVTCA[Y]
CALL[], 45, 17, 1, 1, 140, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 36, 54, 0, 33, 28, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 57
MDRP[m&gt;RWh], 45

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="498">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1e85 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 401, 113, 0


/*SVTCA[Y]
CALL[], 49, 29, 1, 1, 129, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 52, 46, 1, 36, 32, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 2, 6, 114
MDRP[m&gt;RWh], 49
MDRP[m&gt;RWh], 61

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="499">
      <instructions>
        <talk>/* VTTTalk glyph 499, char 0x1e9e */
/* GUI generated Thu Oct  8 17:11:59 2020 */

/* Y direction */
YAnchor(1,14)
ResYAnchor(9,3)
YShift(9,49)
YShift(49,12)
YShift(49,14)
ResYAnchor(26,11)
YShift(26,30)
YAnchor(30)
YShift(26,33)
YAnchor(33)
YInterpolate(26,40,23,46,17,9)
YShift(26,37)
YShift(37,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 499, char 0x1e9e */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 1, 14
CALL[], 9, 3, 114
SHP[2], 49
SRP1[], 49
SHP[1], 12
SHP[1], 14
CALL[], 26, 11, 114
SHP[2], 30
MDAP[R], 30
SHP[2], 33
MDAP[R], 33
SRP1[], 9
SLOOP[], 4
IP[], 40, 23, 46, 17
SHP[2], 37
SRP1[], 37
SHP[1], 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="500">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 681, 92, 44


/*SVTCA[Y]
CALL[], 31, 10, 1, 1, -122, 86
SHC[2], 3
SVTCA[X]
CALL[], 28, 34, 0, 29, 8, 87
SHC[2], 3*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="501">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 409, -118, 8


/*SVTCA[Y]
CALL[], 40, 21, 1, 1, -149, 86
SHC[2], 2
SVTCA[X]
CALL[], 37, 43, 0, 19, 9, 87
SHC[2], 2*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="502">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 674, 179, 43


/*SVTCA[Y]
CALL[], 28, 4, 1, 1, 109, 86
SHC[2], 3
SVTCA[X]
CALL[], 43, 49, 0, 53, 8, 87
SHC[2], 3*/




SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="503">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 402, -77, 146


/*SVTCA[Y]
CALL[], 65, 6, 1, 1, 182, 86
SHC[2], 2
SVTCA[X]
CALL[], 51, 57, 0, 48, 9, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 65

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="504">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 691, 302, 41
OFFSET[R], 689, 593, 324


/*SVTCA[Y]
CALL[], 33, 4, 1, 1, 110, 86
SHC[2], 3
CALL[], 44, 28, 1, 0, -67, 86
SHC[2], 4
SVTCA[X]
CALL[], 36, 32, 0, 50, 8, 87
SHC[2], 3
CALL[], 45, 32, 1, 1, -95, 86
SHC[2], 4*/




SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="505">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 396, 28, 28
OFFSET[R], 395, 445, 319


/*SVTCA[Y]
CALL[], 42, 6, 1, 1, 183, 86
SHC[2], 2
CALL[], 60, 43, 0, 0, 74, 86
SHC[2], 3
SVTCA[X]
CALL[], 45, 41, 0, 49, 9, 87
SHC[2], 2
CALL[], 49, 41, 1, 1, -85, 86
SHC[2], 3*/




SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 60

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="506">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 691, 334, 39
OFFSET[R], 694, -138, 326


/*SVTCA[Y]
CALL[], 33, 4, 1, 1, 108, 86
SHC[2], 3
CALL[], 48, 28, 1, 0, -63, 86
SHC[2], 4
SVTCA[X]
CALL[], 36, 32, 0, 52, 8, 87
SHC[2], 3
CALL[], 47, 36, 1, 1, 160, 86
SHC[2], 4*/




SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="507">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 396, 28, 28
OFFSET[R], 394, -315, 319


/*SVTCA[Y]
CALL[], 42, 6, 1, 1, 183, 86
SHC[2], 2
CALL[], 60, 43, 0, 0, 74, 86
SHC[2], 3
SVTCA[X]
CALL[], 45, 41, 0, 49, 9, 87
SHC[2], 2
CALL[], 59, 45, 1, 1, 110, 86
SHC[2], 3*/




SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 60

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="508">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 668, 126, 29
OFFSET[R], 674, 596, 361


/*SVTCA[Y]
CALL[], 33, 4, 1, 1, 108, 86
SHC[2], 3
CALL[], 40, 28, 1, 0, -80, 86
SHC[2], 4
SVTCA[X]
CALL[], 36, 32, 0, 50, 8, 87
SHC[2], 3
CALL[], 55, 32, 1, 1, -80, 86
SHC[2], 4*/




SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="509">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ea9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 396, 28, 28
OFFSET[R], 402, 362, 448


/*SVTCA[Y]
CALL[], 42, 6, 1, 1, 183, 86
SHC[2], 2
CALL[], 77, 43, 0, 0, 86, 86
SHC[2], 3
SVTCA[X]
CALL[], 45, 41, 0, 49, 9, 87
SHC[2], 2
CALL[], 63, 41, 1, 0, -115, 86
SHC[2], 3*/




SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 77

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="510">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eaa */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 691, 299, -11
OFFSET[R], 697, 290, 332


/*SVTCA[Y]
CALL[], 33, 4, 1, 1, 58, 86
SHC[2], 3
CALL[], 56, 28, 1, 1, 61, 86
SHC[2], 4
SVTCA[X]
CALL[], 36, 32, 0, 50, 8, 87
SHC[2], 3
CALL[], 40, 53, 36, 43, 32, 87
SHC[2], 4*/






SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 56

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="511">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eab */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 396, 29, 6
OFFSET[R], 397, 161, 438


/*SVTCA[Y]
CALL[], 42, 6, 1, 1, 161, 86
SHC[2], 2
CALL[], 65, 37, 1, 1, 58, 86
SHC[2], 3
SVTCA[X]
CALL[], 45, 41, 0, 49, 9, 87
SHC[2], 2
CALL[], 49, 62, 45, 47, 41, 87
SHC[2], 3*/








SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 65

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="512">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eac */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 668, 136, 21
OFFSET[R], 681, 136, 47


/*SVTCA[Y]
CALL[], 33, 4, 1, 1, 100, 86
SHC[2], 3
CALL[], 43, 10, 1, 1, -119, 86
SHC[2], 4
SVTCA[X]
CALL[], 36, 32, 0, 51, 8, 87
SHC[2], 3
CALL[], 40, 46, 0, 31, 8, 87
SHC[2], 4*/



SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="513">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ead */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 396, 28, 28
OFFSET[R], 409, -43, 14


/*SVTCA[Y]
CALL[], 42, 6, 1, 1, 183, 86
SHC[2], 2
CALL[], 52, 21, 1, 1, -143, 86
SHC[2], 3
SVTCA[X]
CALL[], 45, 41, 0, 49, 9, 87
SHC[2], 2
CALL[], 49, 55, 0, 24, 9, 87
SHC[2], 3*/





SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="514">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eae */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 690, 230, 2
OFFSET[R], 689, 348, 494


/*SVTCA[Y]
CALL[], 32, 4, 1, 1, 111, 86
SHC[2], 3
CALL[], 46, 28, 1, 1, 88, 86
SHC[2], 4
SVTCA[X]
CALL[], 35, 29, 0, 53, 8, 87
SHC[2], 3
CALL[], 47, 42, 35, 43, 29, 87
SHC[2], 4*/




SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 32
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="515">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eaf */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 399, 7, -18
OFFSET[R], 395, 176, 420


/*SVTCA[Y]
CALL[], 41, 6, 1, 1, 167, 86
SHC[2], 2
CALL[], 62, 45, 1, 1, 85, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 38, 0, 51, 9, 87
SHC[2], 2
CALL[], 51, 58, 44, 48, 38, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 41
MDRP[m&gt;RWh], 62

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="516">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 690, 226, 10
OFFSET[R], 694, 208, 464


/*SVTCA[Y]
CALL[], 32, 4, 1, 1, 119, 86
SHC[2], 3
CALL[], 50, 28, 1, 1, 50, 86
SHC[2], 4
SVTCA[X]
CALL[], 35, 29, 0, 53, 8, 87
SHC[2], 3
CALL[], 42, 49, 35, 31, 29, 87
SHC[2], 4*/






SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 32
MDRP[m&gt;RWh], 50

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="517">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 399, -12, -2
OFFSET[R], 394, 17, 429


/*SVTCA[Y]
CALL[], 41, 6, 1, 1, 183, 86
SHC[2], 2
CALL[], 62, 37, 1, 1, 79, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 38, 0, 49, 9, 87
SHC[2], 2
CALL[], 54, 61, 44, 26, 38, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 41
MDRP[m&gt;RWh], 62

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="518">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 690, 226, 2
OFFSET[R], 695, 300, 459


/*SVTCA[Y]
CALL[], 32, 4, 1, 1, 111, 86
SHC[2], 3
CALL[], 42, 36, 1, 1, 70, 86
SHC[2], 4
SVTCA[X]
CALL[], 35, 29, 0, 53, 8, 87
SHC[2], 3
CALL[], 57, 63, 35, 43, 29, 87
SHC[2], 4*/





SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 32
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="519">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 399, 22, -2
OFFSET[R], 402, 54, 502


/*SVTCA[Y]
CALL[], 41, 6, 1, 1, 183, 86
SHC[2], 2
CALL[], 79, 45, 1, 1, 34, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 38, 0, 52, 9, 87
SHC[2], 2
CALL[], 65, 71, 44, 39, 38, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 41
MDRP[m&gt;RWh], 79

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="520">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 690, 240, 0
OFFSET[R], 697, 294, 416


/*SVTCA[Y]
CALL[], 32, 4, 1, 1, 109, 86
SHC[2], 3
CALL[], 58, 28, 1, 1, 80, 86
SHC[2], 4
SVTCA[X]
CALL[], 35, 29, 0, 53, 8, 87
SHC[2], 3
CALL[], 42, 55, 35, 36, 29, 87
SHC[2], 4*/




SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 32
MDRP[m&gt;RWh], 58

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="521">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 399, -12, -2
OFFSET[R], 397, 95, 434


/*SVTCA[Y]
CALL[], 41, 6, 1, 1, 183, 86
SHC[2], 2
CALL[], 67, 37, 1, 1, 101, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 38, 0, 49, 9, 87
SHC[2], 2
CALL[], 51, 64, 44, 39, 38, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 41
MDRP[m&gt;RWh], 67

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="522">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 671, 240, 0
OFFSET[R], 681, 130, 20


/*SVTCA[Y]
CALL[], 32, 4, 1, 1, 109, 86
SHC[2], 3
CALL[], 45, 10, 1, 1, -146, 86
SHC[2], 4
SVTCA[X]
CALL[], 35, 29, 0, 53, 8, 87
SHC[2], 3
CALL[], 42, 48, 0, 30, 8, 87
SHC[2], 4*/


SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="523">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 399, 10, -2
OFFSET[R], 409, -151, 31


/*SVTCA[Y]
CALL[], 41, 6, 1, 1, 183, 86
SHC[2], 2
CALL[], 54, 21, 1, 1, -126, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 38, 0, 51, 9, 87
SHC[2], 2
CALL[], 51, 57, 0, 16, 9, 87
SHC[2], 3*/

SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 41

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="524">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 681, 111, -13


/*SVTCA[Y]
CALL[], 31, 0, 1, 1, -179, 86
SHC[2], 2
SVTCA[X]
CALL[], 28, 34, 0, 29, 7, 87
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="525">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eb9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 409, -103, -3


/*SVTCA[Y]
CALL[], 43, 37, 1, 1, -153, 86
SHC[2], 1
SVTCA[X]
CALL[], 40, 46, 39, 22, 9, 87
SHC[2], 1*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="526">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eba */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 674, 46, 43


/*SVTCA[Y]
CALL[], 28, 6, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 43, 49, 0, 49, 7, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="527">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ebb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 402, -48, 136


/*SVTCA[Y]
CALL[], 68, 3, 1, 1, 122, 86
SHC[2], 1
SVTCA[X]
CALL[], 54, 60, 39, 52, 9, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 68

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="528">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ebc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 669, 30, 7


/*SVTCA[Y]
CALL[], 44, 6, 1, 1, 158, 86
SHC[2], 2
SVTCA[X]
CALL[], 28, 41, 0, 45, 7, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="529">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ebd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 397, -6, 17


/*SVTCA[Y]
CALL[], 56, 3, 1, 1, 137, 86
SHC[2], 1
SVTCA[X]
CALL[], 40, 53, 39, 50, 9, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 56

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="530">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ebe */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 691, 144, 40
OFFSET[R], 689, 463, 290


/*SVTCA[Y]
CALL[], 33, 6, 1, 1, 140, 86
SHC[2], 2
CALL[], 44, 34, 0, 0, 74, 86
SHC[2], 3
SVTCA[X]
CALL[], 36, 32, 0, 45, 7, 87
SHC[2], 2
CALL[], 45, 32, 1, 1, -67, 86
SHC[2], 3*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="531">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ebf */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 396, -5, 25
OFFSET[R], 395, 434, 313


/*SVTCA[Y]
CALL[], 45, 3, 1, 1, 130, 86
SHC[2], 1
CALL[], 63, 46, 0, 0, 71, 86
SHC[2], 2
SVTCA[X]
CALL[], 48, 44, 39, 49, 9, 87
SHC[2], 1
CALL[], 52, 44, 1, 1, -63, 86
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 47
MDRP[m&gt;RWh], 63

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="532">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 691, 113, 40
OFFSET[R], 694, -371, 290


/*SVTCA[Y]
CALL[], 33, 6, 1, 1, 140, 86
SHC[2], 2
CALL[], 48, 34, 0, 0, 74, 86
SHC[2], 3
SVTCA[X]
CALL[], 36, 32, 0, 43, 7, 87
SHC[2], 2
CALL[], 47, 36, 1, 1, 148, 86
SHC[2], 3*/





SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="533">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 396, -9, 27
OFFSET[R], 394, -317, 319


/*SVTCA[Y]
CALL[], 45, 3, 1, 1, 132, 86
SHC[2], 1
CALL[], 63, 46, 0, 0, 75, 86
SHC[2], 2
SVTCA[X]
CALL[], 48, 44, 39, 49, 9, 87
SHC[2], 1
CALL[], 62, 48, 1, 1, 145, 86
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 47
MDRP[m&gt;RWh], 63

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="534">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 668, -73, 9
OFFSET[R], 674, 367, 335


/*SVTCA[Y]
CALL[], 33, 6, 1, 1, 119, 86
SHC[2], 2
CALL[], 40, 28, 1, 0, -86, 86
SHC[2], 3
SVTCA[X]
CALL[], 36, 32, 0, 43, 7, 87
SHC[2], 2
CALL[], 55, 32, 1, 0, -110, 86
SHC[2], 3*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="535">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 396, -3, 24
OFFSET[R], 402, 373, 435




/*SVTCA[Y]
CALL[], 45, 3, 1, 1, 129, 86
SHC[2], 1
CALL[], 80, 46, 0, 0, 77, 86
SHC[2], 2
SVTCA[X]
CALL[], 48, 44, 39, 49, 9, 87
SHC[2], 1
CALL[], 66, 44, 1, 1, -73, 86
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 47
MDRP[m&gt;RWh], 80

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="536">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 691, 113, 40
OFFSET[R], 697, 72, 422


/*SVTCA[Y]
CALL[], 33, 6, 1, 1, 140, 86
SHC[2], 2
CALL[], 56, 28, 1, 1, 100, 86
SHC[2], 3
SVTCA[X]
CALL[], 36, 32, 0, 43, 7, 87
SHC[2], 2
CALL[], 40, 53, 36, 39, 32, 87
SHC[2], 3*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 56

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="537">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 396, -52, -9
OFFSET[R], 397, 66, 421


/*SVTCA[Y]
CALL[], 45, 3, 1, 1, 96, 86
SHC[2], 1
CALL[], 68, 40, 1, 1, 56, 86
SHC[2], 2
SVTCA[X]
CALL[], 48, 44, 39, 46, 9, 87
SHC[2], 1
CALL[], 52, 65, 48, 46, 44, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 47
MDRP[m&gt;RWh], 68

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="538">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 668, -83, -17
OFFSET[R], 681, 34, 17


/*SVTCA[Y]
CALL[], 33, 6, 1, 1, 93, 86
SHC[2], 2
CALL[], 43, 0, 1, 1, -149, 86
SHC[2], 3
SVTCA[X]
CALL[], 36, 32, 0, 42, 7, 87
SHC[2], 2
CALL[], 40, 46, 0, 25, 7, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="539">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 396, -44, -23
OFFSET[R], 409, -132, 32


/*SVTCA[Y]
CALL[], 45, 3, 1, 1, 82, 86
SHC[2], 1
CALL[], 55, 37, 1, 1, -118, 86
SHC[2], 2
SVTCA[X]
CALL[], 48, 44, 39, 46, 9, 87
SHC[2], 1
CALL[], 52, 58, 39, 20, 9, 87
SHC[2], 2*/


SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="540">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 674, -241, 47


/*SVTCA[Y]
CALL[], 14, 6, 1, 1, 144, 86
SHC[2], 1
SVTCA[X]
CALL[], 29, 35, 0, 50, 7, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 14

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="541">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ec9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 242, 0, 0
OFFSET[R], 402, -352, 127


/*SVTCA[Y]
CALL[], 41, 6, 1, 1, 130, 86
SHC[2], 1
SVTCA[X]
CALL[], 27, 33, 5, 53, 12, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 41

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="542">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eca */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 681, -195, 41


/*SVTCA[Y]
CALL[], 17, 0, 1, 1, -125, 86
SHC[2], 1
SVTCA[X]
CALL[], 14, 20, 0, 18, 7, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="543">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ecb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 75, 0, 0
OFFSET[R], 409, -263, -54


/*SVTCA[Y]
CALL[], 28, 0, 1, 1, -200, 86
SHC[2], 2
SVTCA[X]
CALL[], 25, 31, 5, 10, 12, 87
SHC[2], 2*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="544">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ecc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 681, 188, 5


/*SVTCA[Y]
CALL[], 27, 9, 1, 1, -144, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 30, 11, 24, 5, 87
SHC[2], 2*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="545">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ecd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 409, -125, 24


/*SVTCA[Y]
CALL[], 27, 9, 1, 1, -127, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 30, 11, 19, 5, 87
SHC[2], 2*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="546">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ece */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 674, 170, 45


/*SVTCA[Y]
CALL[], 24, 3, 1, 1, 123, 86
SHC[2], 2
SVTCA[X]
CALL[], 39, 45, 11, 43, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="547">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ecf */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 402, -77, 124


/*SVTCA[Y]
CALL[], 52, 3, 1, 1, 111, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 44, 11, 45, 5, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="548">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 691, 238, 40
OFFSET[R], 689, 558, 290


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 121, 86
SHC[2], 2
CALL[], 40, 30, 0, 0, 74, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 38, 5, 87
SHC[2], 2
CALL[], 41, 28, 1, 1, -66, 86
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 31
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="549">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 396, -71, -15
OFFSET[R], 395, 359, 272


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 91, 86
SHC[2], 2
CALL[], 47, 30, 0, 0, 70, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 40, 5, 87
SHC[2], 2
CALL[], 36, 28, 1, 1, -72, 86
SHC[2], 3*/


SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 31
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="550">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 691, 238, 39
OFFSET[R], 694, -246, 289


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 120, 86
SHC[2], 2
CALL[], 44, 30, 0, 0, 74, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 38, 5, 87
SHC[2], 2
CALL[], 43, 32, 1, 1, 148, 86
SHC[2], 3*/




SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 31
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="551">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 396, -69, -53
OFFSET[R], 394, -328, 279


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 53, 86
SHC[2], 2
CALL[], 47, 24, 1, 0, -59, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 40, 5, 87
SHC[2], 2
CALL[], 46, 32, 1, 1, 194, 86
SHC[2], 3*/


SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 31
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="552">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 668, 57, 8
OFFSET[R], 674, 521, 314


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 99, 86
SHC[2], 2
CALL[], 36, 30, 0, 0, 68, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 38, 5, 87
SHC[2], 2
CALL[], 51, 28, 1, 1, -86, 86
SHC[2], 3*/




SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 31
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="553">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 396, -81, -49
OFFSET[R], 402, 258, 371


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 57, 86
SHC[2], 2
CALL[], 64, 30, 0, 0, 86, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 39, 5, 87
SHC[2], 2
CALL[], 50, 28, 1, 0, -110, 86
SHC[2], 3*/


SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 31
MDRP[m&gt;RWh], 64

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="554">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 691, 250, 29
OFFSET[R], 697, 223, 396


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 110, 86
SHC[2], 2
CALL[], 52, 24, 1, 1, 85, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 38, 5, 87
SHC[2], 2
CALL[], 36, 49, 32, 41, 28, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 31
MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="555">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 396, -83, -47
OFFSET[R], 397, 22, 368


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 59, 86
SHC[2], 2
CALL[], 52, 24, 1, 1, 41, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 39, 5, 87
SHC[2], 2
CALL[], 36, 49, 32, 44, 28, 87
SHC[2], 3*/


SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 31
MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="556">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 668, 69, 2
OFFSET[R], 681, 138, 11


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 93, 86
SHC[2], 2
CALL[], 39, 9, 1, 1, -138, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 38, 5, 87
SHC[2], 2
CALL[], 36, 42, 11, 21, 5, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="557">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ed9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 396, -66, -16
OFFSET[R], 409, -125, 24


/*SVTCA[Y]
CALL[], 29, 3, 1, 1, 90, 86
SHC[2], 2
CALL[], 39, 9, 1, 1, -127, 86
SHC[2], 3
SVTCA[X]
CALL[], 32, 28, 11, 40, 5, 87
SHC[2], 2
CALL[], 36, 42, 11, 19, 5, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="558">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eda */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 322, 0, 0
OFFSET[R], 667, 157, 78



/*SVTCA[Y]
CALL[], 55, 3, 1, 1, 151, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 51, 11, 43, 5, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 55

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="559">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1edb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 323, 0, 0
OFFSET[R], 395, 22, 30


/*SVTCA[Y]
CALL[], 55, 3, 1, 1, 134, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 51, 11, 49, 5, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 55

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="560">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1edc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 322, 0, 0
OFFSET[R], 666, 115, 48


/*SVTCA[Y]
CALL[], 55, 3, 1, 1, 121, 86
SHC[2], 3
SVTCA[X]
CALL[], 47, 54, 11, 36, 5, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 55

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="561">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1edd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 323, 0, 0
OFFSET[R], 394, -88, 30


/*SVTCA[Y]
CALL[], 55, 3, 1, 1, 134, 86
SHC[2], 3
SVTCA[X]
CALL[], 47, 54, 11, 36, 5, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 55

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="562">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ede */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 322, 0, 0
OFFSET[R], 674, 124, 43


/*SVTCA[Y]
CALL[], 44, 3, 1, 1, 121, 86
SHC[2], 3
SVTCA[X]
CALL[], 59, 65, 11, 41, 5, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="563">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1edf */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 323, 0, 0
OFFSET[R], 402, -115, 136


/*SVTCA[Y]
CALL[], 72, 3, 1, 1, 123, 86
SHC[2], 3
SVTCA[X]
CALL[], 58, 64, 11, 43, 5, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 72

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="564">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 322, 0, 0
OFFSET[R], 669, 77, 36


/*SVTCA[Y]
CALL[], 60, 3, 1, 1, 168, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 57, 11, 36, 5, 87
SHC[2], 3*/






SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 60

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="565">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 323, 0, 0
OFFSET[R], 397, -78, 56


/*SVTCA[Y]
CALL[], 60, 3, 1, 1, 177, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 57, 11, 41, 5, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 60

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="566">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 322, 0, 0
OFFSET[R], 681, 187, 36


/*SVTCA[Y]
CALL[], 47, 9, 1, 1, -113, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 50, 11, 24, 5, 87
SHC[2], 3*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="567">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 323, 0, 0
OFFSET[R], 409, -125, 24


/*SVTCA[Y]
CALL[], 47, 9, 1, 1, -127, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 50, 11, 19, 5, 87
SHC[2], 3*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="568">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 681, 185, -28


/*SVTCA[Y]
CALL[], 37, 26, 1, 1, -172, 86
SHC[2], 1
SVTCA[X]
CALL[], 34, 40, 29, 17, 19, 87
SHC[2], 1*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="569">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 409, -62, 8


/*SVTCA[Y]
CALL[], 34, 28, 1, 1, -152, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 37, 14, 19, 9, 87
SHC[2], 2*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="570">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 674, 144, 42



/*SVTCA[Y]
CALL[], 34, 18, 1, 1, 139, 86
SHC[2], 1
SVTCA[X]
CALL[], 49, 55, 29, 37, 19, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="571">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 402, -84, 107


/*SVTCA[Y]
CALL[], 59, 15, 1, 1, 108, 86
SHC[2], 2
SVTCA[X]
CALL[], 45, 51, 14, 42, 9, 87
SHC[2], 2*/





SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 59

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="572">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 324, 0, 0
OFFSET[R], 667, 230, 48


/*SVTCA[Y]
CALL[], 63, 18, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 52, 59, 27, 49, 19, 87
SHC[2], 2*/


SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 63

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="573">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ee9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 395, 7, -17


/*SVTCA[Y]
CALL[], 62, 15, 1, 1, 101, 86
SHC[2], 3
SVTCA[X]
CALL[], 51, 58, 14, 45, 9, 87
SHC[2], 3*/




SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 62

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="574">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eea */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 324, 0, 0
OFFSET[R], 666, 213, 48


/*SVTCA[Y]
CALL[], 63, 18, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 55, 62, 27, 41, 19, 87
SHC[2], 2*/


SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 63

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="575">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eeb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 394, -38, 14


/*SVTCA[Y]
CALL[], 62, 5, 1, 1, 113, 86
SHC[2], 3
SVTCA[X]
CALL[], 54, 61, 14, 36, 9, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 62

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="576">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eec */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 324, 0, 0
OFFSET[R], 674, 154, 44


/*SVTCA[Y]
CALL[], 52, 18, 1, 1, 141, 86
SHC[2], 2
SVTCA[X]
CALL[], 67, 73, 27, 43, 19, 87
SHC[2], 2*/


SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="577">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eed */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 402, -81, 144

/*SVTCA[Y]
CALL[], 79, 15, 1, 1, 145, 86
SHC[2], 3
SVTCA[X]
CALL[], 65, 71, 14, 42, 9, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 79

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="578">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eee */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 324, 0, 0
OFFSET[R], 669, 216, -11


/*SVTCA[Y]
CALL[], 68, 18, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 52, 65, 27, 43, 19, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 68

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="579">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1eef */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 397, -42, -1


/*SVTCA[Y]
CALL[], 67, 5, 1, 1, 115, 86
SHC[2], 3
SVTCA[X]
CALL[], 51, 64, 14, 40, 9, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 67

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="580">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 324, 0, 0
OFFSET[R], 681, 226, -38

/*SVTCA[Y]
CALL[], 55, 24, 1, 1, -182, 86
SHC[2], 2
SVTCA[X]
CALL[], 52, 58, 27, 22, 19, 87
SHC[2], 2*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="581">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 325, 0, 0
OFFSET[R], 409, -72, 0


/*SVTCA[Y]
CALL[], 54, 28, 1, 1, -160, 86
SHC[2], 3
SVTCA[X]
CALL[], 51, 57, 14, 18, 9, 87
SHC[2], 3*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="582">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 666, -32, 52


/*SVTCA[Y]
CALL[], 36, 10, 1, 1, 144, 86
SHC[2], 1
SVTCA[X]
CALL[], 28, 35, 20, 30, 11, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="583">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 394, -124, 38


/*SVTCA[Y]
CALL[], 47, 25, 1, 1, 145, 86
SHC[2], 1
SVTCA[X]
CALL[], 39, 46, 0, 44, 28, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 13, 6, 114
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="584">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef4 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 681, 32, -2


/*SVTCA[Y]
CALL[], 28, 19, 1, 1, -168, 86
SHC[2], 1
SVTCA[X]
CALL[], 25, 31, 20, 13, 11, 87
SHC[2], 1*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="585">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef5 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 409, 208, 10


/*SVTCA[Y]
CALL[], 45, 35, 2, 0, 76, 86
SHC[2], 1
SVTCA[X]
CALL[], 36, 42, 0, 49, 28, 87
SHC[2], 1*/



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="586">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 674, -8, 44


/*SVTCA[Y]
CALL[], 25, 10, 1, 1, 141, 86
SHC[2], 1
SVTCA[X]
CALL[], 40, 46, 20, 36, 11, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 25

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="587">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 402, -188, 147


/*SVTCA[Y]
CALL[], 64, 13, 1, 1, 149, 86
SHC[2], 1
SVTCA[X]
CALL[], 50, 56, 0, 47, 28, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 13, 6, 114
MDRP[m&gt;RWh], 64

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="588">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef8 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 669, -8, 7


/*SVTCA[Y]
CALL[], 41, 10, 1, 1, 158, 86
SHC[2], 1
SVTCA[X]
CALL[], 25, 38, 20, 33, 11, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 41

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="589">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x1ef9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 397, -82, 13


/*SVTCA[Y]
CALL[], 52, 25, 1, 1, 137, 86
SHC[2], 1
SVTCA[X]
CALL[], 36, 49, 0, 49, 28, 87
SHC[2], 1*/




SVTCA[Y]
CALL[], 13, 6, 114
MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="590">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2010 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 15, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="591">
      <instructions>
        <talk>/* VTTTalk glyph 591, char 0x2013 */
/* GUI generated Mon Sep 28 18:39:17 2020 */

/* Y direction */
YAnchor(5)
YShift(5,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 591, char 0x2013 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="592">
      <instructions>
        <talk>/* VTTTalk glyph 592, char 0x2014 */
/* GUI generated Mon Sep 28 18:39:34 2020 */

/* Y direction */
YAnchor(5)
YShift(5,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 592, char 0x2014 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="593">
      <instructions>
        <talk>/* VTTTalk glyph 593, char 0x2015 */
/* GUI generated Mon Sep 28 18:39:49 2020 */

/* Y direction */
YAnchor(0)
YShift(0,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 593, char 0x2015 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="594">
      <instructions>
        <talk>/* VTTTalk glyph 594, char 0x2018 */
/* GUI generated Mon Oct 12 10:33:01 2020 */

/* Y direction */
ResYAnchor(15,3)
YShift(15,0)
YDist(15,9,&gt;=)
YInterpolate(9,3,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 594, char 0x2018 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 15, 3, 114
SHP[2], 0
MDRP[m&gt;RGr], 9
IP[], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="595">
      <instructions>
        <talk>/* VTTTalk glyph 595, char 0x2019 */
/* GUI generated Mon Oct 12 10:33:33 2020 */

/* Y direction */
ResYAnchor(9,3)
YDist(9,15,&gt;=)
YShift(15,0)
YInterpolate(15,3,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 595, char 0x2019 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 9, 3, 114
MDRP[m&gt;RGr], 15
SHP[2], 0
IP[], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="596">
      <instructions>
        <talk>/* VTTTalk glyph 596, char 0x201a */
/* GUI generated Mon Oct 12 10:34:17 2020 */

/* Y direction */
YAnchor(9)
YDist(9,15,&gt;=)
YShift(15,0)
YInterpolate(15,3,9)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 596, char 0x201a */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RGr], 15
SHP[2], 0
IP[], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="597">
      <instructions>
        <talk>/* VTTTalk glyph 597, char 0x201c */
/* GUI generated Mon Oct 12 10:35:13 2020 */

/* Y direction */
ResYAnchor(15,3)
YShift(15,0)
YDist(15,9,&gt;=)
YShift(9,25)
YAnchor(25)
YInterpolate(9,19,3,15)
YShift(15,31)
YAnchor(31)
YShift(31,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 597, char 0x201c */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 15, 3, 114
SHP[2], 0
MDRP[m&gt;RGr], 9
SHP[2], 25
MDAP[R], 25
SRP1[], 15
IP[], 19
IP[], 3
SHP[1], 31
MDAP[R], 31
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="598">
      <instructions>
        <talk>/* VTTTalk glyph 598, char 0x201d */
/* GUI generated Mon Oct 12 10:36:19 2020 */

/* Y direction */
ResYAnchor(25,3)
YShift(25,9)
YAnchor(9)
YDist(25,31,&gt;=)
YShift(31,16)
YInterpolate(25,19,3,31)
YShift(31,15)
YAnchor(15)
YShift(15,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 598, char 0x201d */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 25, 3, 114
SHP[2], 9
MDAP[R], 9
SRP0[], 25
MDRP[m&gt;RGr], 31
SHP[2], 16
IP[], 19
IP[], 3
SHP[2], 15
MDAP[R], 15
SHP[1], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="599">
      <instructions>
        <talk>/* VTTTalk glyph 599, char 0x201e */
/* GUI generated Mon Oct 12 10:37:07 2020 */

/* Y direction */
YAnchor(25)
YShift(25,9)
YAnchor(9)
YDist(25,31,&gt;=)
YShift(31,16)
YInterpolate(25,3,19,31)
YShift(31,15)
YAnchor(15)
YShift(15,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 599, char 0x201e */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 25
SHP[1], 9
MDAP[R], 9
SRP0[], 25
MDRP[m&gt;RGr], 31
SHP[2], 16
IP[], 3
IP[], 19
SHP[2], 15
MDAP[R], 15
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="600">
      <instructions>
        <talk>/* VTTTalk glyph 600, char 0x2020 */
/* GUI generated Thu Oct  1 11:41:17 2020 */

/* Y direction */
ResYAnchor(5,2)
YAnchor(11)
YIPAnchor(11,14,5)
YShift(14,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 600, char 0x2020 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 5, 2, 114
MDAP[R], 11
IP[], 14
MDAP[R], 14
SHP[1], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="601">
      <instructions>
        <talk>/* VTTTalk glyph 601, char 0x2021 */
/* GUI generated Thu Oct  1 11:42:26 2020 */

/* Y direction */
ResYAnchor(5,2)
YAnchor(11)
YIPAnchor(11,17,5)
YShift(17,14)
YDist(17,20,&gt;=)
YShift(20,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 601, char 0x2021 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 5, 2, 114
MDAP[R], 11
IP[], 17
MDAP[R], 17
SHP[1], 14
MDRP[m&gt;RBl], 20
SHP[2], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="602">
      <instructions>
        <talk>/* VTTTalk glyph 602, char 0x2022 */
/* GUI generated Thu Oct  1 11:42:57 2020 */

/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 602, char 0x2022 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="603">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2026 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 16, 0, 0
OFFSET[R], 16, 564, 0
OFFSET[R], 16, 1128, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="604">
      <instructions>
        <talk>/* VTTTalk glyph 604, char 0x2030 */
/* GUI generated Thu Oct  1 11:44:32 2020 */

/* Y direction */
ResYAnchor(3,5)
YShift(3,21)
YDist(3,9,&gt;=)
YShift(9,15)
YShift(3,25)
YAnchor(25)
YShift(25,26)
ResYAnchor(37,13)
YShift(37,43)
YShift(37,27)
YAnchor(27)
YShift(27,24)
YDist(37,31,&gt;=)
YShift(31,49)
ResYAnchor(61,13)
YShift(61,67)
YDist(61,55,&gt;=)
YShift(55,73)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 604, char 0x2030 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 5, 114
SHP[2], 21
MDRP[m&gt;RGr], 9
SHP[2], 15
SHP[1], 25
MDAP[R], 25
SHP[1], 26
CALL[], 37, 13, 114
SHP[2], 43
SHP[2], 27
MDAP[R], 27
SHP[1], 24
SRP0[], 37
MDRP[m&gt;RGr], 31
SHP[2], 49
CALL[], 61, 13, 114
SHP[2], 67
MDRP[m&gt;RGr], 55
SHP[2], 73
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="605">
      <instructions>
        <talk>/* VTTTalk glyph 605, char 0x2032 */
/* GUI generated Mon Oct  5 16:39:46 2020 */

/* Y direction */
YAnchor(0)
YDist(0,3,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 605, char 0x2032 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="606">
      <instructions>
        <talk>/* VTTTalk glyph 606, char 0x2033 */
/* GUI generated Mon Oct  5 16:39:35 2020 */

/* Y direction */
YAnchor(8)
YShift(8,9)
YAnchor(9)
YDist(8,3,&gt;=)
YShift(3,12)
YAnchor(12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 606, char 0x2033 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 9
MDAP[R], 9
SRP0[], 8
MDRP[m&gt;RBl], 3
SHP[2], 12
MDAP[R], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="607">
      <instructions>
        <talk>/* VTTTalk glyph 607, char 0x2039 */
/* GUI generated Mon Oct  5 16:38:16 2020 */

/* Y direction */
YAnchor(14)
YDist(14,4,&gt;=)
YInterpolate(14,18,8,0,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 607, char 0x2039 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 14
MDRP[m&gt;RGr], 4
SLOOP[], 3
IP[], 18, 8, 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="608">
      <instructions>
        <talk>/* VTTTalk glyph 608, char 0x203a */
/* GUI generated Mon Oct  5 16:37:36 2020 */

/* Y direction */
YAnchor(4)
YDist(4,14,&gt;=)
YInterpolate(4,0,8,18,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 608, char 0x203a */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RGr], 14
SLOOP[], 3
IP[], 0, 8, 18
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="609">
      <instructions>
        <talk>/* VTTTalk glyph 609, char 0x2044 */
/* GUI generated Mon Oct  5 16:36:24 2020 */

/* Y direction */
ResYAnchor(1,5)
YShift(1,2)
ResYAnchor(3,13)
YShift(3,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 609, char 0x2044 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 5, 114
SHP[2], 2
CALL[], 3, 13, 114
SHP[2], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="610">
      <instructions>
        <talk>/* VTTTalk glyph 610, char 0x2052 */
/* GUI generated Thu Oct  1 11:46:05 2020 */

/* Y direction */
ResYAnchor(13,13)
YShift(13,7)
YShift(13,3)
YAnchor(3)
YShift(3,0)
ResYAnchor(19,5)
YShift(19,25)
YShift(19,1)
YAnchor(1)
YShift(1,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 610, char 0x2052 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 13, 13, 114
SHP[2], 7
SHP[2], 3
MDAP[R], 3
SHP[1], 0
CALL[], 19, 5, 114
SHP[2], 25
SHP[2], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="611">
      <instructions>
        <talk>/* VTTTalk glyph 611, char 0x2074 */
/* GUI generated Thu Oct  1 11:47:32 2020 */

/* Y direction */
YAnchor(2)
YDist(2,8,&gt;=)
YIPAnchor(8,17,2)
YInterpolate(17,11,2)
YShift(17,14)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 611, char 0x2074 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RGr], 8
IP[], 17
MDAP[R], 17
SRP2[], 2
IP[], 11
SHP[1], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="612">
      <instructions>
        <talk>/* VTTTalk glyph 612, char 0x20a1 */
/* GUI generated Mon Oct  5 16:33:33 2020 */

/* Y direction */
ResYAnchor(35,4)
YShift(35,39)
YAnchor(39)
YDist(35,8,&gt;=)
YShift(8,25)
YShift(35,42)
YShift(42,27)
YShift(27,11)
ResYAnchor(56,12)
YDist(56,23,&gt;=)
YShift(23,16)
YShift(23,7)
YAnchor(7)
YShift(7,0)
YShift(56,48)
YShift(48,5)
YShift(48,22)

YInterpolate(35,29,28,19,20,13,12,3,4,56)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 612, char 0x20a1 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 35, 4, 114
SHP[2], 39
MDAP[R], 39
SRP0[], 35
MDRP[m&gt;RWh], 8
SHP[2], 25
SHP[1], 42
SRP1[], 42
SHP[1], 27
SRP1[], 27
SHP[1], 11
CALL[], 56, 12, 114
MDRP[m&gt;RWh], 23
SHP[2], 16
SHP[2], 7
MDAP[R], 7
SHP[1], 0
SRP1[], 56
SHP[1], 48
SRP1[], 48
SHP[1], 5
SHP[1], 22
SRP1[], 35
SRP2[], 56
SLOOP[], 8
IP[], 29, 28, 19, 20, 13, 12, 3, 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="613">
      <instructions>
        <talk>/* VTTTalk glyph 613, char 0x20a3 */
/* GUI generated Mon Oct  5 16:41:25 2020 */

/* Y direction */
ResYAnchor(4,12)
ResYAnchor(10,4)
YShift(10,15)
YIPAnchor(10,21,4)
YShift(21,22)
YDist(21,1,&gt;=)
YShift(1,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 613, char 0x20a3 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 4, 12, 114
CALL[], 10, 4, 114
SHP[2], 15
SRP1[], 4
IP[], 21
MDAP[R], 21
SHP[1], 22
MDRP[m&gt;RGr], 1
SHP[2], 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="614">
      <instructions>
        <talk>/* VTTTalk glyph 614, char 0x20a4 */
/* GUI generated Mon Oct  5 16:43:10 2020 */

/* Y direction */
ResYAnchor(19,12)
YShift(19,12)
YShift(19,0)
YAnchor(0)
YShift(0,31)
YDist(0,6,&gt;=)
YShift(6,25)
ResYAnchor(43,4)
YShift(43,50)
YIPAnchor(19,66,43)
YShift(66,67)
YDist(66,63,&gt;=)
YShift(63,62)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 614, char 0x20a4 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 19, 12, 114
SHP[2], 12
SHP[2], 0
MDAP[R], 0
SHP[1], 31
MDRP[m&gt;RGr], 6
SHP[2], 25
CALL[], 43, 4, 114
SHP[2], 50
SRP2[], 19
IP[], 66
MDAP[R], 66
SHP[1], 67
MDRP[m&gt;RWh], 63
SHP[2], 62
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="615">
      <instructions>
        <talk>/* VTTTalk glyph 615, char 0x20a6 */
/* GUI generated Tue Oct  6 11:23:00 2020 */

/* Y direction */
ResYAnchor(38,4)
YAnchor(45,4)
YAnchor(51,12)
YAnchor(57,12)
YIPAnchor(57,30,38)
YInterpolate(57,41,30)
YInterpolate(30,53,38)
YShift(30,19)
YDist(30,11,&gt;=)
YShift(11,4)
YShift(11,14)
YShift(14,3)
YShift(30,27)
YShift(27,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 615, char 0x20a6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 38, 4, 114
MIAP[R], 45, 4
MIAP[R], 51, 12
MIAP[R], 57, 12
IP[], 30
MDAP[R], 30
SRP2[], 57
IP[], 41
SRP2[], 38
IP[], 53
SHP[1], 19
MDRP[m&gt;RGr], 11
SHP[2], 4
SHP[2], 14
SRP1[], 14
SHP[1], 3
SRP1[], 30
SHP[1], 27
SRP1[], 27
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="616">
      <instructions>
        <talk>/* VTTTalk glyph 616, char 0x20a7 */
/* GUI generated Tue Oct  6 11:26:36 2020 */

/* Y direction */
ResYAnchor(6,4)
YShift(6,27)
YAnchor(32,12)
YIPAnchor(32,13,6)
YShift(13,20)
YAnchor(33,13)
YShift(33,45)
YAnchor(72,4)
YShift(72,79)
YAnchor(79)
YShift(72,83)
YShift(72,49)
YAnchor(49)
YShift(49,36)
YShift(49,38)
YShift(49,41)
YAnchor(41)
YShift(49,48)
YAnchor(95,13)
YShift(95,55)
YAnchor(55)
YShift(95,60)
YInterpolate(95,63,92,69,86,72)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 616, char 0x20a7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 6, 4, 114
SHP[2], 27
MIAP[R], 32, 12
IP[], 13
MDAP[R], 13
SHP[1], 20
MIAP[R], 33, 13
SHP[1], 45
MIAP[R], 72, 4
SHP[1], 79
MDAP[R], 79
SRP1[], 72
SHP[1], 83
SHP[1], 49
MDAP[R], 49
SHP[1], 36
SHP[1], 38
SHP[1], 41
MDAP[R], 41
SRP1[], 49
SHP[1], 48
MIAP[R], 95, 13
SHP[1], 55
MDAP[R], 55
SRP1[], 95
SHP[1], 60
SRP2[], 72
SLOOP[], 4
IP[], 63, 92, 69, 86
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="617">
      <instructions>
        <talk>/* VTTTalk glyph 617, char 0x20a9 */
/* GUI generated Tue Oct  6 11:29:11 2020 */

/* Y direction */
ResYAnchor(33,4)
YAnchor(45,12)
YIPAnchor(45,30,33)
YInterpolate(45,54,38,30)
YInterpolate(30,42,41,33)
YShift(30,11)
YShift(30,27)
YDist(30,19,&gt;=)
YShift(19,4)
YShift(19,22)
ResYAnchor(49,4)
ResYAnchor(59,4)
YAnchor(65,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 617, char 0x20a9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 33, 4, 114
MIAP[R], 45, 12
IP[], 30
MDAP[R], 30
SRP2[], 45
IP[], 54
IP[], 38
SRP2[], 33
IP[], 42
IP[], 41
SHP[1], 11
SHP[1], 27
MDRP[m&gt;RGr], 19
SHP[2], 4
SHP[2], 22
CALL[], 49, 4, 114
CALL[], 59, 4, 114
MIAP[R], 65, 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="618">
      <instructions>
        <talk>/* VTTTalk glyph 618, char 0x20ab */
/* GUI generated Tue Oct  6 11:32:59 2020 */

/* Y direction */
ResYAnchor(15,6)
YShift(15,16)
YShift(15,44)
YDist(15,11,&gt;=)
YShift(11,8)
YAnchor(20,1)
ResYAnchor(26,11)
ResYAnchor(31,11)
YDist(31,2,&gt;=)
YShift(2,5)
YShift(31,37)
YShift(37,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 618, char 0x20ab */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 15, 6, 114
SHP[2], 16
SHP[2], 44
MDRP[m&gt;RGr], 11
SHP[2], 8
MIAP[R], 20, 1
CALL[], 26, 11, 114
CALL[], 31, 11, 114
MDRP[m&gt;RWh], 2
SHP[2], 5
SHP[1], 37
SRP1[], 37
SHP[1], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="619">
      <instructions>
        <talk>/* VTTTalk glyph 619, char 0x20ac */
/* GUI generated Tue Oct  6 13:32:18 2020 */

/* Y direction */
ResYAnchor(24,13)
YShift(24,17)
ResYAnchor(30,5)
YShift(30,11)
YIPAnchor(24,0,30)
YShift(0,1)
YDist(0,5,&gt;=)
YShift(5,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 619, char 0x20ac */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 24, 13, 114
SHP[2], 17
CALL[], 30, 5, 114
SHP[2], 11
SRP2[], 24
IP[], 0
MDAP[R], 0
SHP[1], 1
MDRP[m&gt;RWh], 5
SHP[2], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="620">
      <instructions>
        <talk>/* VTTTalk glyph 620, char 0x20ad */
/* GUI generated Tue Oct  6 13:34:59 2020 */

/* Y direction */
YAnchor(22,4)
YAnchor(29,12)
YIPAnchor(22,8,29)
YInterpolate(22,39,12,5,11,38,14,3,2,31,8)
YInterpolate(8,30,29)
YShift(8,9)
YShift(8,0)
YShift(0,7)
YAnchor(34,4)
YAnchor(43,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 620, char 0x20ad */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 22, 4
MIAP[R], 29, 12
SRP2[], 22
IP[], 8
MDAP[R], 8
SLOOP[], 9
IP[], 39, 12, 5, 11, 38, 14, 3, 2, 31
SRP2[], 29
IP[], 30
SHP[1], 9
SHP[1], 0
SRP1[], 0
SHP[1], 7
MIAP[R], 34, 4
MIAP[R], 43, 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="621">
      <instructions>
        <talk>/* VTTTalk glyph 621, char 0x20b1 */
/* GUI generated Wed Oct  7 16:28:48 2020 */

/* Y direction */
YAnchor(38,4)
YShift(38,59)
YAnchor(64,12)
YDownToGrid(29,52)
YIPAnchor(38,29,52,64)
YShift(29,19)
YShift(29,20)
YShift(29,28)
YDist(29,4,&gt;=)
YShift(4,3)
YShift(4,12)
YShift(4,13)
YShift(52,45)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 621, char 0x20b1 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 38, 4
SHP[1], 59
MIAP[R], 64, 12
SRP2[], 38
IP[], 29
IP[], 52
RDTG[]
MDAP[R], 29
MDAP[R], 52
SRP1[], 29
SHP[1], 19
SHP[1], 20
SHP[1], 28
RTG[]
SRP0[], 29
MDRP[m&gt;RGr], 4
SHP[2], 3
SHP[2], 12
SHP[2], 13
SRP1[], 52
SHP[1], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="622">
      <instructions>
        <talk>/* VTTTalk glyph 622, char 0x20b2 */
/* GUI generated Mon Oct 12 14:25:14 2020 */

/* Y direction */
ResYAnchor(19,4)
YDist(19,8,&gt;=)
YShift(19,10)
YShift(19,23)
YAnchor(23)
YShift(19,26)
YShift(26,14)
YAnchor(44)
YDist(44,0,&gt;=)
YIPAnchor(44,38,19)
YInterpolate(38,4,12,3,13,19)
YShift(44,32)
YShift(32,1)
YShift(32,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 622, char 0x20b2 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 19, 4, 114
MDRP[m&gt;RBl], 8
SHP[1], 10
SHP[1], 23
MDAP[R], 23
SRP1[], 19
SHP[1], 26
SRP1[], 26
SHP[1], 14
MDAP[R], 44
MDRP[m&gt;RBl], 0
SRP2[], 19
IP[], 38
MDAP[R], 38
SLOOP[], 4
IP[], 4, 12, 3, 13
SRP1[], 44
SHP[1], 32
SRP1[], 32
SHP[1], 1
SHP[1], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="623">
      <instructions>
        <talk>/* VTTTalk glyph 623, char 0x20b5 */
/* GUI generated Mon Oct 12 14:30:40 2020 */

/* Y direction */
YAnchor(3)
YShift(3,7)
YAnchor(7)
YDist(3,36,&gt;=)
YShift(3,10)
YShift(10,37)
YShift(37,41)
YAnchor(24)
YShift(24,16)
YShift(16,28)
YShift(16,32)
YDist(24,27,&gt;=)
YShift(27,34)
YInterpolate(3,30,40,31,39,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 623, char 0x20b5 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 7
MDAP[R], 7
SRP0[], 3
MDRP[m&gt;RBl], 36
SHP[1], 10
SRP1[], 10
SHP[1], 37
SRP1[], 37
SHP[1], 41
MDAP[R], 24
SHP[1], 16
SRP1[], 16
SHP[1], 28
SHP[1], 32
MDRP[m&gt;RBl], 27
SHP[2], 34
SRP2[], 3
SLOOP[], 4
IP[], 30, 40, 31, 39
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="624">
      <instructions>
        <talk>/* VTTTalk glyph 624, char 0x20b9 */
/* GUI generated Mon Oct 12 14:32:29 2020 */

/* Y direction */
ResYAnchor(16,4)
YShift(16,9)
YShift(9,21)
YShift(9,43)
YAnchor(43)
YShift(43,48)
YDownToGrid(3)
YShift(48,3)
YAnchor(3)
YShift(3,27)
YShift(3,31)
YAnchor(36,12)
YShift(36,35)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 624, char 0x20b9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 16, 4, 114
SHP[2], 9
SRP1[], 9
SHP[1], 21
SHP[1], 43
MDAP[R], 43
SHP[1], 48
SRP1[], 48
SHP[1], 3
RDTG[]
MDAP[R], 3
SHP[1], 27
SHP[1], 31
RTG[]
MIAP[R], 36, 12
SHP[1], 35
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="625">
      <instructions>
        <talk>/* VTTTalk glyph 625, char 0x20ba */
/* GUI generated Mon Oct 12 14:39:11 2020 */

/* Y direction */
YAnchor(27,13)
YShift(27,17)
YShift(27,21)
YAnchor(21)
ResYAnchor(33,4)
YInterpolate(27,0,1,5,8,4,9,13,12,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 625, char 0x20ba */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 27, 13
SHP[1], 17
SHP[1], 21
MDAP[R], 21
CALL[], 33, 4, 114
SRP2[], 27
SLOOP[], 8
IP[], 0, 1, 5, 8, 4, 9, 13, 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="626">
      <instructions>
        <talk>/* VTTTalk glyph 626, char 0x20bc */
/* GUI generated Mon Oct 12 14:40:04 2020 */

/* Y direction */
YAnchor(10,12)
YAnchor(26,12)
YShift(26,0)
YAnchor(0)
YShift(0,7)
YAnchor(34)
YDist(34,4,&gt;=)
YShift(34,19)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 626, char 0x20bc */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 10, 12
MIAP[R], 26, 12
SHP[1], 0
MDAP[R], 0
SHP[2], 7
MDAP[R], 34
MDRP[m&gt;RBl], 4
SHP[1], 19
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="627">
      <instructions>
        <talk>/* VTTTalk glyph 627, char 0x20bd */
/* GUI generated Mon Oct 12 14:40:56 2020 */

/* Y direction */
ResYAnchor(10,4)
YDist(10,31,&gt;=)
YAnchor(36,12)
YIPAnchor(36,17,10)
YShift(17,24)
YDist(17,1,&gt;=)
YShift(1,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 627, char 0x20bd */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 10, 4, 114
MDRP[m&gt;RBl], 31
MIAP[R], 36, 12
SRP2[], 10
IP[], 17
MDAP[R], 17
SHP[1], 24
MDRP[m&gt;RGr], 1
SHP[2], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="628">
      <instructions>
        <talk>/* VTTTalk glyph 628, char 0x2116 */
/* GUI generated Thu Oct  1 12:35:18 2020 */

/* Y direction */
ResYAnchor(18,4)
YShift(18,25)
YAnchor(25)
YShift(25,41)
YAnchor(41)
YShift(41,59)
YShift(41,47)
YAnchor(47)
YShift(47,53)
YDist(47,3,&gt;=)
YShift(3,9)
YAnchor(37,12)
YShift(37,31)
YAnchor(31)
YInterpolate(18,16,33,21,37)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 628, char 0x2116 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 18, 4, 114
SHP[2], 25
MDAP[R], 25
SHP[1], 41
MDAP[R], 41
SHP[1], 59
SHP[1], 47
MDAP[R], 47
SHP[1], 53
MDRP[m&gt;RWh], 3
SHP[2], 9
MIAP[R], 37, 12
SHP[1], 31
MDAP[R], 31
SRP1[], 18
SRP2[], 37
SLOOP[], 3
IP[], 16, 33, 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="629">
      <instructions>
        <talk>/* VTTTalk glyph 629, char 0x2122 */
/* GUI generated Tue Oct  6 13:38:32 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,0)
YAnchor(0)
YShift(0,4)
YAnchor(4)
YDist(1,12,&gt;=)
YShift(12,20)
YAnchor(20)
YShift(20,43)
YAnchor(43)
YShift(43,37)
YAnchor(37)
YInterpolate(12,28,41,44,1)
YShift(1,18)
YShift(18,5)
YShift(1,27)
YAnchor(27)
YShift(27,29)
YAnchor(29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 629, char 0x2122 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 0
MDAP[R], 0
SHP[1], 4
MDAP[R], 4
SRP0[], 1
MDRP[m&gt;RGr], 12
SHP[2], 20
MDAP[R], 20
SHP[1], 43
MDAP[R], 43
SHP[1], 37
MDAP[R], 37
SRP1[], 1
SLOOP[], 3
IP[], 28, 41, 44
SHP[1], 18
SRP1[], 18
SHP[1], 5
SRP1[], 1
SHP[1], 27
MDAP[R], 27
SHP[1], 29
MDAP[R], 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="630">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2126 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 453, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="631">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x2206 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 433, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="632">
      <instructions>
        <talk>/* VTTTalk glyph 632, char 0x2212 */
/* GUI generated Tue Oct  6 13:39:29 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 632, char 0x2212 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="633">
      <instructions>
        <talk>/* VTTTalk glyph 633, char 0x2215 */
/* GUI generated Tue Oct  6 13:39:59 2020 */

/* Y direction */
ResYAnchor(1,5)
YShift(1,2)
YAnchor(3)
YShift(3,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 633, char 0x2215 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 5, 114
SHP[2], 2
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="634">
      <instructions>
        <talk>/* VTTTalk glyph 634, char 0x2219 */
/* GUI generated Tue Oct  6 13:40:22 2020 */

/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 634, char 0x2219 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="635">
      <instructions>
        <talk>/* VTTTalk glyph 635, char 0x2248 */
/* GUI generated Tue Oct  6 13:41:50 2020 */

/* Y direction */
YAnchor(11)
YShift(11,4)
YDist(11,3,&gt;=2)
YShift(3,12)
YShift(3,7)
YAnchor(7)
YShift(7,8)
YShift(11,15)
YAnchor(15)
YShift(15,0)
YDist(11,19,&gt;=)
YShift(19,28)
YShift(19,23)
YAnchor(23)
YShift(23,24)
YDist(19,27,&gt;=2)
YShift(27,20)
YShift(27,31)
YAnchor(31)
YShift(31,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 635, char 0x2248 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 11
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[2], 12
SHP[2], 7
MDAP[R], 7
SHP[1], 8
SRP1[], 11
SHP[1], 15
MDAP[R], 15
SHP[1], 0
SMD[], 64
SRP0[], 11
MDRP[m&gt;RWh], 19
SHP[2], 28
SHP[2], 23
MDAP[R], 23
SHP[1], 24
SMD[], 128
SRP0[], 19
MDRP[m&gt;RBl], 27
SHP[2], 20
SHP[2], 31
MDAP[R], 31
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="636">
      <instructions>
        <talk>/* VTTTalk glyph 636, char 0x2260 */
/* GUI generated Tue Oct  6 13:42:39 2020 */

/* Y direction */
YAnchor(11)
YDist(11,2,&gt;=)
YShift(2,5)
YShift(5,15)
YAnchor(15)
YShift(15,12)
YShift(11,8)
YShift(8,13)
YAnchor(13)
YShift(13,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 636, char 0x2260 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 11
MDRP[m&gt;RBl], 2
SHP[2], 5
SRP1[], 5
SHP[1], 15
MDAP[R], 15
SHP[1], 12
SRP1[], 11
SHP[1], 8
SRP1[], 8
SHP[1], 13
MDAP[R], 13
SHP[1], 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="637">
      <instructions>
        <talk>/* VTTTalk glyph 637, char 0x2264 */
/* GUI generated Mon Oct 12 14:47:16 2020 */

/* Y direction */
YAnchor(1)
YShift(1,0)
YDist(1,18,&gt;=)
YDist(18,8,&gt;=)
YInterpolate(18,13,4,5,21,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 637, char 0x2264 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDRP[M&gt;RWh], 18
MDRP[m&gt;RGr], 8
SLOOP[], 4
IP[], 13, 4, 5, 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="638">
      <instructions>
        <talk>/* VTTTalk glyph 638, char 0x2265 */
/* GUI generated Mon Oct 12 14:47:54 2020 */

/* Y direction */
YAnchor(1,18)
YShift(1,0)
YDist(1,20,&gt;=)
YDist(20,12,&gt;=)
YInterpolate(12,7,15,16,17,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 638, char 0x2265 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 1, 18
SHP[1], 0
MDRP[M&gt;RWh], 20
MDRP[m&gt;RGr], 12
SLOOP[], 4
IP[], 7, 15, 16, 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="639">
      <instructions>
        <talk>/* VTTTalk glyph 639, char 0x27e8 */
/* GUI generated Mon Oct 12 10:38:53 2020 */

/* Y direction */
ResYAnchor(0,2)
YShift(0,1)
YAnchor(4)
YShift(4,3)
YInterpolate(4,5,2,6,0)

/* X direction */

Smooth()



</talk>
        <assembly>/* TT glyph 639, char 0x27e8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 1
MDAP[R], 4
SHP[1], 3
SLOOP[], 3
IP[], 5, 2, 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="640">
      <instructions>
        <talk>/* VTTTalk glyph 640, char 0x27e9 */
/* GUI generated Mon Oct 12 10:39:31 2020 */

/* Y direction */
ResYAnchor(4,2)
YShift(4,3)
YAnchor(0)
YShift(0,1)
YInterpolate(4,5,2,6,0)

/* X direction */

Smooth()



</talk>
        <assembly>/* TT glyph 640, char 0x27e9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 3
MDAP[R], 0
SHP[1], 1
SLOOP[], 3
IP[], 5, 2, 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="641">
      <instructions>
        <talk>/* VTTTalk glyph 641, char 0xfb00 */
/* GUI generated Mon Oct 12 10:54:15 2020 */

/* Y direction */
ResYAnchor(32,14)
YShift(32,2)
YShift(32,65)
YAnchor(65)
YShift(65,35)
ResYAnchor(44,1)
YShift(44,50)
YShift(44,56)
YShift(44,11)
YAnchor(11)
YShift(11,17)
YShift(11,23)
ResYAnchor(68,6)
YShift(68,27)
YShift(27,40)
YShift(40,60)
YShift(68,72)
YShift(72,71)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 641, char 0xfb00 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 32, 14, 114
SHP[2], 2
SHP[2], 65
MDAP[R], 65
SHP[1], 35
CALL[], 44, 1, 114
SHP[2], 50
SHP[2], 56
SHP[2], 11
MDAP[R], 11
SHP[1], 17
SHP[1], 23
CALL[], 68, 6, 114
SHP[2], 27
SRP1[], 27
SHP[1], 40
SRP1[], 40
SHP[1], 60
SHP[2], 72
SRP1[], 72
SHP[1], 71
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="642">
      <instructions>
        <talk>/* VTTTalk glyph 642, char 0xfb01 */
/* GUI generated Mon Oct 12 14:21:52 2020 */

/* Y direction */
ResYAnchor(6,1)
YShift(6,18)
ResYAnchor(27,14)
YShift(27,30)
ResYAnchor(35,6)
YShift(35,39)
YShift(39,38)
YShift(38,44)
YShift(44,48)
YAnchor(40,11)
YShift(40,50)
ResYAnchor(46,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 642, char 0xfb01 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 6, 1, 114
SHP[2], 18
CALL[], 27, 14, 114
SHP[2], 30
CALL[], 35, 6, 114
SHP[2], 39
SRP1[], 39
SHP[1], 38
SRP1[], 38
SHP[1], 44
SRP1[], 44
SHP[1], 48
MIAP[R], 40, 11
SHP[1], 50
CALL[], 46, 7, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="643">
      <instructions>
        <talk>/* VTTTalk glyph 643, char 0xfb02 */
/* GUI generated Mon Oct 12 15:42:53 2020 */

/* Y direction */
ResYAnchor(11,1)
YShift(11,17)
YShift(11,46)
YAnchor(46)
YShift(11,23)
YShift(23,43)
YShift(23,44)
ResYAnchor(32,14)
YShift(32,2)
ResYAnchor(35,6)
YShift(35,39)
YShift(39,38)
ResYAnchor(40,11)
YShift(40,49)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 643, char 0xfb02 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 11, 1, 114
SHP[2], 17
SHP[2], 46
MDAP[R], 46
SHP[2], 23
SRP1[], 23
SHP[1], 43
SHP[1], 44
CALL[], 32, 14, 114
SHP[2], 2
CALL[], 35, 6, 114
SHP[2], 39
SRP1[], 39
SHP[1], 38
CALL[], 40, 11, 114
SHP[2], 49
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="644">
      <instructions>
        <talk>/* VTTTalk glyph 644, char 0xfb03 */
/* GUI generated Mon Oct 12 15:35:06 2020 */

/* Y direction */
ResYAnchor(32,14)
YShift(32,2)
ResYAnchor(44,1)
YShift(44,50)
YShift(44,56)
YShift(44,11)
YAnchor(11)
YShift(11,17)
YShift(11,23)
YAnchor(66,11)
YShift(66,76)
ResYAnchor(72,7)
ResYAnchor(81,6)
YShift(81,85)
YShift(85,70)
YShift(85,84)

YShift(32,65)
YAnchor(65)

YShift(65,35)


/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 644, char 0xfb03 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 32, 14, 114
SHP[2], 2
CALL[], 44, 1, 114
SHP[2], 50
SHP[2], 56
SHP[2], 11
MDAP[R], 11
SHP[1], 17
SHP[1], 23
MIAP[R], 66, 11
SHP[1], 76
CALL[], 72, 7, 114
CALL[], 81, 6, 114
SHP[2], 85
SRP1[], 85
SHP[1], 70
SHP[1], 84
SRP1[], 32
SHP[1], 65
MDAP[R], 65
SHP[1], 35
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="645">
      <instructions>
        <talk>/* VTTTalk glyph 645, char 0xfb04 */
/* GUI generated Mon Oct 12 15:41:00 2020 */

/* Y direction */
ResYAnchor(32,14)
YShift(32,2)
YShift(32,65)
YAnchor(65)
YShift(65,35)
ResYAnchor(44,1)
YShift(44,50)
YShift(44,79)
YAnchor(79)
YShift(44,11)
YAnchor(11)
YShift(11,23)
YShift(44,56)
YShift(56,76)
YShift(56,77)
YAnchor(68,6)
YShift(68,72)
YShift(72,71)
ResYAnchor(73,11)
YShift(73,82)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 645, char 0xfb04 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 32, 14, 114
SHP[2], 2
SHP[2], 65
MDAP[R], 65
SHP[1], 35
CALL[], 44, 1, 114
SHP[2], 50
SHP[2], 79
MDAP[R], 79
SHP[2], 11
MDAP[R], 11
SHP[1], 23
SHP[2], 56
SRP1[], 56
SHP[1], 76
SHP[1], 77
MIAP[R], 68, 6
SHP[1], 72
SRP1[], 72
SHP[1], 71
CALL[], 73, 11, 114
SHP[2], 82
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="646">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 243, 0, 0
OFFSET[R], 667, 424, 43


/*SVTCA[Y]
CALL[], 47, 25, 1, 1, 135, 86
SHC[2], 2
SVTCA[X]
CALL[], 36, 43, 0, 58, 26, 87
SHC[2], 2*/





SVTCA[Y]
CALL[], 25, 2, 114
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="647">
      <instructions>
        <talk>/* VTTTalk glyph 647, char 0xffff */
/* GUI generated Thu Oct  1 14:16:08 2020 */

/* Y direction */
YAnchor(0)
YAnchor(8)
YInterpolate(0,4,3,12,13,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 647, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SLOOP[], 4
IP[], 4, 3, 12, 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="648">
      <instructions>
        <talk>/* VTTTalk glyph 648, char 0xffff */
/* GUI generated Thu Oct  1 14:17:48 2020 */

/* Y direction */
YAnchor(4)
YShift(4,5)
YShift(4,1)
YAnchor(1)
YShift(1,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 648, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 5
SHP[1], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="649">
      <instructions>
        <talk>/* VTTTalk glyph 649, char 0xffff */
/* GUI generated Thu Oct  1 14:19:24 2020 */

/* Y direction */
YAnchor(7)
YAnchor(8)
YInterpolate(7,13,12,3,4,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 649, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 7
MDAP[R], 8
SRP2[], 7
SLOOP[], 4
IP[], 13, 12, 3, 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="650">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 420, -553, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="651">
      <instructions>
        <talk>/* VTTTalk glyph 651, char 0xffff */
/* GUI generated Mon Oct  5 12:39:16 2020 */

/* Y direction */
YAnchor(0)
YShift(0,20)
YAnchor(20)
ResYAnchor(15,7)
YShift(15,7)
YAnchor(7)
YShift(15,24)
YShift(24,12)
YShift(12,27)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 651, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 20
MDAP[R], 20
CALL[], 15, 7, 114
SHP[2], 7
MDAP[R], 7
SHP[2], 24
SRP1[], 24
SHP[1], 12
SRP1[], 12
SHP[1], 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="652">
      <instructions>
        <talk>/* VTTTalk glyph 652, char 0xffff */
/* GUI generated Mon Oct  5 12:39:46 2020 */

/* Y direction */
YAnchor(9)
YDist(9,14,&gt;=)
YShift(14,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 652, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RGr], 14
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="653">
      <instructions>
        <talk>/* VTTTalk glyph 653, char 0xffff */
/* GUI generated Mon Oct  5 12:41:50 2020 */

/* Y direction */
YAnchor(8)
YShift(8,9)
YShift(9,3,13)
YShift(9,4,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 653, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 9
SRP1[], 9
SHP[1], 3
SHP[1], 13
SHP[1], 4
SHP[1], 12
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="654">
      <instructions>
        <talk>/* VTTTalk glyph 654, char 0xffff */
/* GUI generated Mon Oct  5 12:43:02 2020 */

/* Y direction */
YAnchor(0)
YShift(0,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 654, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="655">
      <instructions>
        <talk>/* VTTTalk glyph 655, char 0xffff */
/* GUI generated Mon Oct  5 12:43:34 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,19)
YAnchor(19)
ResYAnchor(24,9)
YShift(24,11)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 655, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 19
MDAP[R], 19
CALL[], 24, 9, 114
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="656">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="657">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 242, 0, 0
OFFSET[R], 400, -277, 0


/*SVTCA[Y]
CALL[], 22, 6, 1, 1, 151, 86
SHC[2], 1
SVTCA[X]
CALL[], 13, 19, 5, 51, 12, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 22

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="658">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 395, 279, 0
OFFSET[R], 75, 0, 0
OFFSET[R], 659, 581, 0


/*SVTCA[Y]
CALL[], 11, 18, 1, 1, 120, 86
SHC[2], 0
SVTCA[X]
CALL[], 0, 24, 1, 0, 274, 86
SHC[2], 0*/




SVTCA[Y]
CALL[], 40, 6, 114
MDRP[m&gt;RWh], 11

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="659">
      <instructions>
        <talk>/* VTTTalk glyph 659, char 0x237 */
/* GUI generated Mon Oct  5 14:46:17 2020 */

/* Y direction */
ResYAnchor(3,6)
ResYAnchor(10,15)
YShift(10,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 659, char 0x237 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 6, 114
CALL[], 10, 15, 114
SHP[2], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="660">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 419, -300, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="661">
      <instructions>
        <talk>/* VTTTalk glyph 661, char 0xffff */
/* GUI generated Mon Oct  5 14:46:39 2020 */

/* Y direction */
YAnchor(11)
YDist(11,4,&gt;=2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 661, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 11
SMD[], 128
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="662">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 120, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="663">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 120, 40, 80
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="664">
      <instructions>
        <talk>/* VTTTalk glyph 664, char 0xffff */
/* GUI generated Mon Oct  5 14:49:23 2020 */

/* Y direction */
ResYAnchor(16,5)
YShift(16,23)
YShift(23,48)
YDist(16,47,&gt;=)
YShift(47,46)
ResYAnchor(35,12)
YShift(35,4)
YShift(4,39)
YInterpolate(35,7,32,13,26,16)
YDist(35,38,&gt;=)
YShift(38,45)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 664, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 16, 5, 114
SHP[2], 23
SRP1[], 23
SHP[1], 48
MDRP[m&gt;RBl], 47
SHP[2], 46
CALL[], 35, 12, 114
SHP[2], 4
SRP1[], 4
SHP[1], 39
SRP1[], 16
SLOOP[], 4
IP[], 7, 32, 13, 26
MDRP[m&gt;RGr], 38
SHP[2], 45
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="665">
      <instructions>
        <talk>/* VTTTalk glyph 665, char 0xffff */
/* GUI generated Mon Oct  5 14:51:12 2020 */

/* Y direction */
ResYAnchor(16,5)
YShift(16,23)
YShift(23,53)
YDist(16,47,&gt;=)
YShift(47,46)
ResYAnchor(35,12)
YShift(35,4)
YShift(4,39)
YInterpolate(35,7,32,10,41,42,51,50,29,13,26,16)
YDist(35,38,&gt;=)
YShift(38,45)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 665, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 16, 5, 114
SHP[2], 23
SRP1[], 23
SHP[1], 53
MDRP[m&gt;RBl], 47
SHP[2], 46
CALL[], 35, 12, 114
SHP[2], 4
SRP1[], 4
SHP[1], 39
SRP1[], 16
SLOOP[], 10
IP[], 7, 32, 10, 41, 42, 51, 50, 29, 13, 26
MDRP[m&gt;RGr], 38
SHP[2], 45
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="666">
      <instructions>
        <talk>/* VTTTalk glyph 666, char 0xffff */
/* GUI generated Mon Sep 28 12:51:14 2020 */

/* Y direction */
YAnchor(11)
YDist(11,6,&gt;=2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 666, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 11
SMD[], 128
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="667">
      <instructions>
        <talk>/* VTTTalk glyph 667, char 0xffff */
/* GUI generated Mon Sep 28 12:53:21 2020 */

/* Y direction */
YAnchor(11)
YDist(11,4,&gt;=2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 667, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 11
SMD[], 128
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="668">
      <instructions>
        <talk>/* VTTTalk glyph 668, char 0xffff */
/* GUI generated Mon Sep 28 12:54:08 2020 */

/* Y direction */
YAnchor(5)
YShift(5,4)
YDist(5,0,&gt;=2)
YInterpolate(5,6,0)
YShift(5,7)
YAnchor(7)
YShift(7,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 668, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 5
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 0
IP[], 6
SHP[1], 7
MDAP[R], 7
SHP[1], 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="669">
      <instructions>
        <talk>/* VTTTalk glyph 669, char 0xffff */
/* GUI generated Mon Sep 28 12:54:51 2020 */

/* Y direction */
YAnchor(16)
YShift(16,9)
YDist(16,3,&gt;=2)
YShift(3,22)
YShift(3,12)
YAnchor(12)
YShift(12,13)
YShift(16,25)
YAnchor(25)
YShift(25,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 669, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 16
SHP[1], 9
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[2], 22
SHP[2], 12
MDAP[R], 12
SHP[1], 13
SRP1[], 16
SHP[1], 25
MDAP[R], 25
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="670">
      <instructions>
        <talk>/* VTTTalk glyph 670, char 0xffff */
/* GUI generated Mon Sep 28 12:55:21 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 670, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="671">
      <instructions>
        <talk>/* VTTTalk glyph 671, char 0xffff */
/* GUI generated Mon Sep 28 15:12:25 2020 */

/* Y direction */
YAnchor(4)
YShift(4,11)
YDist(4,8,&gt;=)
YShift(8,7)
YShift(8,0)
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 671, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 11
MDRP[m&gt;RGr], 8
SHP[2], 7
SHP[2], 0
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="672">
      <instructions>
        <talk>/* VTTTalk glyph 672, char 0xffff */
/* GUI generated Mon Sep 28 15:12:37 2020 */

/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 672, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="673">
      <instructions>
        <talk>/* VTTTalk glyph 673, char 0xffff */
/* GUI generated Mon Sep 28 12:55:57 2020 */

/* Y direction */
YAnchor(9)
YShift(9,3)
YShift(9,21)
YAnchor(21)
YShift(21,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 673, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
MDAP[R], 21
SHP[1], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="674">
      <instructions>
        <talk>/* VTTTalk glyph 674, char 0xffff */
/* GUI generated Mon Oct  5 11:11:21 2020 */

/* Y direction */
YAnchor(0)
YDist(0,18,&gt;=3)
YShift(18,11)
YShift(0,24)
YShift(24,5)
YShift(5,2)
YShift(24,27)
YShift(27,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 674, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SMD[], 192
MDRP[m&gt;RGr], 18
SHP[2], 11
SHP[1], 24
SRP1[], 24
SHP[1], 5
SRP1[], 5
SHP[1], 2
SRP1[], 24
SHP[1], 27
SRP1[], 27
SHP[1], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="675">
      <instructions>
        <talk>/* VTTTalk glyph 675, char 0xffff */
/* GUI generated Mon Sep 28 15:14:13 2020 */

/* Y direction */
YAnchor(9)
YShift(9,15)
YDist(9,3,&gt;=3)
YShift(3,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 675, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 15
SMD[], 192
MDRP[m&gt;RGr], 3
SHP[2], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="676">
      <instructions>
        <talk>/* VTTTalk glyph 676, char 0xffff */
/* GUI generated Mon Sep 28 15:15:02 2020 */

/* Y direction */
YAnchor(4)
YShift(4,5)
YDist(4,9,&gt;=2)
YShift(9,21)
YAnchor(21)
YShift(4,16)
YAnchor(16)
YShift(16,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 676, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 5
SMD[], 128
MDRP[m&gt;RBl], 9
SHP[2], 21
MDAP[R], 21
SRP1[], 4
SHP[1], 16
MDAP[R], 16
SHP[1], 17
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="677">
      <instructions>
        <talk>/* VTTTalk glyph 677, char 0xffff */
/* GUI generated Mon Sep 28 15:15:41 2020 */

/* Y direction */
YAnchor(0)
YDist(0,5,&gt;=)
YShift(5,4)
YInterpolate(0,6,5)
YShift(5,7)
YAnchor(7)
YShift(7,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 677, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 5
SHP[2], 4
IP[], 6
SHP[2], 7
MDAP[R], 7
SHP[1], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="678">
      <instructions>
        <talk>/* VTTTalk glyph 678, char 0xffff */
/* GUI generated Mon Sep 28 15:16:20 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,4,&gt;=2)
YShift(4,11)
YShift(0,8)
YShift(8,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 678, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SMD[], 128
MDRP[m&gt;RGr], 4
SHP[2], 11
SHP[1], 8
SRP1[], 8
SHP[1], 7
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="679">
      <instructions>
        <talk>/* VTTTalk glyph 679, char 0xffff */
/* GUI generated Mon Sep 28 15:16:58 2020 */

/* Y direction */
YAnchor(8)
YShift(8,7)
YDist(8,3,&gt;=2)
YShift(3,15)
YAnchor(15)
YShift(8,20)
YAnchor(20)
YShift(20,19)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 679, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 8
SHP[1], 7
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[2], 15
MDAP[R], 15
SRP1[], 8
SHP[1], 20
MDAP[R], 20
SHP[1], 19
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="680">
      <instructions>
        <talk>/* VTTTalk glyph 680, char 0xffff */
/* GUI generated Mon Sep 28 15:17:26 2020 */

/* Y direction */
YAnchor(16)
YShift(16,3)
YDist(16,9,&gt;=2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 680, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 16
SHP[1], 3
SMD[], 128
MDRP[m&gt;RGr], 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="681">
      <instructions>
        <talk>/* VTTTalk glyph 681, char 0xffff */
/* GUI generated Mon Sep 28 15:17:36 2020 */

/* Y direction */
YAnchor(3)
YShift(3,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 681, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="682">
      <instructions>
        <talk>/* VTTTalk glyph 682, char 0xffff */
/* GUI generated Mon Sep 28 15:18:08 2020 */

/* Y direction */
YAnchor(3)
YShift(3,9)
YShift(3,15)
YAnchor(15)
YShift(15,21)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 682, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
SHP[1], 15
MDAP[R], 15
SHP[1], 21
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="683">
      <instructions>
        <talk>/* VTTTalk glyph 683, char 0xffff */
/* GUI generated Mon Sep 28 15:18:47 2020 */

/* Y direction */
YAnchor(9)
YDist(9,15,&gt;=3)
YShift(15,0)
YInterpolate(15,3,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 683, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SMD[], 192
MDRP[m&gt;RGr], 15
SHP[2], 0
IP[], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="684">
      <instructions>
        <talk>/* VTTTalk glyph 684, char 0xffff */
/* GUI generated Mon Sep 28 13:00:48 2020 */

/* Y direction */
YAnchor(28)
YShift(28,0)
YDist(28,10,&gt;=3)
YShift(10,17)
YIPAnchor(10,4,28)
YShift(4,1)
YShift(4,23)
YShift(23,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 684, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 28
SHP[1], 0
SMD[], 192
MDRP[m&gt;RGr], 10
SHP[2], 17
IP[], 4
MDAP[R], 4
SHP[1], 1
SHP[1], 23
SRP1[], 23
SHP[1], 26
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="685">
      <instructions>
        <talk>/* VTTTalk glyph 685, char 0xffff */
/* GUI generated Mon Sep 28 15:19:10 2020 */

/* Y direction */
YAnchor(17)
YShift(17,18)
YDist(17,10,&gt;=3)
YShift(10,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 685, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 17
SHP[1], 18
SMD[], 192
MDRP[m&gt;RGr], 10
SHP[2], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="686">
      <instructions>
        <talk>/* VTTTalk glyph 686, char 0xffff */
/* GUI generated Mon Sep 28 15:20:27 2020 */

/* Y direction */
YDownToGrid(8)
YAnchor(8)
YShift(8,7)
YShift(8,0)
YAnchor(0)
YShift(0,1)
YDist(8,4,&gt;=2)
YShift(4,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 686, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
RUTG[]
MDAP[R], 8
SHP[1], 7
SHP[1], 0
RTG[]
MDAP[R], 0
SHP[2], 1
SMD[], 128
SRP0[], 8
MDRP[m&gt;RGr], 4
SHP[2], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="687">
      <instructions>
        <talk>/* VTTTalk glyph 687, char 0xffff */
/* GUI generated Mon Sep 28 15:20:32 2020 */

/* Y direction */
YAnchor(1)
YShift(1,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 687, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="688">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 419, -10, -92
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="689">
      <instructions>
        <talk>/* VTTTalk glyph 689, char 0xffff */
/* GUI generated Mon Sep 28 15:20:48 2020 */

/* Y direction */
YAnchor(4)
YDist(4,9,&gt;=2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 689, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 4
SMD[], 128
MDRP[m&gt;RBl], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="690">
      <instructions>
        <talk>/* VTTTalk glyph 690, char 0xffff */
/* GUI generated Mon Sep 28 15:21:34 2020 */

/* Y direction */
YAnchor(4)
YShift(4,11)
YDist(4,8,&gt;=2)
YShift(8,7)
YShift(8,0)
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 690, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 11
SMD[], 128
MDRP[m&gt;RGr], 8
SHP[2], 7
SHP[2], 0
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="691">
      <instructions>
        <talk>/* VTTTalk glyph 691, char 0xffff */
/* GUI generated Mon Sep 28 15:22:20 2020 */

/* Y direction */
YAnchor(7)
YShift(7,8)
YDist(7,0,&gt;=2)
YInterpolate(0,6,7)
YShift(7,5)
YAnchor(5)
YShift(5,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 691, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 7
SHP[1], 8
SMD[], 128
MDRP[m&gt;RBl], 0
IP[], 6
SHP[1], 5
MDAP[R], 5
SHP[1], 4
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="692">
      <instructions>
        <talk>/* VTTTalk glyph 692, char 0xffff */
/* GUI generated Mon Sep 28 15:22:40 2020 */

/* Y direction */
YAnchor(9)
YShift(9,3)
YShift(9,21)
YAnchor(21)
YShift(21,15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 692, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
MDAP[R], 21
SHP[1], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="693">
      <instructions>
        <talk>/* VTTTalk glyph 693, char 0xffff */
/* GUI generated Mon Sep 28 15:22:52 2020 */

/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 693, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="694">
      <instructions>
        <talk>/* VTTTalk glyph 694, char 0xffff */
/* GUI generated Mon Sep 28 15:23:15 2020 */

/* Y direction */
YAnchor(8)
YDist(8,3,&gt;=2)
YShift(8,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 694, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 8
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[1], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="695">
      <instructions>
        <talk>/* VTTTalk glyph 695, char 0xffff */
/* GUI generated Mon Sep 28 15:23:50 2020 */

/* Y direction */
YAnchor(24)
YShift(24,5)
YShift(24,28)
YDist(24,18,&gt;=3)
YShift(18,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 695, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 24
SHP[1], 5
SHP[1], 28
SMD[], 192
MDRP[m&gt;RGr], 18
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="696">
      <instructions>
        <talk>/* VTTTalk glyph 696, char 0xffff */
/* GUI generated Mon Sep 28 15:24:03 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 696, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="697">
      <instructions>
        <talk>/* VTTTalk glyph 697, char 0xffff */
/* GUI generated Mon Sep 28 15:24:56 2020 */

/* Y direction */
YAnchor(16)
YShift(16,9)
YDist(16,3,&gt;=2)
YShift(3,22)
YShift(3,12)
YAnchor(12)
YShift(12,13)
YShift(16,25)
YAnchor(25)
YShift(25,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 697, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 16
SHP[1], 9
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[2], 22
SHP[2], 12
MDAP[R], 12
SHP[1], 13
SRP1[], 16
SHP[1], 25
MDAP[R], 25
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="698">
      <instructions>
        <talk>/* VTTTalk glyph 698, char 0xffff */
/* GUI generated Fri Oct  9 15:52:24 2020 */

/* Y direction */
YAnchor(3,179)
YShift(3,21)
YAnchor(9,13)
YShift(9,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 698, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 3, 179
SHP[1], 21
MIAP[R], 9, 13
SHP[1], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="699">
      <instructions>
        <talk>/* VTTTalk glyph 699, char 0xffff */
/* GUI generated Sat Oct 10 15:16:06 2020 */

/* Y direction */
YAnchor(8,179)
YAnchor(15,13)
YInterpolate(15,6,7,5,9,8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 699, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 8, 179
MIAP[R], 15, 13
SRP2[], 8
SLOOP[], 4
IP[], 6, 7, 5, 9
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="700">
      <instructions>
        <talk>/* VTTTalk glyph 700, char 0xffff */
/* GUI generated Sat Oct 10 15:45:40 2020 */

/* Y direction */
YAnchor(17,179)
YShift(17,10)
YAnchor(24,18)
YShift(24,4)
YAnchor(33,13)
YShift(33,0)
YAnchor(0)
YShift(0,1)
YShift(33,36)
YShift(36,27)
YShift(27,23)
YShift(27,30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 700, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 17, 179
SHP[1], 10
MIAP[R], 24, 18
SHP[1], 4
MIAP[R], 33, 13
SHP[1], 0
MDAP[R], 0
SHP[2], 1
SRP1[], 33
SHP[1], 36
SRP1[], 36
SHP[1], 27
SRP1[], 27
SHP[1], 23
SHP[1], 30
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="701">
      <instructions>
        <talk>/* VTTTalk glyph 701, char 0xffff */
/* GUI generated Sat Oct 10 15:52:48 2020 */

/* Y direction */
YAnchor(25,179)
YShift(25,18)
YAnchor(38)
YShift(38,3)
YIPAnchor(38,10,25)
YShift(10,11)
YShift(11,31)
YShift(31,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 701, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 25, 179
SHP[1], 18
MDAP[R], 38
SHP[1], 3
SRP2[], 25
IP[], 10
MDAP[R], 10
SHP[1], 11
SRP1[], 11
SHP[1], 31
SRP1[], 31
SHP[1], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="702">
      <instructions>
        <talk>/* VTTTalk glyph 702, char 0xffff */
/* GUI generated Sat Oct 10 15:54:10 2020 */

/* Y direction */
YAnchor(2,179)
YAnchor(9)
YIPAnchor(9,19,2)
YInterpolate(19,13,2)
YShift(19,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 702, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 2, 179
MDAP[R], 9
SRP2[], 2
IP[], 19
MDAP[R], 19
IP[], 13
SHP[1], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="703">
      <instructions>
        <talk>/* VTTTalk glyph 703, char 0xffff */
/* GUI generated Fri Oct  9 15:47:18 2020 */

/* Y direction */
YAnchor(7,178)
YShift(7,10)
YAnchor(21)
YShift(21,28)
YIPAnchor(7,15,21)
YShift(15,3)
YShift(15,14)
YShift(14,5)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 703, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 7, 178
SHP[1], 10
MDAP[R], 21
SHP[1], 28
SRP2[], 7
IP[], 15
MDAP[R], 15
SHP[1], 3
SHP[1], 14
SRP1[], 14
SHP[1], 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="704">
      <instructions>
        <talk>/* VTTTalk glyph 704, char 0xffff */
/* GUI generated Sat Oct 10 15:54:59 2020 */

/* Y direction */
YAnchor(3)
YShift(3,4)
YAnchor(29)
YShift(29,10)
YIPAnchor(3,23,29)
YShift(23,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 704, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
MDAP[R], 29
SHP[1], 10
SRP2[], 3
IP[], 23
MDAP[R], 23
SHP[1], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="705">
      <instructions>
        <talk>/* VTTTalk glyph 705, char 0xffff */
/* GUI generated Sat Oct 10 15:56:07 2020 */

/* Y direction */
YAnchor(1,178)
YShift(1,14)
YAnchor(14)
YShift(1,13)
YShift(13,3)
YShift(13,11)
YAnchor(7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 705, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 1, 178
SHP[1], 14
MDAP[R], 14
SRP1[], 1
SHP[1], 13
SRP1[], 13
SHP[1], 3
SHP[1], 11
MDAP[R], 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="706">
      <instructions>
        <talk>/* VTTTalk glyph 706, char 0xffff */
/* GUI generated Sat Oct 10 15:56:43 2020 */

/* Y direction */
YAnchor(22)
YShift(22,35)
YAnchor(47,13)
YShift(47,10)
YInterpolate(47,16,4,28,3,41,29,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 706, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 22
SHP[1], 35
MIAP[R], 47, 13
SHP[1], 10
SRP2[], 22
SLOOP[], 6
IP[], 16, 4, 28, 3, 41, 29
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="707">
      <instructions>
        <talk>/* VTTTalk glyph 707, char 0xffff */
/* GUI generated Sat Oct 10 15:57:04 2020 */

/* Y direction */
YAnchor(3)
YShift(3,4)
YAnchor(29,179)
YShift(29,10)
YIPAnchor(29,23,3)
YShift(23,16)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 707, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
MIAP[R], 29, 179
SHP[1], 10
SRP2[], 3
IP[], 23
MDAP[R], 23
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="708">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(3,5)
YShift(3,21)
ResYAnchor(9,13)
YShift(9,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 708, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 5, 114
SHP[2], 21
CALL[], 9, 13, 114
SHP[2], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="709">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(0,12)
YShift(0,15)
ResYAnchor(8,5)
YShift(8,5)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 709, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 12, 114
SHP[2], 15
CALL[], 8, 5, 114
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="710">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 15 17  DISABLED for a NON-LATIN glyph */
/* CVT 31 19  DISABLED for a NON-LATIN glyph */
/* CVT 32 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(31)	/* min */
YAnchor(15)	/* max */

/* YDir: Stroke #0 */
YShift(15,8) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(31,0)

Smooth()

</talk>
        <assembly>/* TT glyph 710, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 31
MDAP[R], 15
SHP[1], 8
SRP1[], 31
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="711">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(32,5)
YShift(32,25)
ResYAnchor(45,13)
YShift(45,10)
YIPAnchor(45,17,32)
YShift(17,18)
YShift(18,39,38)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 711, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 32, 5, 114
SHP[2], 25
CALL[], 45, 13, 114
SHP[2], 10
SRP1[], 32
IP[], 17
MDAP[R], 17
SHP[1], 18
SRP1[], 18
SHP[1], 39
SHP[1], 38
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="712">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */


/* Y direction */
ResYAnchor(2,5)
ResYAnchor(9,13)
YIPAnchor(9,19,2)
YInterpolate(9,13,2)
YShift(19,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 712, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 2, 5, 114
CALL[], 9, 13, 114
SRP1[], 2
IP[], 19
MDAP[R], 19
SRP1[], 2
IP[], 13
SRP1[], 19
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="713">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(18,4)
YShift(18,21)
ResYAnchor(32,13)
YShift(32,3)
YAnchor(3)
YShift(32,8)
YIPAnchor(32,26,18)
YShift(26,14)
YShift(14,25)
YShift(25,16)
YShift(16,15)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 713, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 18, 4, 114
SHP[2], 21
CALL[], 32, 13, 114
SHP[2], 3
MDAP[R], 3
SHP[2], 8
SRP1[], 18
IP[], 26
MDAP[R], 26
SHP[1], 14
SRP1[], 14
SHP[1], 25
SRP1[], 25
SHP[1], 16
SRP1[], 16
SHP[1], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="714">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(3,5)
YShift(3,4)
ResYAnchor(29,13)
YShift(29,10)
YIPAnchor(3,23,29)
YShift(23,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 714, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 5, 114
SHP[2], 4
CALL[], 29, 13, 114
SHP[2], 10
SRP2[], 3
IP[], 23
MDAP[R], 23
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="715">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(1,4)
YShift(1,13)
YShift(1,14)
YAnchor(14)
ResYAnchor(7,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 715, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 4, 114
SHP[2], 13
SHP[2], 14
MDAP[R], 14
CALL[], 7, 13, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="716">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(22,5)
YShift(22,35)
ResYAnchor(47,13)
YShift(47,10)
YInterpolate(47,16,4,28,3,41,29,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 716, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 22, 5, 114
SHP[2], 35
CALL[], 47, 13, 114
SHP[2], 10
SRP1[], 22
SLOOP[], 6
IP[], 16, 4, 28, 3, 41, 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="717">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */


/* Y direction */
YAnchor(0)
YShift(0,1)
ResYAnchor(26,5)
YShift(26,7)
YIPAnchor(26,20,0)
YShift(20,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 717, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
CALL[], 26, 5, 114
SHP[2], 7
SRP1[], 0
IP[], 20
MDAP[R], 20
SHP[1], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="718">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(3,5)
YShift(3,21)
ResYAnchor(9,13)
YShift(9,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 718, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 5, 114
SHP[2], 21
CALL[], 9, 13, 114
SHP[2], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="719">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(0,12)
YShift(0,15)
ResYAnchor(8,5)
YShift(8,5)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 719, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 12, 114
SHP[2], 15
CALL[], 8, 5, 114
SHP[2], 5
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="720">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(15,5)
YShift(15,8)
ResYAnchor(31,13)
YShift(31,0)
YAnchor(0)
YInterpolate(31,34,1,21,25,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 720, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 15, 5, 114
SHP[2], 8
CALL[], 31, 13, 114
SHP[2], 0
MDAP[R], 0
SRP1[], 15
SLOOP[], 4
IP[], 34, 1, 21, 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="721">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */


/* Y direction */
ResYAnchor(32,5)
YShift(32,25)
ResYAnchor(45,13)
YShift(45,10)
YIPAnchor(45,17,32)
YShift(17,18)
YShift(18,39,38)

/* X direction */

Smooth()



</talk>
        <assembly>/* TT glyph 721, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 32, 5, 114
SHP[2], 25
CALL[], 45, 13, 114
SHP[2], 10
SRP1[], 32
IP[], 17
MDAP[R], 17
SHP[1], 18
SRP1[], 18
SHP[1], 39
SHP[1], 38
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="722">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(2,5)
ResYAnchor(9,13)
YIPAnchor(9,19,2)
YInterpolate(9,13,2)
YShift(19,16)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 722, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 2, 5, 114
CALL[], 9, 13, 114
SRP1[], 2
IP[], 19
MDAP[R], 19
SRP1[], 2
IP[], 13
SRP1[], 19
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="723">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(18,4)
YShift(18,21)
ResYAnchor(32,13)
YShift(32,3)
YAnchor(3)
YShift(32,8)
YIPAnchor(32,26,18)
YShift(26,14)
YShift(14,25)
YShift(25,16)
YShift(16,15)

/* X direction */

Smooth()


</talk>
        <assembly>/* TT glyph 723, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 18, 4, 114
SHP[2], 21
CALL[], 32, 13, 114
SHP[2], 3
MDAP[R], 3
SHP[2], 8
SRP1[], 18
IP[], 26
MDAP[R], 26
SHP[1], 14
SRP1[], 14
SHP[1], 25
SRP1[], 25
SHP[1], 16
SRP1[], 16
SHP[1], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="724">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(3,5)
YShift(3,4)
ResYAnchor(29,13)
YShift(29,10)
YIPAnchor(3,23,29)
YShift(23,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 724, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 5, 114
SHP[2], 4
CALL[], 29, 13, 114
SHP[2], 10
SRP2[], 3
IP[], 23
MDAP[R], 23
SHP[1], 16
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="725">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(1,4)
YShift(1,13)
YShift(1,14)
YAnchor(14)
ResYAnchor(7,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 725, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 4, 114
SHP[2], 13
SHP[2], 14
MDAP[R], 14
CALL[], 7, 13, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="726">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

/* Y direction */
ResYAnchor(22,5)
YShift(22,35)
ResYAnchor(47,13)
YShift(47,10)
YInterpolate(47,16,4,28,3,41,29,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 726, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 22, 5, 114
SHP[2], 35
CALL[], 47, 13, 114
SHP[2], 10
SRP1[], 22
SLOOP[], 6
IP[], 16, 4, 28, 3, 41, 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="727">
      <instructions>
        <talk>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */


/* Y direction */
YAnchor(0)
YShift(0,1)
ResYAnchor(26,5)
YShift(26,7)
YIPAnchor(26,20,0)
YShift(20,13)

/* X direction */

Smooth()



</talk>
        <assembly>/* TT glyph 727, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
CALL[], 26, 5, 114
SHP[2], 7
SRP1[], 0
IP[], 20
MDAP[R], 20
SHP[1], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="728">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 667, -154, 48


/*SVTCA[Y]
CALL[], 33, 11, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 22, 29, 0, 59, 12, 87
SHC[2], 1*/

SVTCA[Y]
CALL[], 11, 2, 114
MDRP[m&gt;RWh], 33

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="729">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 659, 0, 0
OFFSET[R], 395, -273, 30


/*SVTCA[Y]
CALL[], 30, 3, 1, 1, 150, 86
SHC[2], 1
SVTCA[X]
CALL[], 19, 5, 1, 0, -221, 86
SHC[2], 1*/



SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="730">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 142, 0, 0
OFFSET[R], 728, 639, 0


/*SVTCA[Y]
CALL[], 45, 0, 0, 0, -260, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 26, 12, 1, 0, -79, 86
SHC[2], 2
SHC[2], 3*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="731">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 174, 0, 0
OFFSET[R], 729, 580, 0


/*SVTCA[Y]
CALL[], 48, 24, 1, 0, 391, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 36, 51, 5, 74, 20, 87
SHC[2], 2
SHC[2], 3*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="732">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4d0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 827, 231, 0


/*SVTCA[Y]
CALL[], 35, 4, 1, 1, 109, 86
SHC[2], 3
SVTCA[X]
CALL[], 38, 32, 0, 54, 8, 87
SHC[2], 3*/






SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="733">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x410 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="734">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4d2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 673, 254, 0


/*SVTCA[Y]
CALL[], 37, 4, 1, 1, 127, 86
SHC[2], 3
SHC[2], 4
SVTCA[X]
CALL[], 28, 46, 0, 53, 8, 87
SHC[2], 3
SHC[2], 4*/





SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 49
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="735">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf50e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 35, 0, 0
OFFSET[R], 670, 247, 0


/*SVTCA[Y]
CALL[], 28, 4, 1, 1, 163, 86
SHC[2], 3
SVTCA[X]
CALL[], 28, 30, 0, 53, 8, 87
SHC[2], 3*/





SVTCA[Y]
CALL[], 4, 3, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]








</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="736">
      <instructions>
        <talk>/* VTTTalk glyph 736, char 0x411 */
/* GUI generated Mon Sep 28 14:50:18 2020 */

/* Y direction */
ResYAnchor(21,8)
YShift(21,4)
ResYAnchor(27,2)
YShift(27,32)
YIPAnchor(27,13,21)
YShift(13,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 736, char 0x411 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 21, 8, 114
SHP[2], 4
CALL[], 27, 2, 114
SHP[2], 32
SRP1[], 21
IP[], 13
MDAP[R], 13
SHP[1], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="737">
      <instructions>
        <talk>/* VTTTalk glyph 737, char 0x427 */
/* GUI generated Mon Sep 28 14:51:00 2020 */

/* Y direction */
ResYAnchor(16,2)
YShift(16,27)
YAnchor(27)
ResYAnchor(20,8)
YIPAnchor(16,10,20)
YShift(10,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 737, char 0x427 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 16, 2, 114
SHP[2], 27
MDAP[R], 27
CALL[], 20, 8, 114
SRP2[], 16
IP[], 10
MDAP[R], 10
SHP[1], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="738">
      <instructions>
        <talk>/* VTTTalk glyph 738, char 0x4b6 */
/* GUI generated Mon Sep 28 14:53:39 2020 */

/* Y direction */
ResYAnchor(16,2)
YShift(16,32)
YAnchor(32)
ResYAnchor(25,8)
YDist(25,22,&gt;=)
YIPAnchor(25,10,16)
YShift(10,3)
YShift(3,7)
YShift(7,6)
YShift(25,20)
YShift(20,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 738, char 0x4b6 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 16, 2, 114
SHP[2], 32
MDAP[R], 32
CALL[], 25, 8, 114
MDRP[m&gt;RGr], 22
SRP2[], 16
IP[], 10
MDAP[R], 10
SHP[1], 3
SRP1[], 3
SHP[1], 7
SRP1[], 7
SHP[1], 6
SRP1[], 25
SHP[1], 20
SRP1[], 20
SHP[1], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="739">
      <instructions>
        <talk>/* VTTTalk glyph 739, char 0x4b8 */
/* GUI generated Mon Sep 28 14:54:21 2020 */

/* Y direction */
ResYAnchor(16,2)
YShift(16,27)
YAnchor(27)
ResYAnchor(20,8)
YIPAnchor(20,10,16)
YShift(10,36)
YAnchor(36)
YShift(10,3)
YShift(3,37)
YAnchor(37)
YShift(3,7)
YShift(7,6)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 739, char 0x4b8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 16, 2, 114
SHP[2], 27
MDAP[R], 27
CALL[], 20, 8, 114
SRP1[], 16
IP[], 10
MDAP[R], 10
SHP[1], 36
MDAP[R], 36
SRP1[], 10
SHP[1], 3
SRP1[], 3
SHP[1], 37
MDAP[R], 37
SRP1[], 3
SHP[1], 7
SRP1[], 7
SHP[1], 6
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="740">
      <instructions>
        <talk>/* VTTTalk glyph 740, char 0x414 */
/* GUI generated Mon Sep 28 14:55:47 2020 */

/* Y direction */
ResYAnchor(2,2)
YShift(2,12)
ResYAnchor(7,8)
YShift(7,8)
YShift(7,24)
YDist(7,22,&gt;=)
YShift(22,25)
YAnchor(25)
YShift(7,28)
YShift(28,17)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 740, char 0x414 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 2, 2, 114
SHP[2], 12
CALL[], 7, 8, 114
SHP[2], 8
SHP[2], 24
MDRP[m&gt;RWh], 22
SHP[2], 25
MDAP[R], 25
SRP1[], 7
SHP[1], 28
SRP1[], 28
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="741">
      <instructions>
        <talk>/* VTTTalk glyph 741, char 0xffff */
/* GUI generated Mon Sep 28 14:57:59 2020 */

/* Y direction */
ResYAnchor(2,2)
YShift(2,3)
YShift(2,9)
YShift(9,8)
YAnchor(13,8)
YShift(13,18)
YShift(13,5)
YShift(5,11)
YDist(13,12,&gt;=)
YShift(12,15)
YAnchor(15)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 741, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 2, 2, 114
SHP[2], 3
SHP[2], 9
SRP1[], 9
SHP[1], 8
MIAP[R], 13, 8
SHP[1], 18
SHP[1], 5
SRP1[], 5
SHP[1], 11
MDRP[m&gt;RBl], 12
SHP[2], 15
MDAP[R], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="742">
      <instructions>
        <talk>/* VTTTalk glyph 742, char 0x402 */
/* GUI generated Mon Sep 28 15:00:48 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,0)
YAnchor(0)
YShift(0,4)
YAnchor(4)
YShift(1,18)
YShift(18,6)
ResYAnchor(12,8)
YShift(12,23)
YAnchor(23)
YShift(23,24)
YIPAnchor(1,37,12)
YShift(37,30)
YShift(30,34)
YShift(34,33)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 742, char 0x402 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 0
MDAP[R], 0
SHP[1], 4
MDAP[R], 4
SHP[2], 18
SRP1[], 18
SHP[1], 6
CALL[], 12, 8, 114
SHP[2], 23
MDAP[R], 23
SHP[1], 24
SRP1[], 1
IP[], 37
MDAP[R], 37
SHP[1], 30
SRP1[], 30
SHP[1], 34
SRP1[], 34
SHP[1], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="743">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x405 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="744">
      <instructions>
        <talk>/* VTTTalk glyph 744, char 0x40f */
/* GUI generated Mon Sep 28 15:57:50 2020 */

/* Y direction */
ResYAnchor(4,8)
YShift(4,0)
YDist(4,1,&gt;=)
YShift(4,16)
ResYAnchor(10,2)
YShift(10,23)
YAnchor(23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 744, char 0x40f */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 4, 8, 114
SHP[2], 0
MDRP[m&gt;RGr], 1
SHP[1], 16
CALL[], 10, 2, 114
SHP[2], 23
MDAP[R], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="745">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf524 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 746, 0, 0
OFFSET[R], 673, -29, 0


/*SVTCA[Y]
CALL[], 51, 8, 1, 1, 131, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 42, 60, 19, 36, 10, 87
SHC[2], 2
SHC[2], 3*/





SVTCA[Y]
CALL[], 8, 3, 114
MDRP[m&gt;RWh], 63
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="746">
      <instructions>
        <talk>/* VTTTalk glyph 746, char 0x42d */
/* GUI generated Mon Sep 28 15:59:42 2020 */

/* Y direction */
ResYAnchor(8,3)
YShift(8,1)
YAnchor(1)
YShift(8,31)
ResYAnchor(14,9)
YShift(14,21)
YAnchor(21)
YShift(14,25)
YIPAnchor(14,35,8)
YShift(35,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 746, char 0x42d */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 8, 3, 114
SHP[2], 1
MDAP[R], 1
SHP[2], 31
CALL[], 14, 9, 114
SHP[2], 21
MDAP[R], 21
SHP[2], 25
SRP1[], 8
IP[], 35
MDAP[R], 35
SHP[1], 34
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="747">
      <instructions>
        <talk>/* VTTTalk glyph 747, char 0x424 */
/* GUI generated Mon Sep 28 16:00:04 2020 */

/* Y direction */
YAnchor(0)
YShift(0,14)
ResYAnchor(6,2)

YDist(6,20,&gt;=1)
YShift(20,28,21,41)

YDist(0,14,&gt;=1)
YShift(14,34,35,27)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 747, char 0x424 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 14
CALL[], 6, 2, 114
MDRP[m&gt;RGr], 20
SLOOP[], 3
SHP[2], 28, 21, 41
SRP0[], 0
MDRP[m&gt;RGr], 14
SLOOP[], 3
SHP[2], 34, 35, 27
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="748">
      <instructions>
        <talk>/* VTTTalk glyph 748, char 0x41b */
/* GUI generated Mon Sep 28 16:02:34 2020 */

/* Y direction */
ResYAnchor(2,2)
YShift(2,16)
ResYAnchor(10,8)
YAnchor(21,8)
YShift(21,28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 748, char 0x41b */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 2, 2, 114
SHP[2], 16
CALL[], 10, 8, 114
MIAP[R], 21, 8
SHP[1], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="749">
      <instructions>
        <talk>/* VTTTalk glyph 749, char 0xffff */
/* GUI generated Mon Sep 28 16:03:09 2020 */

/* Y direction */
YAnchor(0)
YShift(0,10)
YAnchor(10)
YAnchor(4)
YInterpolate(0,14,15,4)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 749, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 10
MDAP[R], 10
MDAP[R], 4
IP[], 14
IP[], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="750">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x41c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="751">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf522 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 746, 0, 0
OFFSET[R], 670, 2, 0


/*SVTCA[Y]
CALL[], 42, 8, 1, 1, 167, 86
SHC[2], 2
SVTCA[X]
CALL[], 42, 44, 19, 38, 10, 87
SHC[2], 2*/




SVTCA[Y]
CALL[], 8, 3, 114
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="752">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x41d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="753">
      <instructions>
        <talk>/* VTTTalk glyph 753, char 0x4a2 */
/* GUI generated Mon Sep 28 16:14:12 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,21)
YAnchor(21)
YShift(21,32)
YDist(21,34,&gt;=)
ResYAnchor(6,2)
YShift(6,28)
YAnchor(28)
YIPAnchor(6,19,0)
YShift(19,16)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 753, char 0x4a2 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 21
MDAP[R], 21
SHP[1], 32
MDRP[m&gt;RGr], 34
CALL[], 6, 2, 114
SHP[2], 28
MDAP[R], 28
SRP1[], 0
IP[], 19
MDAP[R], 19
SHP[1], 16
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="754">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x420 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 50, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="755">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x421 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="756">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4aa */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 684, 163, -18


/*SVTCA[Y]
CALL[], 59, 27, 0, 0, 77, 86
SHC[2], 1
SVTCA[X]
CALL[], 44, 37, 30, 26, 8, 87
SHC[2], 1*/

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="757">
      <instructions>
        <talk>/* VTTTalk glyph 757, char 0x413 */
/* GUI generated Mon Sep 28 16:15:24 2020 */

/* Y direction */
ResYAnchor(0,8)
ResYAnchor(6,2)
YShift(6,9)
YAnchor(9)
YShift(6,11)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 757, char 0x413 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 6, 2, 114
SHP[2], 9
MDAP[R], 9
SHP[2], 11
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="758">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x492 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 757, 19, 0
OFFSET[R], 593, 25, 49


/*SVTCA[Y]
CALL[], 19, 6, 2, 0, -669, 86
SHC[2], 1*/


/*SVTCA[X]
CALL[], 18, 21, 0, 24, 7, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="759">
      <instructions>
        <talk>/* VTTTalk glyph 759, char 0x490 */
/* GUI generated Mon Sep 28 16:16:04 2020 */

/* Y direction */
ResYAnchor(7,8)
ResYAnchor(13,2)
YShift(13,1)
YDist(13,15,&gt;=)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 759, char 0x490 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 7, 8, 114
CALL[], 13, 2, 114
SHP[2], 1
MDRP[m&gt;RWh], 15
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="760">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x403 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 757, 0, 0
OFFSET[R], 667, -61, 0


/*SVTCA[Y]
CALL[], 28, 6, 1, 1, 92, 86
SHC[2], 1
SVTCA[X]
CALL[], 17, 24, 0, 48, 7, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="761">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x425 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="762">
      <instructions>
        <talk>/* VTTTalk glyph 762, char 0x4b2 */
/* GUI generated Mon Sep 28 16:17:14 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,24)
YAnchor(24)
YShift(24,30)
YDist(24,31,&gt;=)
ResYAnchor(17,2)
YShift(17,8)
YAnchor(8)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 762, char 0x4b2 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 24
MDAP[R], 24
SHP[1], 30
MDRP[m&gt;RGr], 31
CALL[], 17, 2, 114
SHP[2], 8
MDAP[R], 8
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="763">
      <instructions>
        <talk>/* VTTTalk glyph 763, char 0x42a */
/* GUI generated Mon Sep 28 16:17:42 2020 */

/* Y direction */
ResYAnchor(12,8)
YShift(12,25)
ResYAnchor(20,2)
YShift(20,19)
YAnchor(19)
YIPAnchor(20,4,12)
YShift(4,22)
YShift(20,17)
YShift(17,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 763, char 0x42a */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 12, 8, 114
SHP[2], 25
CALL[], 20, 2, 114
SHP[2], 19
MDAP[R], 19
SRP1[], 12
IP[], 4
MDAP[R], 4
SHP[1], 22
SHP[2], 17
SRP1[], 17
SHP[1], 2
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="764">
      <instructions>
        <talk>/* VTTTalk glyph 764, char 0x4fe */
/* GUI generated Mon Sep 28 16:19:00 2020 */

/* Y direction */
YAnchor(0)
YShift(0,24)
YAnchor(24)
YAnchor(7)
YShift(7,17)
YIPAnchor(0,35,17)
YShift(35,12)
YShift(35,28)
YShift(35,32)
YShift(32,3)
YShift(32,21)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 764, char 0x4fe */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 24
MDAP[R], 24
MDAP[R], 7
SHP[1], 17
SRP1[], 17
IP[], 35
MDAP[R], 35
SHP[1], 12
SHP[1], 28
SHP[1], 32
SRP1[], 32
SHP[1], 3
SHP[1], 21
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="765">
      <instructions>
        <talk>/* VTTTalk glyph 765, char 0x418 */
/* GUI generated Mon Sep 28 16:19:41 2020 */

/* Y direction */
ResYAnchor(6,8)
YShift(6,20)
YAnchor(20)
ResYAnchor(12,2)
YShift(12,26)
YAnchor(26)
YInterpolate(6,0,1,4,3,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 765, char 0x418 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 6, 8, 114
SHP[2], 20
MDAP[R], 20
CALL[], 12, 2, 114
SHP[2], 26
MDAP[R], 26
SRP1[], 6
SLOOP[], 4
IP[], 0, 1, 4, 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="766">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x415 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="767">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4d6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 766, 0, 0
OFFSET[R], 827, 23, 0


/*SVTCA[Y]
CALL[], 35, 6, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 32, 0, 46, 7, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="768">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf510 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 766, 0, 0
OFFSET[R], 670, 47, 0


/*SVTCA[Y]
CALL[], 28, 6, 1, 1, 194, 86
SHC[2], 2
SVTCA[X]
CALL[], 28, 30, 0, 45, 7, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="769">
      <instructions>
        <talk>/* VTTTalk glyph 769, char 0x404 */
/* GUI generated Thu Oct  8 17:14:33 2020 */

/* Y direction */
ResYAnchor(11,3)
YShift(11,18)
YAnchor(18)
YShift(11,22)
ResYAnchor(36,9)
YShift(36,28)
YInterpolate(36,0,11)
YShift(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 769, char 0x404 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 11, 3, 114
SHP[2], 18
MDAP[R], 18
SHP[2], 22
CALL[], 36, 9, 114
SHP[2], 28
SRP1[], 11
IP[], 0
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="770">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x40d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 765, 0, 0
OFFSET[R], 666, 63, 0


/*SVTCA[Y]
CALL[], 45, 26, 1, 1, 92, 86
SHC[2], 3
SVTCA[X]
CALL[], 37, 44, 6, 33, 27, 87
SHC[2], 3*/



SVTCA[Y]
CALL[], 12, 2, 114
MDRP[m&gt;RWh], 45

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="771">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x401 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 140, 0, 0




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 37
MDRP[m&gt;RWh], 49

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="772">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x419 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 765, 0, 0
OFFSET[R], 827, 168, 0


/*SVTCA[Y]
CALL[], 41, 26, 1, 1, 140, 86
SHC[2], 3
SVTCA[X]
CALL[], 44, 38, 6, 39, 27, 87
SHC[2], 3*/




SVTCA[Y]
CALL[], 12, 2, 114
MDRP[m&gt;RWh], 41

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="773">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x406 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="774">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x408 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="775">
      <instructions>
        <talk>/* VTTTalk glyph 775, char 0x41a */
/* GUI generated Mon Sep 28 16:25:19 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,29)
ResYAnchor(6,2)
YShift(6,19)
YIPAnchor(0,14,6)
YShift(14,15)
YShift(15,25)
YShift(25,26)
YShift(26,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 775, char 0x41a */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 29
CALL[], 6, 2, 114
SHP[2], 19
SRP2[], 0
IP[], 14
MDAP[R], 14
SHP[1], 15
SRP1[], 15
SHP[1], 25
SRP1[], 25
SHP[1], 26
SRP1[], 26
SHP[1], 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="776">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="777">
      <instructions>
        <talk>/* VTTTalk glyph 777, char 0x4a0 */
/* GUI generated Mon Sep 28 16:25:10 2020 */

/* Y direction */
ResYAnchor(23,2)
YShift(23,5)
YShift(23,20)
YShift(20,26)
ResYAnchor(31,8)
YShift(31,15)
YAnchor(15)
YIPAnchor(31,0,23)
YShift(0,1)
YShift(1,11)
YShift(11,12)
YShift(12,9)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 777, char 0x4a0 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 23, 2, 114
SHP[2], 5
SHP[2], 20
SRP1[], 20
SHP[1], 26
CALL[], 31, 8, 114
SHP[2], 15
MDAP[R], 15
SRP1[], 23
IP[], 0
MDAP[R], 0
SHP[1], 1
SRP1[], 1
SHP[1], 11
SRP1[], 11
SHP[1], 12
SRP1[], 12
SHP[1], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="778">
      <instructions>
        <talk>/* VTTTalk glyph 778, char 0x49a */
/* GUI generated Mon Sep 28 16:25:03 2020 */

/* Y direction */
ResYAnchor(5,8)
YShift(5,34)
YAnchor(34)
YShift(34,1)
YDist(34,3,&gt;=)
ResYAnchor(11,2)
YShift(11,24)
YAnchor(24)
YIPAnchor(5,19,11)
YShift(19,20)
YShift(20,30)
YShift(30,31)
YShift(31,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 778, char 0x49a */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 5, 8, 114
SHP[2], 34
MDAP[R], 34
SHP[1], 1
MDRP[m&gt;RWh], 3
CALL[], 11, 2, 114
SHP[2], 24
MDAP[R], 24
SRP1[], 5
IP[], 19
MDAP[R], 19
SHP[1], 20
SRP1[], 20
SHP[1], 30
SRP1[], 30
SHP[1], 31
SRP1[], 31
SHP[1], 28
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="779">
      <instructions>
        <talk>/* VTTTalk glyph 779, char 0x49c */
/* GUI generated Mon Sep 28 16:26:50 2020 */

/* Y direction */
ResYAnchor(4,8)
YShift(4,33)
YAnchor(33)
ResYAnchor(10,2)
YShift(10,23)
YAnchor(23)
YIPAnchor(4,18,10)
YShift(18,1)
YAnchor(1)
YShift(18,19)
YShift(19,0)
YAnchor(0)
YShift(19,29)
YShift(29,30)
YShift(30,27)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 779, char 0x49c */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 4, 8, 114
SHP[2], 33
MDAP[R], 33
CALL[], 10, 2, 114
SHP[2], 23
MDAP[R], 23
SRP1[], 4
IP[], 18
MDAP[R], 18
SHP[1], 1
MDAP[R], 1
SRP1[], 18
SHP[1], 19
SRP1[], 19
SHP[1], 0
MDAP[R], 0
SRP1[], 19
SHP[1], 29
SRP1[], 29
SHP[1], 30
SRP1[], 30
SHP[1], 27
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="780">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x40c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 775, 0, 0
OFFSET[R], 667, 129, 0


/*SVTCA[Y]
CALL[], 44, 6, 1, 1, 92, 86
SHC[2], 3
SVTCA[X]
CALL[], 33, 40, 1, 85, 7, 87
SHC[2], 3*/




SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="781">
      <instructions>
        <talk>/* VTTTalk glyph 781, char 0x409 */
/* GUI generated Mon Sep 28 16:27:22 2020 */

/* Y direction */
ResYAnchor(23,8)
YShift(23,4)
YAnchor(34,8)
YShift(34,41)
ResYAnchor(47,2)
YShift(47,29)
YIPAnchor(47,15,23)
YShift(15,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 781, char 0x409 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 23, 8, 114
SHP[2], 4
MIAP[R], 34, 8
SHP[1], 41
CALL[], 47, 2, 114
SHP[2], 29
SRP1[], 23
IP[], 15
MDAP[R], 15
SHP[1], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="782">
      <instructions>
        <talk>/* VTTTalk glyph 782, char 0x40a */
/* GUI generated Mon Sep 28 16:27:53 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,27)
YShift(27,43)
ResYAnchor(6,2)
YShift(6,34)
YIPAnchor(6,16,0)
YShift(16,38)
YShift(16,19)
YShift(19,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 782, char 0x40a */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 27
SRP1[], 27
SHP[1], 43
CALL[], 6, 2, 114
SHP[2], 34
SRP1[], 0
IP[], 16
MDAP[R], 16
SHP[1], 38
SHP[1], 19
SRP1[], 19
SHP[1], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="783">
      <instructions>
        <talk>/* VTTTalk glyph 783, char 0x4e8 */
/* GUI generated Sat Oct 10 16:35:44 2020 */

/* Y direction */
ResYAnchor(3,3)
YShift(3,21)
ResYAnchor(9,9)
YShift(9,15)
YIPAnchor(3,29,9)
YShift(29,26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 783, char 0x4e8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 3, 114
SHP[2], 21
CALL[], 9, 9, 114
SHP[2], 15
SRP2[], 3
IP[], 29
MDAP[R], 29
SHP[1], 26
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="784">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf51a */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 827, 183, 0


/*SVTCA[Y]
CALL[], 31, 3, 1, 1, 121, 86
SHC[2], 2
SVTCA[X]
CALL[], 34, 28, 11, 42, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="785">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x41e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="786">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4e6 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 673, 179, 0


/*SVTCA[Y]
CALL[], 33, 3, 1, 1, 139, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 24, 42, 11, 40, 5, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 45
MDRP[m&gt;RWh], 33

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="787">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf518 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 670, 193, 0


/*SVTCA[Y]
CALL[], 24, 3, 1, 1, 175, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 26, 11, 40, 5, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 3, 3, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="788">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4c0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="789">
      <instructions>
        <talk>/* VTTTalk glyph 789, char 0x41f */
/* GUI generated Wed Sep 30 16:45:40 2020 */

/* Y direction */
ResYAnchor(0,8)
YShift(0,14)
YAnchor(14)
ResYAnchor(6,2)
YShift(6,20)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 789, char 0x41f */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 14
MDAP[R], 14
CALL[], 6, 2, 114
SHP[2], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="790">
      <instructions>
        <talk>/* VTTTalk glyph 790, char 0x4d8 */
/* GUI generated Wed Sep 30 16:46:36 2020 */

/* Y direction */
ResYAnchor(20,3)
YShift(20,9)
YShift(20,13)
YAnchor(13)
ResYAnchor(26,11)
YShift(26,39)
YIPAnchor(20,5,26)
YShift(5,2,32,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 790, char 0x4d8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 20, 3, 114
SHP[2], 9
SHP[2], 13
MDAP[R], 13
CALL[], 26, 11, 114
SHP[2], 39
SRP2[], 20
IP[], 5
MDAP[R], 5
SLOOP[], 3
SHP[1], 2, 32, 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="791">
      <instructions>
        <talk>/* VTTTalk glyph 791, char 0x428 */
/* GUI generated Wed Sep 30 16:49:49 2020 */

/* Y direction */
ResYAnchor(14,8)
YShift(14,26)
YShift(26,0)
ResYAnchor(20,2)
YShift(20,7)
YAnchor(7)
YShift(20,32)
YAnchor(32)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 791, char 0x428 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 14, 8, 114
SHP[2], 26
SRP1[], 26
SHP[1], 0
CALL[], 20, 2, 114
SHP[2], 7
MDAP[R], 7
SHP[2], 32
MDAP[R], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="792">
      <instructions>
        <talk>/* VTTTalk glyph 792, char 0x429 */
/* GUI generated Wed Sep 30 16:50:16 2020 */

/* Y direction */
ResYAnchor(1,8)
YDist(1,36,&gt;=)
YShift(1,13)
YShift(13,23)
YShift(13,34)
ResYAnchor(7,2)
YShift(7,19)
YAnchor(19)
YShift(7,30)
YAnchor(30)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 792, char 0x429 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 8, 114
MDRP[m&gt;RGr], 36
SHP[1], 13
SRP1[], 13
SHP[1], 23
SHP[1], 34
CALL[], 7, 2, 114
SHP[2], 19
MDAP[R], 19
SHP[2], 30
MDAP[R], 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="793">
      <instructions>
        <talk>/* VTTTalk glyph 793, char 0x4ba */
/* GUI generated Wed Sep 30 16:50:42 2020 */

/* Y direction */
ResYAnchor(20,8)
YShift(20,17)
YAnchor(17)
ResYAnchor(26,2)
YIPAnchor(26,10,20)
YShift(10,3)
YShift(3,7)
YShift(7,6)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 793, char 0x4ba */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 20, 8, 114
SHP[2], 17
MDAP[R], 17
CALL[], 26, 2, 114
SRP1[], 20
IP[], 10
MDAP[R], 10
SHP[1], 3
SRP1[], 3
SHP[1], 7
SRP1[], 7
SHP[1], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="794">
      <instructions>
        <talk>/* VTTTalk glyph 794, char 0x42c */
/* GUI generated Wed Sep 30 16:51:25 2020 */

/* Y direction */
ResYAnchor(7,8)
YShift(7,23)
ResYAnchor(13,2)
YShift(13,11)
YShift(11,16)
YIPAnchor(13,18,7)
YShift(18,20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 794, char 0x42c */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 7, 8, 114
SHP[2], 23
CALL[], 13, 2, 114
SHP[2], 11
SRP1[], 11
SHP[1], 16
SRP1[], 7
IP[], 18
MDAP[R], 18
SHP[1], 20
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="795">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x422 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="796">
      <instructions>
        <talk>/* VTTTalk glyph 796, char 0x4ac */
/* GUI generated Wed Sep 30 16:51:47 2020 */

/* Y direction */
ResYAnchor(1,8)
YDist(1,20,&gt;=)
YShift(1,18)
YShift(18,3)
ResYAnchor(10,2)
YShift(10,7)
YShift(7,15)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 796, char 0x4ac */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 8, 114
MDRP[m&gt;RGr], 20
SHP[1], 18
SRP1[], 18
SHP[1], 3
CALL[], 10, 2, 114
SHP[2], 7
SRP1[], 7
SHP[1], 15
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="797">
      <instructions>
        <talk>/* VTTTalk glyph 797, char 0x426 */
/* GUI generated Wed Sep 30 17:15:03 2020 */

/* Y direction */
ResYAnchor(1,8)
YDist(1,26,&gt;=)
YShift(1,13)
YShift(13,24)
ResYAnchor(7,2)
YShift(7,20)
YAnchor(20)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 797, char 0x426 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 8, 114
MDRP[m&gt;RGr], 26
SHP[1], 13
SRP1[], 13
SHP[1], 24
CALL[], 7, 2, 114
SHP[2], 20
MDAP[R], 20
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="798">
      <instructions>
        <talk>/* VTTTalk glyph 798, char 0x40b */
/* GUI generated Wed Sep 30 17:15:29 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,18)
YShift(18,6)
ResYAnchor(12,8)
YIPAnchor(1,30,12)
YShift(30,23)
YShift(23,27)
YShift(27,26)
YShift(12,37)
YAnchor(37)
YShift(37,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 798, char 0x40b */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 18
SRP1[], 18
SHP[1], 6
CALL[], 12, 8, 114
SRP2[], 1
IP[], 30
MDAP[R], 30
SHP[1], 23
SRP1[], 23
SHP[1], 27
SRP1[], 27
SHP[1], 26
SRP1[], 12
SHP[1], 37
MDAP[R], 37
SHP[1], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="799">
      <instructions>
        <talk>/* VTTTalk glyph 799, char 0x423 */
/* GUI generated Wed Sep 30 17:16:06 2020 */

/* Y direction */
ResYAnchor(3,8)
YShift(3,10)
ResYAnchor(26,2)
YShift(26,18)
YAnchor(18)
YInterpolate(3,22,0,31,13,26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 799, char 0x423 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 3, 8, 114
SHP[2], 10
CALL[], 26, 2, 114
SHP[2], 18
MDAP[R], 18
SRP1[], 3
SLOOP[], 4
IP[], 22, 0, 31, 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="800">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4f0 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 799, 0, 0
OFFSET[R], 673, 39, 0


/*SVTCA[Y]
CALL[], 41, 17, 1, 1, 158, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 32, 50, 6, 35, 18, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 26, 2, 114
MDRP[m&gt;RWh], 53
MDRP[m&gt;RWh], 41

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="801">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4f2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 799, 0, 0
OFFSET[R], 676, 160, 0


/*SVTCA[Y]
CALL[], 36, 17, 1, 1, 93, 86
SHC[2], 2
SHC[2], 3
SVTCA[X]
CALL[], 37, 44, 6, 41, 18, 87
SHC[2], 2
SHC[2], 3*/



SVTCA[Y]
CALL[], 26, 2, 114
MDRP[m&gt;RWh], 48
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="802">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4ee */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 799, 0, 0
OFFSET[R], 670, 50, 0


/*SVTCA[Y]
CALL[], 32, 26, 1, 1, 194, 86
SHC[2], 2
SVTCA[X]
CALL[], 32, 34, 6, 35, 18, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 26, 2, 114
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="803">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x40e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 799, 0, 0
OFFSET[R], 827, 11, 0


/*SVTCA[Y]
CALL[], 39, 17, 1, 1, 140, 86
SHC[2], 2
SVTCA[X]
CALL[], 42, 36, 6, 35, 18, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 26, 2, 114
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="804">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4ae */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="805">
      <instructions>
        <talk>/* VTTTalk glyph 805, char 0x4b0 */
/* GUI generated Mon Oct  5 10:05:14 2020 */

/* Y direction */
ResYAnchor(7,4)
YShift(7,17)
YAnchor(17)
ResYAnchor(25,8)
YIPAnchor(25,5,7)
YInterpolate(5,12,7)
YShift(5,2)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 805, char 0x4b0 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 7, 4, 114
SHP[2], 17
MDAP[R], 17
CALL[], 25, 8, 114
SRP1[], 7
IP[], 5
MDAP[R], 5
SRP2[], 7
IP[], 12
SHP[1], 2
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="806">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x412 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 36, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="807">
      <instructions>
        <talk>/* VTTTalk glyph 807, char 0x42f */
/* GUI generated Mon Oct  5 10:13:24 2020 */

/* Y direction */
ResYAnchor(4,8)
YShift(4,24)
YAnchor(24)
ResYAnchor(16,2)
YShift(16,30)
YIPAnchor(16,10,4)
YShift(10,36)
YShift(36,1)
YShift(1,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 807, char 0x42f */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 4, 8, 114
SHP[2], 24
MDAP[R], 24
CALL[], 16, 2, 114
SHP[2], 30
SRP1[], 4
IP[], 10
MDAP[R], 10
SHP[1], 36
SRP1[], 36
SHP[1], 1
SRP1[], 1
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="808">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf528 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 807, 0, 0
OFFSET[R], 670, 177, 0


/*SVTCA[Y]
CALL[], 38, 16, 1, 1, 194, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 40, 4, 45, 17, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 16, 2, 114
MDRP[m&gt;RWh], 38

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="809">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x42b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 794, 0, 0
OFFSET[R], 43, 1130, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="810">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x407 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 144, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="811">
      <instructions>
        <talk>/* VTTTalk glyph 811, char 0x42e */
/* GUI generated Sat Oct 10 16:09:01 2020 */

/* Y direction */
ResYAnchor(6,2)
YAnchor(13,8)
YIPAnchor(13,14,6)
YShift(14,15)
ResYAnchor(21,3)
YShift(21,39)
ResYAnchor(27,9)
YShift(27,33)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 811, char 0x42e */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 6, 2, 114
MIAP[R], 13, 8
IP[], 14
MDAP[R], 14
SHP[1], 15
CALL[], 21, 3, 114
SHP[2], 39
CALL[], 27, 9, 114
SHP[2], 33
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="812">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf52c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 811, 0, 0
OFFSET[R], 670, 410, 0


/*SVTCA[Y]
CALL[], 42, 6, 1, 1, 194, 86
SHC[2], 4
SVTCA[X]
CALL[], 42, 44, 0, 37, 23, 87
SHC[2], 4*/






SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="813">
      <instructions>
        <talk>/* VTTTalk glyph 813, char 0x417 */
/* GUI generated Mon Oct  5 10:15:44 2020 */

/* Y direction */
YAnchor(0)
YShift(0,7)
YAnchor(7)
YShift(0,11)
YAnchor(37)
YShift(37,26)
YShift(37,30)
YAnchor(30)
YIPAnchor(37,17,0)
YShift(17,20)
YShift(20,43,44)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 813, char 0x417 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
MDAP[R], 7
SHP[2], 11
MDAP[R], 37
SHP[1], 26
SHP[1], 30
MDAP[R], 30
SRP1[], 37
IP[], 17
MDAP[R], 17
SHP[1], 20
SRP1[], 20
SHP[1], 43
SHP[1], 44
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="814">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x498 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 813, 0, 0
OFFSET[R], 684, 70, 0


/*SVTCA[Y]
CALL[], 78, 0, 0, 0, 78, 86
SHC[2], 1
SVTCA[X]
CALL[], 63, 56, 5, 24, 40, 87
SHC[2], 1*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="815">
      <instructions>
        <talk>/* VTTTalk glyph 815, char 0x416 */
/* GUI generated Mon Oct  5 10:17:14 2020 */

/* Y direction */
ResYAnchor(38,2)
YShift(38,6)
YAnchor(6)
YShift(38,19)
YAnchor(19)
ResYAnchor(48,8)
YShift(48,0)
YAnchor(0)
YShift(48,29)
YAnchor(29)
YShift(48,14)
YAnchor(14)
YShift(14,15)
YShift(14,25)
YShift(14,26)
YShift(14,33)
YShift(14,43)
YShift(14,44)
YShift(14,51)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 815, char 0x416 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
CALL[], 38, 2, 114
SHP[2], 6
MDAP[R], 6
SHP[2], 19
MDAP[R], 19
CALL[], 48, 8, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 29
MDAP[R], 29
SHP[2], 14
MDAP[R], 14
SHP[1], 15
SHP[1], 25
SHP[1], 26
SHP[1], 33
SHP[1], 43
SHP[1], 44
SHP[1], 51
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="816">
      <instructions>
        <talk>/* VTTTalk glyph 816, char 0xffff */
/* GUI generated Mon Oct  5 10:18:32 2020 */

/* Y direction */
YAnchor(0)
YShift(0,26)
YShift(0,41)
ResYAnchor(6,2)
YShift(6,17)
YShift(6,33)

YInterpolate(6,21,14,30,37,38,45,22,23,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 816, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MDAP[R], 0
SHP[2], 26
SHP[2], 41
CALL[], 6, 2, 114
SHP[2], 17
SHP[2], 33
SRP1[], 0
SLOOP[], 8
IP[], 21, 14, 30, 37, 38, 45, 22, 23
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="817">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4c1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 815, 0, 0
OFFSET[R], 827, 348, 0


/*SVTCA[Y]
CALL[], 59, 6, 1, 1, 140, 86
SHC[2], 5
SVTCA[X]
CALL[], 62, 56, 48, 55, 7, 87
SHC[2], 5*/





SVTCA[Y]
CALL[], 38, 2, 114
MDRP[m&gt;RWh], 59

IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="818">
      <instructions>
        <talk>/* VTTTalk glyph 818, char 0x496 */
/* GUI generated Mon Oct  5 10:22:59 2020 */

/* Y direction */
YAnchor(29,8)
YShift(29,52)
YShift(52,27)
YDist(29,53,&gt;=)
ResYAnchor(37,2)
YShift(37,6)
YAnchor(6)
YShift(37,19)
YAnchor(19)
ResYAnchor(47,8)
YShift(47,0)
YAnchor(0)

YInterpolate(37,14,15,32,42,50,43,25,26)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 818, char 0x496 */
/* VTT 6.33 compiler Tue Oct 13 13:17:11 2020 */
SVTCA[Y]
MIAP[R], 29, 8
SHP[1], 52
SRP1[], 52
SHP[1], 27
MDRP[m&gt;RGr], 53
CALL[], 37, 2, 114
SHP[2], 6
MDAP[R], 6
SHP[2], 19
MDAP[R], 19
CALL[], 47, 8, 114
SHP[2], 0
MDAP[R], 0
SRP1[], 37
SRP2[], 26
SLOOP[], 7
IP[], 14, 15, 32, 42, 50, 43, 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="819">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4dc */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 815, 0, 0
OFFSET[R], 673, 383, 0


/*SVTCA[Y]
CALL[], 61, 6, 1, 1, 158, 86
SHC[2], 5
SHC[2], 6
SVTCA[X]
CALL[], 52, 70, 48, 54, 7, 87
SHC[2], 5
SHC[2], 6*/


SVTCA[Y]
CALL[], 38, 2, 114
MDRP[m&gt;RWh], 61
MDRP[m&gt;RWh], 73

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="820">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4d1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 826, 16, 0
USEMYMETRICS[]
OFFSET[R], 67, 0, 0


/*SVTCA[Y]
CALL[], 4, 20, 1, 1, 186, 86
SHC[2], 0
SVTCA[X]
CALL[], 7, 1, 14, 51, 23, 87
SHC[2], 0*/

SVTCA[Y]
CALL[], 17, 6, 114
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="821">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x430 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="822">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4d3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 105, 34, 0
USEMYMETRICS[]
OFFSET[R], 67, 0, 0


/*SVTCA[Y]
CALL[], 9, 30, 1, 1, 203, 86
SHC[2], 0
SHC[2], 1
SVTCA[X]
CALL[], 12, 6, 24, 49, 33, 87
SHC[2], 0
SHC[2], 1*/


SVTCA[Y]
CALL[], 27, 6, 114
MDRP[m&gt;RWh], 21
MDRP[m&gt;RWh], 9

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="823">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf50f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 67, 0, 0
OFFSET[R], 112, 38, 0


/*SVTCA[Y]
CALL[], 37, 6, 1, 1, 215, 86
SHC[2], 2
SVTCA[X]
CALL[], 37, 39, 0, 49, 9, 87
SHC[2], 2
*/

SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="824">
      <instructions>
        <talk>/* VTTTalk glyph 824, char 0x431 */
/* GUI generated Thu Oct  1 16:05:13 2020 */

/* Y direction */
ResYAnchor(16,6)
YShift(16,9)
YShift(9,13)
YShift(13,12)
ResYAnchor(22,11)
YShift(22,3)
ResYAnchor(31)
YInterpolate(16,35,28,31)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 824, char 0x431 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 16, 6, 114
SHP[2], 9
SRP1[], 9
SHP[1], 13
SRP1[], 13
SHP[1], 12
CALL[], 22, 11, 114
SHP[2], 3
CALL[], 31, -1, 114
SRP2[], 16
IP[], 35
IP[], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="825">
      <instructions>
        <talk>/* VTTTalk glyph 825, char 0xffff */
/* GUI generated Thu Oct  1 16:07:34 2020 */

/* Y direction */
YAnchor(10,16)
YDist(10,14,&gt;=)
YShift(10,19)
ResYAnchor(31,11)
YShift(31,37)
YInterpolate(31,43,3,25,22,7,10)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 825, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
MIAP[R], 10, 16
MDRP[m&gt;RWh], 14
SHP[1], 19
CALL[], 31, 11, 114
SHP[2], 37
SRP1[], 10
SLOOP[], 5
IP[], 43, 3, 25, 22, 7
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="826">
      <instructions>
        <talk>/* VTTTalk glyph 826, char 0xffff */
/* GUI generated Mon Sep 28 15:09:53 2020 */

/* Y direction */
YAnchor(4)
YShift(4,11)
YDist(4,8,&gt;=)
YShift(8,7)
YShift(8,0)
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 826, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 11
MDRP[m&gt;RGr], 8
SHP[2], 7
SHP[2], 0
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="827">
      <instructions>
        <talk>/* VTTTalk glyph 827, char 0xffff */
/* GUI generated Mon Sep 28 15:10:29 2020 */

/* Y direction */
YAnchor(7)
YShift(7,0)
YDist(7,11,&gt;=)
YShift(11,10)
YShift(11,3)
YAnchor(3)
YShift(3,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 827, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
MDAP[R], 7
SHP[1], 0
MDRP[m&gt;RGr], 11
SHP[2], 10
SHP[2], 3
MDAP[R], 3
SHP[1], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="828">
      <instructions>
        <talk>/* VTTTalk glyph 828, char 0x447 */
/* GUI generated Thu Oct  1 16:09:15 2020 */

/* Y direction */
ResYAnchor(4,6)
YShift(4,1)
ResYAnchor(20,11)
YShift(20,28)
ResYAnchor(25,7)
YIPAnchor(25,17,20)
YShift(17,10)
YShift(10,14)
YShift(14,13)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 828, char 0x447 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 4, 6, 114
SHP[2], 1
CALL[], 20, 11, 114
SHP[2], 28
CALL[], 25, 7, 114
SRP1[], 20
IP[], 17
MDAP[R], 17
SHP[1], 10
SRP1[], 10
SHP[1], 14
SRP1[], 14
SHP[1], 13
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="829">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 828, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="830">
      <instructions>
        <talk>/* VTTTalk glyph 830, char 0x4b7 */
/* GUI generated Thu Oct  1 16:11:16 2020 */

/* Y direction */
ResYAnchor(4,6)
YShift(4,1)
YAnchor(20,10)
YShift(20,30)
YDist(20,33,&gt;=)
YShift(20,35)
YShift(35,28)
ResYAnchor(25,7)
YIPAnchor(25,17,20)
YShift(17,10)
YShift(10,14)
YShift(14,13)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 830, char 0x4b7 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 4, 6, 114
SHP[2], 1
MIAP[R], 20, 10
SHP[1], 30
MDRP[m&gt;RGr], 33
SHP[1], 35
SRP1[], 35
SHP[1], 28
CALL[], 25, 7, 114
SRP1[], 20
IP[], 17
MDAP[R], 17
SHP[1], 10
SRP1[], 10
SHP[1], 14
SRP1[], 14
SHP[1], 13
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="831">
      <instructions>
        <talk>/* VTTTalk glyph 831, char 0x4b9 */
/* GUI generated Thu Oct  1 16:13:50 2020 */

/* Y direction */
ResYAnchor(4,6)
ResYAnchor(28,11)
ResYAnchor(33,7)
YIPAnchor(33,25,28)
YShift(25,41)
YAnchor(41)
YShift(25,10)
YShift(10,42)
YAnchor(42)
YShift(10,18)
YShift(18,17)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 831, char 0x4b9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 4, 6, 114
CALL[], 28, 11, 114
CALL[], 33, 7, 114
SRP1[], 28
IP[], 25
MDAP[R], 25
SHP[1], 41
MDAP[R], 41
SRP1[], 25
SHP[1], 10
SRP1[], 10
SHP[1], 42
MDAP[R], 42
SRP1[], 10
SHP[1], 18
SRP1[], 18
SHP[1], 17
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="832">
      <instructions>
        <talk>/* VTTTalk glyph 832, char 0x434 */
/* GUI generated Thu Oct  1 16:14:47 2020 */

/* Y direction */
ResYAnchor(3,7)
YShift(3,10)
YAnchor(30)
YShift(30,22)
ResYAnchor(36,11)
YShift(36,16)
YInterpolate(36,33,19,7,6,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 832, char 0x434 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 3, 7, 114
SHP[2], 10
MDAP[R], 30
SHP[1], 22
CALL[], 36, 11, 114
SHP[2], 16
SRP1[], 3
SLOOP[], 4
IP[], 33, 19, 7, 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="833">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="834">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="835">
      <instructions>
        <talk>/* VTTTalk glyph 835, char 0x452 */
/* GUI generated Thu Oct  1 16:16:24 2020 */

/* Y direction */
YAnchor(0,11)
YAnchor(6,0)
ResYAnchor(28,7)
YDist(28,12,&gt;=)
YShift(12,13)
YShift(28,21)
YShift(21,25)
YShift(25,24)
ResYAnchor(35,14)
YShift(35,38)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 835, char 0x452 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
MIAP[R], 0, 11
MIAP[R], 6, 0
CALL[], 28, 7, 114
MDRP[m&gt;RGr], 12
SHP[2], 13
SHP[1], 21
SRP1[], 21
SHP[1], 25
SRP1[], 25
SHP[1], 24
CALL[], 35, 14, 114
SHP[2], 38
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="836">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x455 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="837">
      <instructions>
        <talk>/* VTTTalk glyph 837, char 0x45f */
/* GUI generated Thu Oct  1 16:18:02 2020 */

/* Y direction */
YAnchor(2,10)
YDist(2,4,&gt;=2)
ResYAnchor(5,11)
YShift(5,13)
ResYAnchor(10,7)
ResYAnchor(20,6)
YShift(20,17)
ResYAnchor(33,10)
YShift(33,26)
YShift(26,30)
YShift(30,29)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 837, char 0x45f */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
MIAP[R], 2, 10
SMD[], 128
MDRP[m&gt;RBl], 4
CALL[], 5, 11, 114
SHP[2], 13
CALL[], 10, 7, 114
CALL[], 20, 6, 114
SHP[2], 17
CALL[], 33, 10, 114
SHP[2], 26
SRP1[], 26
SHP[1], 30
SRP1[], 30
SHP[1], 29
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="838">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf525 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 839, 0, 0
OFFSET[R], 826, -153, 0


/*SVTCA[Y]
CALL[], 39, 29, 1, 1, 136, 86
SHC[2], 2
SVTCA[X]
CALL[], 42, 36, 7, 44, 32, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 29, 7, 114
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]







</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="839">
      <instructions>
        <talk>/* VTTTalk glyph 839, char 0x44d */
/* GUI generated Thu Oct  1 16:20:32 2020 */

/* Y direction */
ResYAnchor(4,11)
YShift(4,15)
ResYAnchor(29,7)
YShift(29,21)
YInterpolate(4,1,29)
YShift(1,3)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 839, char 0x44d */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 4, 11, 114
SHP[2], 15
CALL[], 29, 7, 114
SHP[2], 21
SRP2[], 4
IP[], 1
SRP1[], 1
SHP[1], 3
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="840">
      <instructions>
        <talk>/* VTTTalk glyph 840, char 0x444 */
/* GUI generated Thu Oct  1 16:25:43 2020 */

/* Y direction */
ResYAnchor(6,14)
ResYAnchor(16,0)
ResYAnchor(35,11)
YShift(35,27)
YShift(27,28)
YShift(28,2)
YShift(35,34)
YShift(34,8)
ResYAnchor(41,7)
YShift(41,21)
YShift(21,20)
YShift(20,18)
YShift(41,42)
YShift(42,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 840, char 0x444 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 6, 14, 114
CALL[], 16, 0, 114
CALL[], 35, 11, 114
SHP[2], 27
SRP1[], 27
SHP[1], 28
SRP1[], 28
SHP[1], 2
SHP[2], 34
SRP1[], 34
SHP[1], 8
CALL[], 41, 7, 114
SHP[2], 21
SRP1[], 21
SHP[1], 20
SRP1[], 20
SHP[1], 18
SHP[2], 42
SRP1[], 42
SHP[1], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="841">
      <instructions>
        <talk>/* VTTTalk glyph 841, char 0x43b */
/* GUI generated Thu Oct  1 16:26:42 2020 */

/* Y direction */
YAnchor(3)
YShift(3,10)
YAnchor(10)
YShift(10,16)
ResYAnchor(23,6)
YInterpolate(23,20,6,3)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 841, char 0x43b */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
MDAP[R], 3
SHP[1], 10
MDAP[R], 10
SHP[1], 16
CALL[], 23, 6, 114
SRP1[], 3
IP[], 20
IP[], 6
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="842">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 841, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="843">
      <instructions>
        <talk>/* VTTTalk glyph 843, char 0x43c */
/* GUI generated Thu Oct  1 16:27:25 2020 */

/* Y direction */
ResYAnchor(3,10)
YShift(3,36)
YAnchor(36)
ResYAnchor(10,11)
ResYAnchor(23,6)
YShift(23,31)
YInterpolate(3,27,28,5,0,23)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 843, char 0x43c */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 3, 10, 114
SHP[2], 36
MDAP[R], 36
CALL[], 10, 11, 114
CALL[], 23, 6, 114
SHP[2], 31
SRP2[], 3
SLOOP[], 4
IP[], 27, 28, 5, 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="844">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf523 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 839, 0, 0
OFFSET[R], 112, -127, 0


/*SVTCA[Y]
CALL[], 35, 29, 1, 1, 165, 86
SHC[2], 2
SVTCA[X]
CALL[], 35, 37, 7, 42, 32, 87
SHC[2], 2
*/



SVTCA[Y]
CALL[], 29, 7, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]








</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="845">
      <instructions>
        <talk>/* VTTTalk glyph 845, char 0x43d */
/* GUI generated Thu Oct  1 16:29:44 2020 */

/* Y direction */
ResYAnchor(5,6)
ResYAnchor(11,11)
YShift(11,12)
YAnchor(12)
YIPAnchor(11,28,5)
YShift(28,23)
YShift(28,25)
YShift(25,26)
ResYAnchor(17,7)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 845, char 0x43d */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 5, 6, 114
CALL[], 11, 11, 114
SHP[2], 12
MDAP[R], 12
SRP1[], 5
IP[], 28
MDAP[R], 28
SHP[1], 23
SHP[1], 25
SRP1[], 25
SHP[1], 26
CALL[], 17, 7, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="846">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 845, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="847">
      <instructions>
        <talk>/* VTTTalk glyph 847, char 0x4a3 */
/* GUI generated Thu Oct  1 16:31:37 2020 */

/* Y direction */
ResYAnchor(5,6)
ResYAnchor(11,11)
YIPAnchor(11,28,5)
YShift(28,23)
YShift(28,25)
YShift(25,26)
YAnchor(12,10)
YDist(12,32,&gt;=)
YShift(12,20)
YShift(20,29)
ResYAnchor(17,7)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 847, char 0x4a3 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 5, 6, 114
CALL[], 11, 11, 114
SRP1[], 5
IP[], 28
MDAP[R], 28
SHP[1], 23
SHP[1], 25
SRP1[], 25
SHP[1], 26
MIAP[R], 12, 10
MDRP[m&gt;RWh], 32
SHP[1], 20
SRP1[], 20
SHP[1], 29
CALL[], 17, 7, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="848">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x440 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 82, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="849">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x441 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 69, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="850">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4ab */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 69, 0, 0
OFFSET[R], 412, -94, -5


/*SVTCA[Y]
CALL[], 59, 28, 0, 0, 63, 86
SHC[2], 1
SVTCA[X]
CALL[], 44, 37, 30, 24, 6, 87
SHC[2], 1*/
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="851">
      <instructions>
        <talk>/* VTTTalk glyph 851, char 0x433 */
/* GUI generated Thu Oct  1 16:33:30 2020 */

/* Y direction */
ResYAnchor(8,7)
YShift(8,0)
ResYAnchor(28,11)
YShift(28,20)
YInterpolate(8,11,37,34,14,17,31,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 851, char 0x433 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 8, 7, 114
SHP[2], 0
CALL[], 28, 11, 114
SHP[2], 20
SRP2[], 8
SLOOP[], 6
IP[], 11, 37, 34, 14, 17, 31
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="852">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 851, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="853">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 236, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="854">
      <instructions>
        <talk>/* VTTTalk glyph 854, char 0x493 */
/* GUI generated Mon Oct  5 10:28:57 2020 */

/* Y direction */
ResYAnchor(8,7)
YShift(8,0)
YShift(8,3)
ResYAnchor(29,11)
YShift(29,21)
YShift(29,24)
YIPAnchor(29,42,8)
YInterpolate(29,32,18,42)
YInterpolate(42,39,11,8)
YShift(42,45)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 854, char 0x493 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 8, 7, 114
SHP[2], 0
SHP[2], 3
CALL[], 29, 11, 114
SHP[2], 21
SHP[2], 24
SRP1[], 8
IP[], 42
MDAP[R], 42
IP[], 32
IP[], 18
SRP2[], 8
IP[], 39
IP[], 11
SHP[1], 45
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="855">
      <instructions>
        <talk>/* VTTTalk glyph 855, char 0x491 */
/* GUI generated Mon Oct  5 10:29:37 2020 */

/* Y direction */
ResYAnchor(4,6)
YDist(4,6,&gt;=)
YShift(4,1)
YShift(1,12)
ResYAnchor(8,11)
YShift(8,14)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 855, char 0x491 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 4, 6, 114
MDRP[m&gt;RWh], 6
SHP[1], 1
SRP1[], 1
SHP[1], 12
CALL[], 8, 11, 114
SHP[2], 14
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="856">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x453 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 851, 0, 0
OFFSET[R], 117, -15, 0


/*SVTCA[Y]
CALL[], 51, 8, 1, 1, 102, 86
SHC[2], 1
SVTCA[X]
CALL[], 40, 47, 31, 56, 11, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 8, 7, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="857">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x445 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="858">
      <instructions>
        <talk>/* VTTTalk glyph 858, char 0x4b3 */
/* GUI generated Mon Oct  5 10:31:56 2020 */

/* Y direction */
ResYAnchor(8,6)
YShift(8,19)
YShift(8,32)
YShift(32,29)
ResYAnchor(25,11)
YShift(25,2)
YShift(25,26)
YAnchor(26)
YShift(26,37)
YShift(26,38)
YDist(26,40,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 858, char 0x4b3 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 8, 6, 114
SHP[2], 19
SHP[2], 32
SRP1[], 32
SHP[1], 29
CALL[], 25, 11, 114
SHP[2], 2
SHP[2], 26
MDAP[R], 26
SHP[1], 37
SHP[1], 38
MDRP[m&gt;RGr], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="859">
      <instructions>
        <talk>/* VTTTalk glyph 859, char 0x44a */
/* GUI generated Mon Oct  5 10:32:26 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,25)
ResYAnchor(14,6)
YShift(14,9)
YShift(9,16)
YShift(9,34)
YAnchor(34)
YShift(34,31)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 859, char 0x44a */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 25
CALL[], 14, 6, 114
SHP[2], 9
SRP1[], 9
SHP[1], 16
SHP[1], 34
MDAP[R], 34
SHP[1], 31
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="860">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 859, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="861">
      <instructions>
        <talk>/* VTTTalk glyph 861, char 0x4ff */
/* GUI generated Mon Oct  5 10:34:05 2020 */

/* Y direction */
ResYAnchor(2,6)
YShift(2,20)
YAnchor(20)
YShift(20,31)
YAnchor(37)
YShift(37,8)
YAnchor(8)
YShift(37,14)
YIPAnchor(2,43,37)
YShift(43,40)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 861, char 0x4ff */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 20
MDAP[R], 20
SHP[1], 31
MDAP[R], 37
SHP[1], 8
MDAP[R], 8
SRP1[], 37
SHP[1], 14
IP[], 43
MDAP[R], 43
SHP[1], 40
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="862">
      <instructions>
        <talk>/* VTTTalk glyph 862, char 0x20b4 */
/* GUI generated Mon Oct  5 10:36:21 2020 */

/* Y direction */
ResYAnchor(11,12)
YShift(11,58)
ResYAnchor(38,4)
YShift(38,31)
YIPAnchor(11,1,38)
YInterpolate(11,14,55,1)
YInterpolate(1,28,41,38)
YShift(1,2)
YDist(1,7,&gt;=)
YShift(7,4)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 862, char 0x20b4 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 11, 12, 114
SHP[2], 58
CALL[], 38, 4, 114
SHP[2], 31
SRP2[], 11
IP[], 1
MDAP[R], 1
IP[], 14
IP[], 55
SRP2[], 38
IP[], 28
IP[], 41
SHP[1], 2
MDRP[m&gt;RGr], 7
SHP[2], 4
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="863">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="864">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x438 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="865">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x435 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="866">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4d7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 865, 0, 0
OFFSET[R], 826, -62, 0


/*SVTCA[Y]
CALL[], 44, 3, 1, 1, 136, 86
SHC[2], 1
SVTCA[X]
CALL[], 47, 41, 39, 49, 9, 87
SHC[2], 1*/





SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="867">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf511 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 865, 0, 0
OFFSET[R], 112, -34, 0


/*SVTCA[Y]
CALL[], 40, 3, 1, 1, 165, 86
SHC[2], 1
SVTCA[X]
CALL[], 40, 42, 39, 47, 9, 87
SHC[2], 1*/




SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="868">
      <instructions>
        <talk>/* VTTTalk glyph 868, char 0x454 */
/* GUI generated Mon Oct  5 10:03:19 2020 */

/* Y direction */
ResYAnchor(7,7)
YShift(7,13)
YAnchor(13)
YShift(7,18)
ResYAnchor(32,11)
YShift(32,24)
YIPAnchor(32,3,7)
YShift(3,0)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 868, char 0x454 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 7, 7, 114
SHP[2], 13
MDAP[R], 13
SHP[2], 18
CALL[], 32, 11, 114
SHP[2], 24
SRP1[], 7
IP[], 3
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="869">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 186, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="870">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x45d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 186, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="871">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x451 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 172, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="872">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x439 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 826, -71, 0


/*SVTCA[Y]
CALL[], 35, 5, 1, 1, 132, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 32, 14, 40, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="873">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 826, -71, 0


/*SVTCA[Y]
CALL[], 35, 5, 1, 1, 132, 86
SHC[2], 2
SVTCA[X]
CALL[], 38, 32, 14, 40, 9, 87
SHC[2], 2*/



SVTCA[Y]
CALL[], 15, 6, 114
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="874">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x456 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 75, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="875">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x458 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 76, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="876">
      <instructions>
        <talk>/* VTTTalk glyph 876, char 0x43a */
/* GUI generated Mon Oct  5 10:44:19 2020 */

/* Y direction */
ResYAnchor(10,7)
YShift(10,1)
YShift(10,16)
YAnchor(16)
ResYAnchor(23,6)
ResYAnchor(28,11)
YInterpolate(28,5,29,6,30,31,23)
YShift(28,36)
YAnchor(36)
YShift(36,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 876, char 0x43a */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 10, 7, 114
SHP[2], 1
SHP[2], 16
MDAP[R], 16
CALL[], 23, 6, 114
CALL[], 28, 11, 114
SRP1[], 23
SLOOP[], 5
IP[], 5, 29, 6, 30, 31
SHP[2], 36
MDAP[R], 36
SHP[1], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="877">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="878">
      <instructions>
        <talk>/* VTTTalk glyph 878, char 0x4a1 */
/* GUI generated Mon Oct  5 10:45:48 2020 */

/* Y direction */
ResYAnchor(10,7)
YShift(10,1)
YShift(10,16)
YAnchor(16)
ResYAnchor(22,6)
YShift(22,17)
ResYAnchor(28,11)
YShift(28,38)
YAnchor(38)
YInterpolate(28,5,31,32,6,33,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 878, char 0x4a1 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 10, 7, 114
SHP[2], 1
SHP[2], 16
MDAP[R], 16
CALL[], 22, 6, 114
SHP[2], 17
CALL[], 28, 11, 114
SHP[2], 38
MDAP[R], 38
SRP1[], 22
SLOOP[], 5
IP[], 5, 31, 32, 6, 33
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="879">
      <instructions>
        <talk>/* VTTTalk glyph 879, char 0x49b */
/* GUI generated Mon Oct  5 10:47:05 2020 */

/* Y direction */
ResYAnchor(6,6)
YAnchor(11,11)
YInterpolate(11,17,33,34,18,35,6)
YShift(11,30)
YAnchor(30)
YShift(30,43)
YShift(43,36)
ResYAnchor(22,7)
YShift(22,13)
YShift(22,28)
YAnchor(28)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 879, char 0x49b */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 6, 6, 114
MIAP[R], 11, 11
SLOOP[], 5
IP[], 17, 33, 34, 18, 35
SHP[1], 30
MDAP[R], 30
SHP[1], 43
SRP1[], 43
SHP[1], 36
CALL[], 22, 7, 114
SHP[2], 13
SHP[2], 28
MDAP[R], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="880">
      <instructions>
        <talk>/* VTTTalk glyph 880, char 0x49d */
/* GUI generated Mon Oct  5 10:48:38 2020 */

/* Y direction */
ResYAnchor(10,7)
YShift(10,1)
YShift(10,16)
YAnchor(16)
ResYAnchor(23,6)
ResYAnchor(28,11)
YIPAnchor(28,39,42,23)
YInterpolate(39,5,29,30,6,31,42)
YAnchor(36,11)
YShift(36,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 880, char 0x49d */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 10, 7, 114
SHP[2], 1
SHP[2], 16
MDAP[R], 16
CALL[], 23, 6, 114
CALL[], 28, 11, 114
SRP1[], 23
IP[], 39
IP[], 42
MDAP[R], 39
MDAP[R], 42
SRP2[], 39
SLOOP[], 5
IP[], 5, 29, 30, 6, 31
MIAP[R], 36, 11
SHP[1], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="881">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x45c */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 876, 0, 0
OFFSET[R], 117, -5, 0


/*SVTCA[Y]
CALL[], 50, 22, 1, 1, 117, 86
SHC[2], 3
SVTCA[X]
CALL[], 39, 46, 20, 128, 24, 87
SHC[2], 3*/




SVTCA[Y]
CALL[], 23, 6, 114
MDRP[m&gt;RWh], 50

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="882">
      <instructions>
        <talk>/* VTTTalk glyph 882, char 0x459 */
/* GUI generated Mon Oct  5 10:52:08 2020 */

/* Y direction */
ResYAnchor(19,6)
YAnchor(41)
YShift(41,26)
YInterpolate(41,33,32,34,35,2,19)
YShift(41,6)
YAnchor(6)
YShift(6,12)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 882, char 0x459 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 19, 6, 114
MDAP[R], 41
SHP[1], 26
SLOOP[], 5
IP[], 33, 32, 34, 35, 2
SHP[1], 6
MDAP[R], 6
SHP[1], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="883">
      <instructions>
        <talk>/* VTTTalk glyph 883, char 0x45a */
/* GUI generated Mon Oct  5 10:52:54 2020 */

/* Y direction */
ResYAnchor(6,6)
ResYAnchor(26,11)
YShift(26,11)
YAnchor(11)
YShift(26,39)
ResYAnchor(33,7)
YIPAnchor(33,20,26)
YShift(20,45)

YInterpolate(6,17,12,15,14,26)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 883, char 0x45a */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 6, 6, 114
CALL[], 26, 11, 114
SHP[2], 11
MDAP[R], 11
SHP[2], 39
CALL[], 33, 7, 114
SRP1[], 26
IP[], 20
MDAP[R], 20
SHP[1], 45
SRP1[], 6
SRP2[], 26
SLOOP[], 4
IP[], 17, 12, 15, 14
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="884">
      <instructions>
        <talk>/* VTTTalk glyph 884, char 0x4e9 */
/* GUI generated Mon Oct  5 10:54:06 2020 */

/* Y direction */
ResYAnchor(3,7)
YShift(3,21)
ResYAnchor(9,11)
YShift(9,15)
YIPAnchor(9,28,3)
YShift(28,25)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 884, char 0x4e9 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 3, 7, 114
SHP[2], 21
CALL[], 9, 11, 114
SHP[2], 15
SRP1[], 3
IP[], 28
MDAP[R], 28
SHP[1], 25
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="885">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf51b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 826, -57, 0


/*SVTCA[Y]
CALL[], 28, 3, 1, 1, 137, 86
SHC[2], 2
SVTCA[X]
CALL[], 31, 25, 11, 44, 5, 87
SHC[2], 2*/

SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="886">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x43e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="887">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4e7 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 105, -32, 0
USEMYMETRICS[]
OFFSET[R], 81, 0, 0


/*SVTCA[Y]
CALL[], 9, 27, 1, 1, 154, 86
SHC[2], 0
SHC[2], 1
SVTCA[X]
CALL[], 12, 6, 35, 43, 29, 87
SHC[2], 0
SHC[2], 1*/

SVTCA[Y]
CALL[], 27, 7, 114
MDRP[m&gt;RWh], 21
MDRP[m&gt;RWh], 9

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="888">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf519 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 112, -38, 0


/*SVTCA[Y]
CALL[], 24, 3, 1, 1, 166, 86
SHC[2], 2
SVTCA[X]
CALL[], 24, 26, 11, 42, 5, 87
SHC[2], 2*/

SVTCA[Y]
CALL[], 3, 7, 114
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]





</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="889">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4cf */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 78, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="890">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x43f */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="891">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="892">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 300, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="893">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4d9 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 381, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="894">
      <instructions>
        <talk>/* VTTTalk glyph 894, char 0x448 */
/* GUI generated Mon Oct  5 10:57:35 2020 */

/* Y direction */
ResYAnchor(4,6)
ResYAnchor(17,10)
YShift(17,10)
YShift(10,14)
YShift(14,13)
YShift(17,30)
YShift(30,23)
YShift(23,27)
YShift(27,26)
ResYAnchor(36,7)
YShift(36,43)
YAnchor(43)
ResYAnchor(38,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 894, char 0x448 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 4, 6, 114
CALL[], 17, 10, 114
SHP[2], 10
SRP1[], 10
SHP[1], 14
SRP1[], 14
SHP[1], 13
SHP[2], 30
SRP1[], 30
SHP[1], 23
SRP1[], 23
SHP[1], 27
SRP1[], 27
SHP[1], 26
CALL[], 36, 7, 114
SHP[2], 43
MDAP[R], 43
CALL[], 38, 11, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="895">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 894, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="896">
      <instructions>
        <talk>/* VTTTalk glyph 896, char 0x449 */
/* GUI generated Mon Oct  5 10:58:58 2020 */

/* Y direction */
ResYAnchor(4,6)
ResYAnchor(17,10)
YShift(17,10)
YShift(10,14)
YShift(14,13)
YShift(17,30)
YShift(30,23)
YShift(23,27)
YShift(27,26)
YShift(17,38)
YAnchor(38)
YDist(38,51,&gt;=)
YShift(38,53)
YShift(53,46)
ResYAnchor(36,7)
YShift(36,43)
YAnchor(43)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 896, char 0x449 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 4, 6, 114
CALL[], 17, 10, 114
SHP[2], 10
SRP1[], 10
SHP[1], 14
SRP1[], 14
SHP[1], 13
SHP[2], 30
SRP1[], 30
SHP[1], 23
SRP1[], 23
SHP[1], 27
SRP1[], 27
SHP[1], 26
SHP[2], 38
MDAP[R], 38
MDRP[m&gt;RGr], 51
SHP[1], 53
SRP1[], 53
SHP[1], 46
CALL[], 36, 7, 114
SHP[2], 43
MDAP[R], 43
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="897">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 896, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="898">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4bb */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 74, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="899">
      <instructions>
        <talk>/* VTTTalk glyph 899, char 0x44c */
/* GUI generated Mon Oct  5 10:59:43 2020 */

/* Y direction */
ResYAnchor(15,11)
YShift(15,0)
ResYAnchor(22,6)
YInterpolate(15,6,9,22)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 899, char 0x44c */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 15, 11, 114
SHP[2], 0
CALL[], 22, 6, 114
SRP2[], 15
IP[], 6
IP[], 9
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="900">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 899, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="901">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x442 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 79, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="902">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 79, 0, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="903">
      <instructions>
        <talk>/* VTTTalk glyph 903, char 0xffff */
/* GUI generated Mon Oct  5 11:04:08 2020 */

/* Y direction */
ResYAnchor(9,6)
YDist(9,0,&gt;=)
YShift(0,1)
YShift(9,40)
YAnchor(40)
YShift(40,47)
YAnchor(47)
ResYAnchor(21,11)
YShift(21,14)
YShift(14,18)
YShift(18,17)
YShift(21,34)
YAnchor(34)
YShift(34,27)
YShift(27,31)
YShift(31,30)
YShift(34,42)
YAnchor(42)
YShift(42,50)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 903, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 9, 6, 114
MDRP[m&gt;RWh], 0
SHP[2], 1
SHP[1], 40
MDAP[R], 40
SHP[1], 47
MDAP[R], 47
CALL[], 21, 11, 114
SHP[2], 14
SRP1[], 14
SHP[1], 18
SRP1[], 18
SHP[1], 17
SHP[2], 34
MDAP[R], 34
SHP[1], 27
SRP1[], 27
SHP[1], 31
SRP1[], 31
SHP[1], 30
SRP1[], 34
SHP[1], 42
MDAP[R], 42
SHP[1], 50
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="904">
      <instructions>
        <talk>/* VTTTalk glyph 904, char 0x4ad */
/* GUI generated Mon Oct  5 11:05:20 2020 */

/* Y direction */
YAnchor(0,11)
YShift(0,12)
YAnchor(12)
YShift(12,48)
YAnchor(48)
YDist(48,51,&gt;=)
YShift(48,53)
YShift(53,46)
YShift(53,47)
YShift(47,50)
ResYAnchor(6,6)
ResYAnchor(24,7)
YShift(24,17)
YShift(17,21)
YShift(21,20)
YShift(17,38)
YShift(38,37)
YShift(24,41)
YShift(41,34)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 904, char 0x4ad */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 12
MDAP[R], 12
SHP[1], 48
MDAP[R], 48
MDRP[m&gt;RGr], 51
SHP[1], 53
SRP1[], 53
SHP[1], 46
SHP[1], 47
SRP1[], 47
SHP[1], 50
CALL[], 6, 6, 114
CALL[], 24, 7, 114
SHP[2], 17
SRP1[], 17
SHP[1], 21
SRP1[], 21
SHP[1], 20
SRP1[], 17
SHP[1], 38
SRP1[], 38
SHP[1], 37
SHP[2], 41
SRP1[], 41
SHP[1], 34
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="905">
      <instructions>
        <talk>/* VTTTalk glyph 905, char 0x20b8 */
/* GUI generated Wed Oct  7 11:28:12 2020 */

/* Y direction */
ResYAnchor(1,2)
YShift(1,0)
YDist(1,5,&gt;=2)
YShift(5,21)
YShift(21,10)
YAnchor(16,8)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 905, char 0x20b8 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 0
SMD[], 128
MDRP[m&gt;RGr], 5
SHP[2], 21
SRP1[], 21
SHP[1], 10
MIAP[R], 16, 8
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="906">
      <instructions>
        <talk>/* VTTTalk glyph 906, char 0x446 */
/* GUI generated Mon Oct  5 13:47:12 2020 */

/* Y direction */
ResYAnchor(5,7)
ResYAnchor(15,6)
ResYAnchor(28,10)
YDist(28,33,&gt;=)
YShift(28,0)
YAnchor(0)
YShift(0,8)
YShift(8,35)
YShift(28,21)
YShift(21,25)
YShift(25,24)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 906, char 0x446 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 5, 7, 114
CALL[], 15, 6, 114
CALL[], 28, 10, 114
MDRP[m&gt;RGr], 33
SHP[1], 0
MDAP[R], 0
SHP[1], 8
SRP1[], 8
SHP[1], 35
SRP1[], 28
SHP[1], 21
SRP1[], 21
SHP[1], 25
SRP1[], 25
SHP[1], 24
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="907">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 906, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="908">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x45b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 232, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="909">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x443 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="910">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4f1 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 105, -115, 0
USEMYMETRICS[]
OFFSET[R], 909, 0, 0


/*SVTCA[Y]
CALL[], 9, 49, 1, 1, 157, 86
SHC[2], 0
SHC[2], 1
SVTCA[X]
CALL[], 12, 6, 24, 47, 52, 87
SHC[2], 0
SHC[2], 1*/


SVTCA[Y]
CALL[], 49, 7, 114
MDRP[m&gt;RWh], 9
MDRP[m&gt;RWh], 21

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="911">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4f3 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 393, -115, 0


/*SVTCA[Y]
CALL[], 47, 13, 1, 1, 115, 86
SHC[2], 1
SHC[2], 2
SVTCA[X]
CALL[], 36, 55, 0, 52, 28, 87
SHC[2], 1
SHC[2], 2*/


SVTCA[Y]
CALL[], 25, 7, 114
MDRP[m&gt;RWh], 47
MDRP[m&gt;RWh], 59

IUP[Y]
IUP[X]






</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="912">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4ef */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 112, -96, 0


/*SVTCA[Y]
CALL[], 36, 13, 1, 1, 181, 86
SHC[2], 1
SVTCA[X]
CALL[], 36, 38, 0, 48, 28, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 25, 7, 114
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]



</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="913">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x45e */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 826, -135, 0


/*SVTCA[Y]
CALL[], 40, 25, 1, 1, 140, 86
SHC[2], 1
SVTCA[X]
CALL[], 43, 37, 0, 48, 28, 87
SHC[2], 1*/


SVTCA[Y]
CALL[], 25, 7, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]




</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="914">
      <instructions>
        <talk>/* VTTTalk glyph 914, char 0x4af */
/* GUI generated Mon Oct  5 13:56:19 2020 */

/* Y direction */
ResYAnchor(2,6)
YShift(2,14)
YAnchor(14)
ResYAnchor(24,14)
YInterpolate(24,20,26,5,2)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 914, char 0x4af */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 14
MDAP[R], 14
CALL[], 24, 14, 114
SRP1[], 2
SLOOP[], 3
IP[], 20, 26, 5
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="915">
      <instructions>
        <talk>/* VTTTalk glyph 915, char 0x4b1 */
/* GUI generated Mon Oct  5 13:57:35 2020 */

/* Y direction */
ResYAnchor(2,6)
YShift(2,14)
YAnchor(14)
YAnchor(24,14)
YIPAnchor(24,31,2)
YInterpolate(24,26,20,31)
YInterpolate(31,5,2)
YShift(31,32)

/* X direction */

Smooth()

</talk>
        <assembly>/* TT glyph 915, char 0x4b1 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 14
MDAP[R], 14
MIAP[R], 24, 14
IP[], 31
MDAP[R], 31
SRP2[], 24
IP[], 26
IP[], 20
SRP2[], 2
IP[], 5
SHP[1], 32
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="916">
      <instructions>
        <talk>/* VTTTalk glyph 916, char 0x432 */
/* GUI generated Mon Oct  5 13:58:07 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,19)
ResYAnchor(6,7)
YShift(6,34)
YInterpolate(0,26,6)
YShift(26,27)
YShift(27,13,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 916, char 0x432 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 19
CALL[], 6, 7, 114
SHP[2], 34
SRP2[], 0
IP[], 26
SRP1[], 26
SHP[1], 27
SRP1[], 27
SHP[1], 13
SHP[1], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="917">
      <instructions>
        <talk>/* VTTTalk glyph 917, char 0xffff */
/* GUI generated Mon Oct  5 13:59:10 2020 */

/* Y direction */
YAnchor(4)
YShift(4,20)
ResYAnchor(17,11)
YShift(17,34)
YIPAnchor(4,41,17)
YShift(41,24)
YShift(24,10,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 917, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
MDAP[R], 4
SHP[1], 20
CALL[], 17, 11, 114
SHP[2], 34
SRP2[], 4
IP[], 41
MDAP[R], 41
SHP[1], 24
SRP1[], 24
SHP[1], 10
SHP[1], 11
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="918">
      <instructions>
        <talk>/* VTTTalk glyph 918, char 0x44f */
/* GUI generated Tue Oct  6 10:56:48 2020 */

/* Y direction */
ResYAnchor(5,11)
YShift(5,11)
ResYAnchor(25,6)
YShift(25,28)
YShift(25,29)
YIPAnchor(5,19,25)
YShift(19,48)
YShift(48,16)
YShift(16,15)
YShift(15,14)
YShift(14,2)
YShift(25,42)
YShift(42,0)
YShift(0,1)
YShift(1,38)
ResYAnchor(36,11)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 918, char 0x44f */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 5, 11, 114
SHP[2], 11
CALL[], 25, 6, 114
SHP[2], 28
SHP[2], 29
SRP2[], 5
IP[], 19
MDAP[R], 19
SHP[1], 48
SRP1[], 48
SHP[1], 16
SRP1[], 16
SHP[1], 15
SRP1[], 15
SHP[1], 14
SRP1[], 14
SHP[1], 2
SRP1[], 25
SHP[1], 42
SRP1[], 42
SHP[1], 0
SRP1[], 0
SHP[1], 1
SRP1[], 1
SHP[1], 38
CALL[], 36, 11, 114
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="919">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf529 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 918, 0, 0
OFFSET[R], 112, 7, 0


/*SVTCA[Y]
CALL[], 51, 28, 1, 1, 215, 86
SHC[2], 1
SVTCA[X]
CALL[], 51, 53, 8, 49, 34, 87
SHC[2], 1*/



SVTCA[Y]
CALL[], 25, 6, 114
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="920">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x44b */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 899, 0, 0
OFFSET[R], 242, 880, 0
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="921">
      <instructions>
        <talk>/* VTTTalk glyph 921, char 0x457 */
/* GUI generated Tue Oct  6 10:59:09 2020 */

/* Y direction */
ResYAnchor(0,11)
YShift(0,10)
ResYAnchor(6,6)
YDist(6,22,&gt;=)
YShift(22,16)
YShift(22,34)
YAnchor(34)
YShift(34,28)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 921, char 0x457 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 10
CALL[], 6, 6, 114
MDRP[m&gt;RWh], 22
SHP[2], 16
SHP[2], 34
MDAP[R], 34
SHP[1], 28
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="922">
      <instructions>
        <talk>/* VTTTalk glyph 922, char 0x44e */
/* GUI generated Tue Oct  6 11:00:29 2020 */

/* Y direction */
ResYAnchor(6,6)
ResYAnchor(19,7)
YShift(19,37)
ResYAnchor(25,11)
YShift(25,11)
YAnchor(11)
YShift(25,31)
YIPAnchor(25,15,19)
YShift(15,12)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 922, char 0x44e */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 6, 6, 114
CALL[], 19, 7, 114
SHP[2], 37
CALL[], 25, 11, 114
SHP[2], 11
MDAP[R], 11
SHP[2], 31
SRP1[], 19
IP[], 15
MDAP[R], 15
SHP[1], 12
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="923">
      <instructions>
        <talk>/* VTTTalk glyph 923, char 0xffff */
/* GUI generated Tue Oct  6 11:01:32 2020 */

/* Y direction */
ResYAnchor(3,7)
YShift(3,21)
ResYAnchor(9,11)
YShift(9,15)
YIPAnchor(9,38,3)
YShift(38,35)
ResYAnchor(24,11)
ResYAnchor(30,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 923, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 3, 7, 114
SHP[2], 21
CALL[], 9, 11, 114
SHP[2], 15
SRP1[], 3
IP[], 38
MDAP[R], 38
SHP[1], 35
CALL[], 24, 11, 114
CALL[], 30, 0, 114
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="924">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0xf52d */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 922, 0, 0
OFFSET[R], 112, 138, 0


/*SVTCA[Y]
CALL[], 40, 19, 1, 1, 166, 86
SHC[2], 4
SVTCA[X]
CALL[], 40, 42, 3, 35, 21, 87
SHC[2], 4*/


SVTCA[Y]
CALL[], 19, 7, 114
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="925">
      <instructions>
        <talk>/* VTTTalk glyph 925, char 0x437 */
/* GUI generated Tue Oct  6 11:03:16 2020 */

/* Y direction */
ResYAnchor(23,7)
YShift(23,15)
ResYAnchor(36,11)
YShift(36,0)
YIPAnchor(36,6,23)
YShift(6,9)
YShift(9,29,30)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 925, char 0x437 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 23, 7, 114
SHP[2], 15
CALL[], 36, 11, 114
SHP[2], 0
SRP1[], 23
IP[], 6
MDAP[R], 6
SHP[1], 9
SRP1[], 9
SHP[1], 29
SHP[1], 30
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="926">
      <instructions>
        <talk>/* VTTTalk glyph 926, char 0xffff */
/* GUI generated Tue Oct  6 11:09:30 2020 */

/* Y direction */
ResYAnchor(3,15)
YShift(3,6)
ResYAnchor(29,7)
YShift(29,21)
YIPAnchor(3,12,29)
YShift(12,15)
YShift(15,35,36)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 926, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 3, 15, 114
SHP[2], 6
CALL[], 29, 7, 114
SHP[2], 21
SRP2[], 3
IP[], 12
MDAP[R], 12
SHP[1], 15
SRP1[], 15
SHP[1], 35
SHP[1], 36
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="927">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x499 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 925, 0, 0
OFFSET[R], 121, -110, 0


/*SVTCA[Y]
CALL[], 75, 36, 0, 0, 68, 86
SHC[2], 1
SVTCA[X]
CALL[], 60, 53, 39, 24, 26, 87
SHC[2], 1*/


</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="928">
      <instructions>
        <talk>/* VTTTalk glyph 928, char 0x436 */
/* GUI generated Tue Oct  6 11:12:00 2020 */

/* Y direction */
ResYAnchor(34,11)
YShift(34,40)
YAnchor(40)
YShift(34,45)
YShift(34,70)
YAnchor(70)
YShift(34,28)
YShift(28,20)
ResYAnchor(59,7)
YShift(59,51)
YShift(59,65)
YAnchor(65)
YShift(59,3)
YShift(3,9)
YAnchor(9)
YShift(3,14)
YInterpolate(34,77,59)
YShift(77,72)
YShift(77,75)
YShift(75,74)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 928, char 0x436 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 34, 11, 114
SHP[2], 40
MDAP[R], 40
SHP[2], 45
SHP[2], 70
MDAP[R], 70
SHP[2], 28
SRP1[], 28
SHP[1], 20
CALL[], 59, 7, 114
SHP[2], 51
SHP[2], 65
MDAP[R], 65
SHP[2], 3
SRP1[], 3
SHP[1], 9
MDAP[R], 9
SRP1[], 3
SHP[1], 14
SRP1[], 34
IP[], 77
SRP1[], 77
SHP[1], 72
SHP[1], 75
SRP1[], 75
SHP[1], 74
IUP[Y]
IUP[X]

</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="929">
      <instructions>
        <talk>/* VTTTalk glyph 929, char 0xffff */
/* GUI generated Tue Oct  6 11:14:41 2020 */

/* Y direction */
YAnchor(12,16)
YShift(12,21)
YAnchor(21)
YAnchor(25)
YShift(25,5)
YAnchor(5)
YShift(25,40)
YAnchor(40)
YInterpolate(25,17,9,16,18,44,1,36,0,12)
YAnchor(31,0)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 929, char 0xffff */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
MIAP[R], 12, 16
SHP[1], 21
MDAP[R], 21
MDAP[R], 25
SHP[1], 5
MDAP[R], 5
SRP1[], 25
SHP[1], 40
MDAP[R], 40
SRP1[], 25
SRP2[], 12
SLOOP[], 8
IP[], 17, 9, 16, 18, 44, 1, 36, 0
MIAP[R], 31, 0
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="930">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4c2 */
/* ACT generated Thu Sep 24 10:35:16 2020 */

USEMYMETRICS[]
OFFSET[R], 928, 0, 0
OFFSET[R], 826, 312, 0


/*SVTCA[Y]
CALL[], 82, 59, 1, 1, 136, 86
SHC[2], 4
SVTCA[X]
CALL[], 85, 79, 37, 37, 6, 87
SHC[2], 4*/




SVTCA[Y]
CALL[], 59, 7, 114
MDRP[m&gt;RWh], 82

IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="931">
      <instructions>
        <talk>/* VTTTalk glyph 931, char 0x497 */
/* GUI generated Thu Oct  8 16:54:05 2020 */

/* Y direction */
ResYAnchor(38,11)
YShift(38,44)
YAnchor(44)
YShift(38,49)
YShift(38,8)
YAnchor(8)
YShift(8,31)
YShift(31,4)
YShift(4,5)
ResYAnchor(63,7)
YShift(63,55)
YShift(63,14)
YShift(14,20)
YAnchor(20)
YShift(14,25)
YIPAnchor(63,81,38)
YShift(81,76)
YShift(76,35)
YShift(81,79)
YShift(79,78)
YShift(78,11)
YAnchor(69,7)
YAnchor(74,11)
YDist(74,3,&gt;=)

/* X direction */

Smooth()
</talk>
        <assembly>/* TT glyph 931, char 0x497 */
/* VTT 6.33 compiler Tue Oct 13 13:17:12 2020 */
SVTCA[Y]
CALL[], 38, 11, 114
SHP[2], 44
MDAP[R], 44
SHP[2], 49
SHP[2], 8
MDAP[R], 8
SHP[1], 31
SRP1[], 31
SHP[1], 4
SRP1[], 4
SHP[1], 5
CALL[], 63, 7, 114
SHP[2], 55
SHP[2], 14
SRP1[], 14
SHP[1], 20
MDAP[R], 20
SRP1[], 14
SHP[1], 25
SRP1[], 38
IP[], 81
MDAP[R], 81
SHP[1], 76
SRP1[], 76
SHP[1], 35
SRP1[], 81
SHP[1], 79
SRP1[], 79
SHP[1], 78
SRP1[], 78
SHP[1], 11
MIAP[R], 69, 7
MIAP[R], 74, 11
MDRP[m&gt;RWh], 3
IUP[Y]
IUP[X]
</assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph ID="932">
      <instructions>
        <talk></talk>
        <assembly>/* VTTTalk Unicode 0x4dd */
/* ACT generated Thu Sep 24 10:35:16 2020 */

OFFSET[R], 105, 329, 0
USEMYMETRICS[]
OFFSET[R], 928, 0, 0


/*SVTCA[Y]
CALL[], 9, 27, 1, 1, 153, 86
SHC[2], 0
SHC[2], 1
SVTCA[X]
CALL[], 12, 6, 61, 36, 30, 87
SHC[2], 0
SHC[2], 1*/




SVTCA[Y]
CALL[], 83, 7, 114
MDRP[m&gt;RWh], 9
MDRP[m&gt;RWh], 21

IUP[Y]
IUP[X]


</assembly>
      </instructions>
    </TTGlyph>
  </glyf>
</ttFont>